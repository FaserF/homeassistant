---
homeassistant:
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      trusted_networks:
        - 127.0.0.1
        - ::1
        - 192.168.0.0/24
        - 2001:DB8:ABCD::/48
        - fd00::/8
        - 172.30.33.0/24
      allow_bypass_login: true
    # - type: legacy_api_password
    #   api_password: !secret http_password
  allowlist_external_dirs:
    - "/share/scripts"
    - "/media/netboot"
  media_dirs:
    media: "/media"

default_config:
input_boolean:
config:
system_health:
api:
mobile_app:

zone:
  # This will override the default home zone
  - name: Home
    latitude: !secret latitude
    longitude: !secret longitude
    radius: 100
    icon: mdi:account-multiple

  - name: Arbeit Fabi
    latitude: !secret latitude_work
    longitude: !secret longitude_work
    radius: 250
    icon: mdi:school

  - name: Arbeit Fabi WHM
    latitude: !secret latitude_work_whm
    longitude: !secret longitude_work_whm
    radius: 250
    icon: mdi:school

  - name: Arbeit Fabi MUC
    latitude: !secret latitude_work_muc
    longitude: !secret longitude_work_muc
    radius: 250
    icon: mdi:school

  - name: Arbeit Fabi GIL
    latitude: !secret latitude_work_gil
    longitude: !secret longitude_work_gil
    radius: 250
    icon: mdi:school

  - name: Arbeit Nessie
    latitude: !secret latitude_work_nessie
    longitude: !secret longitude_work_nessie
    radius: 250
    icon: mdi:school

http:
  ssl_certificate: !secret ssl_certificate
  ssl_key: !secret ssl_key
  use_x_forwarded_for: true
  ip_ban_enabled: true
  login_attempts_threshold: 4
  # server_port: !secret port
  trusted_proxies:
    - 127.0.0.1
    - 192.168.0.0/16
    - 172.30.0.0/18 # NGINX Proxy Manager
    - 172.30.33.0/24 # NGINX Proxy Manager
    - 172.30.33.7
    - 103.21.244.0/22 # Here and below -> Cloudflare
    - 103.22.200.0/22
    - 103.31.4.0/22
    - 104.16.0.0/12
    - 108.162.192.0/18
    - 131.0.72.0/22
    - 141.101.64.0/18
    - 162.158.0.0/15
    - 172.64.0.0/13
    - 173.245.48.0/20
    - 188.114.96.0/20
    - 190.93.240.0/20
    - 197.234.240.0/22
    - 198.41.128.0/17

recorder:
  purge_keep_days: 7
  exclude:
    domains:
      - automation
      - weblink
      - updater
      - scene
      - calendar
      - input_select
      - input_button
      - counter
    entities:
      - sun.sun # Don't record sun data
      - sensor.last_boot # Comes from 'systemmonitor' sensor platform
      - sensor.date
      - sensor.fsphone_charging
      - sensor.vkphone_charging
      - sensor.fs_smspin
      - sensor.fs_caller
      - sensor.lichtschalter
      - sensor.deckenlampe
      - sensor.strip_keller
      - sensor.coal_lighter_finish_duration
      - sensor.washing_machine_finish_duration
      - sensor.washing_machine_finish_time
      - sensor.washing_machine_mode
      - sensor.washing_machine_state
      - sensor.dwd_weather_warnings_advance_warning_level
      - sensor.dwd_weather_warnings_current_warning_level
      - counter.pille
      - sensor.xiaomi_miio_cooker_favorite
      - sensor.xiaomi_miio_cooker_duration
      - sensor.xiaomi_abd8_uptime
      - sensor.xiaomi_89fb_7604_uptime
      - sensor.fritz_box_3490_device_uptime
      - sensor.fritz_box_3490_connection_uptime
      - sensor.fritz_box_3490_max_kbit_s_sent
      - sensor.fritz_box_3490_max_kbit_s_received
      - sensor.unavailable_entities
      - switch.rpi_cooling_fan

# Discover some devices automatically
discovery:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

logger:
  filters:
    custom_components.prismatik.prismatik:
      - "Could not connect to Prismatik at*"
      - "Could not connect to Prismatik at 192.168.178.16:3636"
    custom_components.xiaomi_miio_cooker:
      - "Got exception while fetching the state: Unable to discover the device 192.168.31.195"
    custom_components.miwifi.updater:
      - "connecting to router (attempt #10 of 10): LuciConnectionException*"
      - "Error connecting to router (attempt #$ of 10): LuciConnectionException*"
    homeassistant.helpers.entity:
      - "Update of * is taking over 10 seconds"
    homeassistant.components.switch:
      - "Setup of switch platform adguard is taking over 10 seconds."
    homeassistant.components.sensor:
      - "Setup of sensor platform deutsche_bahn is taking over 10 seconds."
    homeassistant.components.google_maps.device_tracker:
      - "Ignoring * update because timestamp is older than last timestamp"
    homeassistant.components.light:
      - "Setup of light platform prismatik is taking over 10 seconds."
    homeassistant.loader:
      - "You are using a custom integration*"
      - "We found a custom integration * which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant"
    homeassistant.helpers.service:
      - "Unable to find referenced entities$"
    homeassistant.config_entries:
      - "Config entry '192.168.31.159' for miwifi integration not ready yet; Retrying in background"
      - "Config entry '192.168.31.159' for miwifi integration not ready yet: None; Retrying in background"
      - "Config entry 'Fabian-PC' for system_bridge integration not ready yet: Could not connect to System Bridge.; Retrying in background"
      - "Config entry 'Schnuppes-PC' for system_bridge integration not ready yet: Could not connect to System Bridge.; Retrying in background"
      - "Config entry 'Keller TV' for nfandroidtv integration not ready yet: Failed to connect; Retrying in background"
      - "Config entry 'Wohnzimmer TV' for nfandroidtv integration not ready yet: Failed to connect; Retrying in background"
  default: warning
  logs:
    custom_components.foodsharing: debug

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

device_tracker:
  - platform: google_maps
    username: !secret gmaps_mail
    max_gps_accuracy: 1000
    new_device_defaults:
      track_new_devices: False
  - platform: google_maps
    username: !secret vapid_email
    max_gps_accuracy: 1000
    new_device_defaults:
      track_new_devices: True

proximity:
  home_nessie:
    zone: home
    ignored_zones: zone.arbeit_nessie
    devices: person.nessie
    tolerance: 50
  home_fabian:
    zone: home
    ignored_zones: zone.arbeit_fabi
    devices: person.fabian
    tolerance: 50
  home_ka:
    zone: home
    ignored_zones: kai_adri
    devices:
      - person.kai
      - person.adri
    tolerance: 50

telegram_bot:
  - platform: polling
    api_key: !secret telegram_bot_api
    allowed_chat_ids:
      - !secret telegram_chat_fabian
      - !secret telegram_chat_nessie
      - !secret telegram_chat_adrian
      - !secret telegram_chat_kai
      - !secret telegram_chat_flo
      - !secret telegram_chat_maxi
      - !secret telegram_chat_fabio
      - !secret telegram_chat_yannick
      - !secret telegram_chat_lars
      - !secret telegram_chat_5friends
      - !secret telegram_chat_afk
      - !secret telegram_chat_polygon
      - !secret telegram_chat_jutta
      - !secret telegram_chat_juz_group
      - !secret telegram_chat_juz_mail
      - !secret telegram_foodsharing
      - !secret telegram_foodsharing_muc
      - !secret telegram_volleyball

notify:
  - name: telegram_fabian
    platform: telegram
    chat_id: !secret telegram_chat_fabian
  - name: telegram_nessie
    platform: telegram
    chat_id: !secret telegram_chat_nessie
  # - platform: html5
  #   name: browser
  #   vapid_pub_key: !secret vapid_pub_key
  #   vapid_prv_key: !secret vapid_prv_key
  #   vapid_email: !secret vapid_email

media_source:

# media_player:
#   - platform: mpd
#     host: 127.0.0.1

# speedtestdotnet:
#   server_id: 21514

climate:
  - platform: generic_thermostat
    name: RPI Cooling Fan Controller
    heater: switch.rpi_cooling_fan
    target_sensor: sensor.processor_temperature
    min_temp: 30
    max_temp: 80
    ac_mode: true
    target_temp: 45
    cold_tolerance: 0.1
    hot_tolerance: 0.1
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 5
    initial_hvac_mode: "cool"

shell_command:
  # create_keys: 'ssh-keygen -b 2048 -t rsa -f my.key -q -N "" && cp ~/.ssh/id_rsa.pub id_rsa.pub'
  # ssh_command: /usr/bin/ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/my.key test@192.168.1.3 'bash /home/admin/script.sh'
  randomfood: !secret randomfood
  foodyes: !secret foodyes
  unpin_all_telegram: >
    curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "{{ chat_id }}"}' https://api.telegram.org/bot{{ telegram_bot_api }}/unpinAllChatMessages
  pin_telegram: >
    curl -X POST -H 'Content-Type: application/json' -d '{"message_id": "{{ message_id }}", "chat_id": "{{ chat_id }}", "disable_notification": true}' https://api.telegram.org/bot{{ telegram_bot_api }}/pinChatMessage
  hibernatefpc: "curl http://192.168.178.16:5001/hibernate"
  hibernatenpc: "curl http://192.168.178.15:5001/hibernate"
  # overtime_input: !secret overtime_input

# coinbase:
#   api_key: !secret coinbase_key
#   api_secret: !secret coinbase_secret
#   account_balance_currencies:
#     - BTC
#   exchange_rate_currencies:
#     - BTC

waste_collection_schedule:
  sources:
    - name: ics
      args:
        url: !secret waste_url
      customize:
        - type: Restabfall
          alias: Restm√ºll
          icon: mdi:trash-can
        - type: BIO
          alias: Bioabfall
          icon: mdi:flower-outline
        - type: Altpapier
          alias: Papierabfall
          icon: mdi:trash-can-outline
        - type: Gelber Sack
          icon: mdi:recycle

template:
  - sensor:
      - name: "Unavailable Entities"
        unique_id: unavailable_entities
        icon: "{{ 'mdi:alert-circle' if states('sensor.unavailable_entities')|int(0) > 0 else 'mdi:check-circle' }}"
        unit_of_measurement: entities
        state: >
          {% if state_attr('sensor.unavailable_entities','entities') != none %}
            {{ state_attr('sensor.unavailable_entities','entities')|count }}
          {% endif %}
        attributes:
          entities: >
            {% if state_attr('group.ignored_entities','entity_id') != none %}
              {% set ignore_seconds = 360 %}
              {% set ignore_ts = (now().timestamp() - ignore_seconds)|as_datetime %}
              {{ states
                |rejectattr('domain','eq','group')
                |rejectattr('domain','eq','button')
                |rejectattr('domain','eq','automation')
                |rejectattr('domain','eq','device_tracker')
                |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))
                |rejectattr('last_changed','ge',ignore_ts)
                |selectattr('state','in',['unavailable','unknown','none'])|map(attribute='entity_id')|list }}
            {% endif %}

sensor:
  # - platform: rest
  #   name: Switch LAN-Play Online
  #   resource: http://192.168.31.2:11451/info
  #   scan_interval: 600
  #   method: GET
  #   unit_of_measurement: people
  #   json_attributes:
  #     - version
  #     - idle
  #   value_template: "{{value_json.online}}"
  - platform: imap_email_content
    server: imap.ionos.de
    port: 993
    username: !secret juz_mail
    password: !secret juz_mail_pw
    senders:
      - !secret vapid_email
      - !secret juz_mail
      - !secret gerhard_mail
      - !secret fv_mail
      - !secret moser_mail
      - !secret grothe_mail
      - !secret gl_mail
      - !secret simon_mail
      - !secret maxi_mail
      - !secret fabi_yahoo_mail
      - !secret gabi_mail
      - !secret bm_mail
      - !secret jugendpflege_mail
      - !secret asenbeck_mail
      - noreply@ionos.de
  - platform: imap
    server: imap.ionos.de
    username: !secret juz_mail
    password: !secret juz_mail_pw
  # - platform: command_line
  #   name: "Latest Tasmota"
  #   command: l -s https://github.com/arendst/Tasmota/releases/latest | cut -d''"'' -f2 | rev | cut -d''/'' -f1 | cut -c 1- | cut -c -2 | rev'
  #   scan_interval: 86400
  - platform: dwd_illuminance
    entity_id: weather.dwd_weather_ebersberg_1h
  # Waste sensors
  - platform: waste_collection_schedule
    name: Restm√ºll
    details_format: upcoming
    count: 4
    value_template: "{% if value.daysTo == 0 %}Heute{% elif value.daysTo == 1 %}Morgen{% else %}in {{value.daysTo}} Tagen{% endif %}"
    date_template: '{{value.date.strftime("%d.%m.%Y")}}'
    types:
      - "Restabfall"
      - "Restm√ºll"
  - platform: waste_collection_schedule
    name: Altpapier
    details_format: upcoming
    count: 4
    value_template: "{% if value.daysTo == 0 %}Heute{% elif value.daysTo == 1 %}Morgen{% else %}in {{value.daysTo}} Tagen{% endif %}"
    date_template: '{{value.date.strftime("%d.%m.%Y")}}'
    types:
      - "Altpapier"
      - "Papierabfall"
  - platform: waste_collection_schedule
    name: Gelber_Sack
    details_format: upcoming
    count: 4
    value_template: "{% if value.daysTo == 0 %}Heute{% elif value.daysTo == 1 %}Morgen{% else %}in {{value.daysTo}} Tagen{% endif %}"
    date_template: '{{value.date.strftime("%d.%m.%Y")}}'
    types:
      - "Gelber Sack"
  - platform: waste_collection_schedule
    name: Bioabfall
    details_format: upcoming
    count: 4
    value_template: "{% if value.daysTo == 0 %}Heute{% elif value.daysTo == 1 %}Morgen{% else %}in {{value.daysTo}} Tagen{% endif %}"
    date_template: '{{value.date.strftime("%d.%m.%Y")}}'
    types:
      - "BIO"
      - "Bioabfall"
  - platform: template
    sensors:
      average_house_humidity:
        friendly_name: "Durchschn. Luftfeuchtigkeit"
        unit_of_measurement: "%"
        value_template: >-
          {{ (float(states.climate.gastezimmer.attributes.current_humidity) + float(states.climate.wohnzimmer.attributes.current_humidity) + float(states.climate.schlafzimmer.attributes.current_humidity) + float(states.climate.bad.attributes.current_humidity)) / 4 | round(2) }}
  - platform: template
    sensors:
      average_house_temp:
        friendly_name: "Durchschn. Temp."
        unit_of_measurement: "¬∞C"
        value_template: >-
          {{ (float(states.climate.gastezimmer.attributes.current_temperature) + float(states.climate.wohnzimmer.attributes.current_temperature) + float(states.climate.schlafzimmer.attributes.current_temperature) + float(states.climate.bad.attributes.current_temperature)) / 4 | round(2) }}
  - platform: template
    sensors:
      washing_machine_state:
        value_template: "{{ states.input_select.washing_machine_status.state}}"
        friendly_name: "Waschmaschine Status"
      washing_machine_mode:
        value_template: >
          {% if (is_state("switch.waschmaschine", "on")) -%}
            {% if (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_30_degrees_pflegeleicht.attributes.last_triggered) ) < 10000 %}
              30¬∞ Pflegeleicht
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_pflegeleicht.attributes.last_triggered) ) < 10000 %}
              40¬∞ Pflegeleicht
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_20_degrees_feinwasche.attributes.last_triggered) ) < 2800 %}
              20¬∞ Feinschw√§sche
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_koch_bunt.attributes.last_triggered) ) < 5500 %}
              40¬∞ Koch/Bunt
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_60_degrees_koch_bunt.attributes.last_triggered) ) < 13000 %}
              60¬∞ Koch/Bunt
            {% else %}
              Unbekannt
            {% endif %}
          {% else %}
            L√§uft nicht
          {% endif %}
        friendly_name: "Waschmaschinen Modus"
      washing_machine_finish_time:
        value_template: >
          {% if (is_state("switch.waschmaschine", "on")) -%}
            {% if (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_30_degrees_pflegeleicht.attributes.last_triggered) ) < 9780 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) ) | timestamp_custom("%H:%M", true) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (9780) ) | timestamp_custom("%H:%M", true) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_pflegeleicht.attributes.last_triggered) ) < 9780 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) ) | timestamp_custom("%H:%M", true) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (9780) ) | timestamp_custom("%H:%M", true) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_20_degrees_feinwasche.attributes.last_triggered) ) < 2400 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (2400) ) | timestamp_custom("%H:%M", true) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (2400) ) | timestamp_custom("%H:%M", true) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_koch_bunt.attributes.last_triggered) ) < 5220 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (5220) ) | timestamp_custom("%H:%M", true) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (5220) ) | timestamp_custom("%H:%M", true) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_60_degrees_koch_bunt.attributes.last_triggered) ) < 12660 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (13560) ) | timestamp_custom("%H:%M", true) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (12660) ) | timestamp_custom("%H:%M", true) }}
              {% endif %}
            {% else %}
              Unbekannt, ca. {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) ) | timestamp_custom("%H:%M", true) }}
            {% endif %}
          {% else %}
            L√§uft nicht
          {% endif %}
        friendly_name: "Waschmaschine Uhrzeit ca. fertig"
        unit_of_measurement: "Uhr"
      washing_machine_finish_duration:
        value_template: >
          {% if (is_state("switch.waschmaschine", "on")) -%}
            {% if (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_30_degrees_pflegeleicht.attributes.last_triggered) ) < 7200 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (9780) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_pflegeleicht.attributes.last_triggered) ) < 7200 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (9780) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_20_degrees_feinwasche.attributes.last_triggered) ) < 3200 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (2400) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (2400) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_40_degrees_koch_bunt.attributes.last_triggered) ) < 7200 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (5220) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (5220) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% endif %}
            {% elif (as_timestamp(now()) - as_timestamp(states.automation.telegram_washing_mashine_set_program_60_degrees_koch_bunt.attributes.last_triggered) ) < 14400 %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) > 600  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (13560) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                {{ (as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int + (13560) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% endif %}
            {% else %}
              {% if as_timestamp(states.switch.waschmaschine.last_changed) + 9780 - as_timestamp(now()) > 0  %}
                {{ (as_timestamp(states.switch.waschmaschine.last_changed) | int + (9780) | int - as_timestamp(now()) ) | timestamp_custom("%H:%M", false) }}
              {% else %}
                0
              {% endif %}
            {% endif %}
          {% else %}
            0
          {% endif %}
        friendly_name: "Waschmaschine Dauer ca. fertig"
        unit_of_measurement: "Stunden"
      coal_lighter_finish_duration:
        value_template: >
          {% if (is_state("switch.kohleanzunder", "on")) -%}
            {% if state_attr('sensor.coal_lighter_finish_duration', 'friendly_name') == 'Kohle' %}
              {{ (as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered) | int + (1320) | int - as_timestamp(now()) ) | timestamp_custom("%M", false) }}
            {% elif state_attr('sensor.coal_lighter_finish_duration', 'friendly_name') == 'Pizzamaker' %}
              {{ (as_timestamp(states.automation.detect_if_pizzamaker_is_currently_active.attributes.last_triggered) | int + (300) | int - as_timestamp(now()) ) | timestamp_custom("%M", false) }}
            {% else %}
              0
            {% endif %}
          {% else %}
            0
          {% endif %}
        friendly_name_template: >-
          {% if (is_state("switch.kohleanzunder", "on")) -%}
            {% if (as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered) > as_timestamp(states.automation.detect_if_pizzamaker_is_currently_active.attributes.last_triggered)) %}
              {% if (as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered) + 1320 - as_timestamp(now()) > 0 ) %}
                Kohle
              {% else %}
                Inaktiv
              {% endif %}
            {% elif (as_timestamp(states.automation.detect_if_pizzamaker_is_currently_active.attributes.last_triggered) > as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered)) %}
              {% if (as_timestamp(states.automation.detect_if_pizzamaker_is_currently_active.attributes.last_triggered) + 300 - as_timestamp(now()) > 0 ) %}
                Pizzamaker
              {% else %}
                Inaktiv
              {% endif %}
            {% else %}
              Inaktiv
            {% endif %}
          {% else %}
            Inaktiv
          {% endif %}
        unit_of_measurement: "Minuten"
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_temperature
  - platform: deutsche_bahn
    from: !secret fabian_work
    to: !secret sbahn_home
    only_direct: true
  - platform: deutsche_bahn
    from: !secret nessie_work
    to: !secret sbahn_home
    only_direct: true
  - platform: deutsche_bahn
    from: !secret sbahn_home
    to: !secret nessie_work
    only_direct: true
  - platform: deutsche_bahn
    from: Donnersbergerbruecke
    to: !secret sbahn_home
    only_direct: true
  - platform: template
    sensors:
      fs_caller:
        friendly_name: "Fabi Anrufer"
        value_template: "unbekannter"
  - platform: dwd_weather_warnings
    region_name: !secret dwd_cell_id
  # - platform: spotcast
  #   sp_dc: !secret sp_dc
  #   sp_key: !secret sp_key
  #  - platform: email
  #    email: !secret vapid_email
  #    password: !secret email_pw
  #  - platform: feedparser
  #    name: Corona News
  #    feed_url: "https://www.rki.de/SiteGlobals/Functions/RSSFeed/RSSGenerator_nCoV.xml"
  #    date_format: "%a, %d %b %H:%M:%S %Z"
  #    inclusions:
  #      - title
  #      - description
  #      - link
  #      - pubDate
  #    exclusions:
  #      - language
  #      - image
  #  - platform: feedparser
  #    name: Mydealz
  #    feed_url: !secret mydealz_rss
  #    date_format: "%a, %d %b %H:%M:%S %Z"
  #    inclusions:
  #      - title
  #      - link
  #      - pubDate
  #    exclusions:
  #      - language
  #      - description
  #      - image

light:
  - platform: prismatik
    host: 192.168.178.16
    name: "Prismatik"
    profile_name: homeassistant

adaptive_lighting:
  - name: "living_room"
    lights:
      - light.leds_wohnzimmer
      - light.yeelight_color_0x00000000036dc050
    min_brightness: 60
    min_color_temp: 3700
  - name: "sleeping_room"
    lights:
      - light.yeelight_bslamp2_0x0000000013fea10f
      - light.bett_gluhbirne
      # - light.leds_tisch
    min_brightness: 25
  - name: "guest_room"
    lights:
      - light.lampe_gastezimmer
      - light.leds_gastezimmer
    min_brightness: 80
    min_color_temp: 4000

# no_ip:
#   domain: !secret domain_noip
#   username: !secret noip_username
#   password: !secret noip_pw

xiaomi_miio_cooker:
  name: Xiaomi Rice Cooker
  host: 192.168.31.195
  token: !secret rice_cooker_token
  model: chunmi.cooker.eh1

rest_command:
  fabian_pc_system_bridge:
    method: POST
    url: http://192.168.178.16:9170/command
    headers:
      api-key: !secret system_bridge_fabian
    content_type: "application/json; charset=utf-8"
    payload: '{ "command": "{{ command }}", "arguments": ["{{ arguments }}"] }'
  nessie_pc_system_bridge:
    method: POST
    url: http://192.168.178.15:9170/command
    headers:
      api-key: !secret system_bridge_nessie
    content_type: "application/json; charset=utf-8"
    payload: '{ "command": "{{ command }}", "arguments": ["{{ arguments }}"] }'
  assistant_relay:
    method: POST
    url: http://192.168.31.2:3000/api/assistant
    content_type: "application/json"
    payload: '{"command":"{{ command }}", "user":"{{ user }}"}'
#  assistant_broadcast:
#    url: http://192.168.31.2:3000/api/assistant
#    method: POST
#    content_type: "application/json"
#    payload: '{"command":"{{ command }}", "user":"{{ user }}", "broadcast":true}'

#  assistant_converse:
#    url: http://192.168.31.2:3000/api/assistant
#    method: POST
#    content_type: "application/json"
#    payload: '{"command":"{{ command }}", "user":"{{ user }}", "converse":true}'

switch:
  - platform: rpi_gpio
    ports:
      18: RPI Cooling Fan
  # - platform: rest
  #   name: Fabian PC Shutdown
  #   method: POST
  #   resource: http://192.168.178.16:9170/command
  #   headers:
  #     Content-Type: 'application/json; charset=utf-8'
  #     api-key: !secret system_bridge_fabian
  #   payload: '{ "command": "shutdown /s /t 0", "arguments": [] }'
  # - platform: rest
  #   name: Nessie PC Shutdown
  #   method: POST
  #   resource: http://192.168.178.15:9170/command
  #   headers:
  #     Content-Type: 'application/json; charset=utf-8'
  #     api-key: !secret system_bridge_nessie
  #   payload: '{ "command": "shutdown /s /t 0", "arguments": [] }'
  - platform: template
    switches:
      xiaomi_miio_cooker:
        icon_template: >-
          {% if is_state('sensor.xiaomi_miio_cooker_mode', 'Running') %}
            mdi:rice
          {% else %}
            mdi:bowl
          {% endif %}
        friendly_name: "Reiskocher"
        value_template: "{{ is_state('sensor.xiaomi_miio_cooker_mode', 'Running') }}"
        turn_on:
          service: xiaomi_miio_cooker.start
          data_template:
            profile: >
              {% if is_state('input_select.rice_cooker_program', 'Kochen 1h') %}
                02010000000001e101000000000000800101050814000000002091827d7800050091822d781c0a0091823c781c1e0091ff827820ffff91828278000500ffff8278ffffff91828278000d00ff828778ff000091827d7800000091827d7800ffff91826078ff0100490366780701086c0078090301af540266780801086c00780a02023c5701667b0e010a71007a0d02ffff5701667b0f010a73007d0d032005000000000000000000000000000000cf53
              {% elif is_state('input_select.rice_cooker_program', 'schnelles Kochen') %}
                02010100000002e100280000000000800101050614000000002091827d7800000091823c7820000091823c781c1e0091ff827820ffff91828278000500ffff8278ffffff91828278000d00ff828778ff000082827d7800000091827d7800ffff91826078ff0164490366780701086c007409030200540266780801086c00760a0202785701667b0e010a7100780a02ffff5701667b0f010a73007b0a032005000000000000000000000000000000ddba
              {% elif is_state('input_select.rice_cooker_program', 'Porridge') %}
                02010200000003e2011e0400002800800101050614000000002091827d7800000091827d7800000091827d78001e0091ff877820ffff91827d78001e0091ff8278ffffff91828278001e0091828278060f0091827d7804000091827d7800000091827d780001f54e0255261802062a0482030002eb4e0255261802062a04820300032d4e0252261802062c04820501ffff4e0152241802062c0482050120000000000000000000000000000000009ce2
              {% elif is_state('input_select.rice_cooker_program', 'W√§rmen') %}
                020103000000040c00001800000100800100000000000000002091827d7800000091827d7800000091827d78000000915a7d7820000091827d7800000091826e78ff000091827d7800000091826e7810000091826e7810000091827d7800000091827d780000a082007882140010871478030000eb820078821400108714780300012d8200788214001087147a0501ffff8200788214001087147d0501200000000000000000000000000000000090e5
              {% elif is_state('input_select.rice_cooker_program', 'Sonstiges') %}
                02010400000005e601000100000a00800102050a14000000002091827d7800000091827d7800000091827d78001e00915a7d7820000091827d7800000091826e78ff000091827d7800000091826e7810ffff91827d78ff000091827d7800000091827d780000a082007882140010871478030000eb820078821400108714780300012d8200788214001087147a0501ffff8200788214001087147d0501200000000000000000000000000000000020b5
              {% else %}
                02010400000005e601000100000a00800102050a14000000002091827d7800000091827d7800000091827d78001e00915a7d7820000091827d7800000091826e78ff000091827d7800000091826e7810ffff91827d78ff000091827d7800000091827d780000a082007882140010871478030000eb820078821400108714780300012d8200788214001087147a0501ffff8200788214001087147d0501200000000000000000000000000000000020b5
              {% endif %}
        turn_off:
          service: xiaomi_miio_cooker.stop
  # - platform: sonoff_lan_mode_r3
  # name: Bett
  # device_id: 100016e326
  # api_key: 1bed0f5f-3848-4ab3-9b89-fb43faade84b
  # icon: mdi:power-plug
  #  - platform: sonoff_lan_mode_r3
  #    name: Waschmaschine
  #    device_id: 1000915e4d
  #    api_key: 11604ccd-1f58-47f2-acd1-816861348b1a
  #    icon: mdi:washing-machine
  #  - platform: sonoff_lan_mode_r3
  #    name: Sonoff Steckdose
  #    device_id: 1000134649
  #    api_key: b7bbed8a-33b2-4260-ae2e-89a00fbd85c2
  #    icon: mdi:power-plug

google_assistant:
  project_id: !secret google_assistant_id
  service_account: !include Homeassistant SmartLife-f9d43c517637.json
  report_state: true
  exposed_domains:
    - switch
    - light
    - input_boolean
    - vacuum
  expose_by_default: false
  entity_config:
    # Disabled Entitys
    input_boolean.silent_mode:
      expose: false
    input_boolean.guest_mode:
      expose: false
    input_boolean.away_mode:
      expose: false
    input_boolean.climate_off:
      expose: false
    switch.hibernate_fabian_pc:
      expose: false
    switch.shutdown_fabian_pc:
      expose: false
    light.prismatik:
      expose: false
    light.miwifi_28_d1_27_fc_ab_d8_led:
      expose: false
    button.miwifi_28_d1_27_fc_ab_d8_reboot:
      expose: false
    switch.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g:
      expose: false
    switch.miwifi_28_d1_27_fc_ab_d8_wifi_5g:
      expose: false
    light.xiaomi_89fb_7604_led:
      expose: false
    switch.xiaomi_89fb_7604_reboot:
      expose: false
    switch.kuche_speaker_do_not_disturb:
      expose: false
    switch.schlafzimmer_speaker_do_not_disturb:
      expose: false
    switch.gastezimmer_mini_do_not_disturb:
      expose: false
    switch.wohnzimmer_uhr_do_not_disturb:
      expose: false
    switch.schloss:
      expose: false
    switch.bett:
      expose: false
    switch.kohleanzunder:
      expose: false
    switch.nessie_pc_shutdown:
      expose: false
    switch.fabian_pc_shutdown:
      expose: false
    light.keller_gluhbirne:
      expose: false
    switch.fritzbox_3490_portforward_https_server:
      expose: false
    switch.fritzbox_3490_portforward_ssh:
      expose: false
    switch.fritz_box_3490_wi_fi_smartlife_fb:
      expose: false
    switch.fritz_box_3490_wi_fi_smartlife_fb_5ghz:
      expose: false
    switch.fritz_box_3490_wi_fi_fritz_box_gastzugang:
      expose: false
    switch.rpi_cooling_fan:
      expose: false
    climate.rpi_cooling_fan_controller:
      expose: false
    switch.adguard_protection:
      expose: false
    switch.adguard_filtering:
      expose: false
      name: Adblocker
    # Enabled Entitys
    ## Schlafzimmer
    switch.schreibtisch:
      name: Strom Tisch
      expose: false
      room: Schlafzimmer
    light.regal:
      name: Regal
      expose: true
      room: Schlafzimmer
    input_boolean.fabian_pc_strom:
      name: Strom Schlafzimmer
      expose: true
      room: Schlafzimmer
    switch.smart_power_strip_pro_usb_1:
      name: Bett Steckdose
      expose: true
      room: Schlafzimmer
    switch.regal_leds:
      expose: True
      room: Schlafzimmer
    light.lichtschalter:
      name: Licht Schalter
      expose: True
      room: Schlafzimmer
    light.bett_gluhbirne:
      name: Bett Gl√ºhbirne
      expose: true
      room: Schlafzimmer
    light.leds_tisch:
      expose: true
      room: Schlafzimmer
    light.yeelight_bslamp2_0x0000000013fea10f:
      name: Bettlicht
      expose: true
      room: Schlafzimmer
    ## G√§stezimmer
    light.lampe_gastezimmer:
      name: Nachtlampe
      expose: true
      room: G√§stezimmer
    light.leds_gastezimmer:
      expose: true
      room: G√§stezimmer
    switch.nessie_pc:
      expose: false
      room: G√§stezimmer
    input_boolean.nessie_pc_strom:
      name: Nessie PC
      expose: true
      room: G√§stezimmer
    ## Wohnzimmer
    light.deckenlampe:
      expose: true
      room: Wohnzimmer
    light.leds_wohnzimmer_tv:
      name: LEDs Wohnzimmer TV
      expose: true
      room: Wohnzimmer
    light.leds_wohnzimmer:
      expose: true
      room: Wohnzimmer
    light.yeelight_color_0x00000000036dc050:
      expose: True
      room: Wohnzimmer
    switch.fernseher:
      name: Strom Fernseher
      expose: True
      room: Wohnzimmer
      aliases:
        - Fernseher
        - TV
    switch.staubsauger:
      expose: True
      room: Wohnzimmer
    vacuum.valetudo_dreamez10pro:
      expose: True
      room: Wohnzimmer
      aliases:
        - Staubsaugroboter
    ## Keller
    switch.waschmaschine:
      expose: true
      room: Keller
    switch.kuhlschrank:
      expose: true
      room: Keller
    switch.keller_usb_ports:
      name: USB Ports
      expose: true
      room: Keller
    switch.fernseher_keller:
      expose: true
      room: Keller
    switch.strom_keller:
      expose: true
      room: Keller
    ## K√ºche
    switch.xiaomi_miio_cooker:
      expose: true
      room: K√ºche

binary_sensor:
  - platform: workday
    country: DE
    province: BY
    add_holidays:
      - "2023-05-19"

dialogflow:
intent_script:
  washing_machine_finish_duration:
    speech:
      text: Die Waschmaschine braucht noch ungef√§hr {{ states('sensor.washing_machine_finish_duration') }} Stunden.
  rice_cooker_finish_duration:
    speech:
      text: Der Reiskocher braucht noch ungef√§hr {{ states('sensor.xiaomi_miio_cooker_remaining') }} Minuten.
  find_james:
    speech:
      text: James gibt nun einen Ton von sich.
    action:
      service: vacuum.locate
      target:
        entity_id: vacuum.valetudo_dreamez10pro
  LocateIntent:
    speech:
      text: >
        {%- for state in states.person -%}
          {%- if state.name.lower() == User.lower() -%}
            {{ state.name }} ist bei {{ state.state }}
          {%- endif -%}
        {%- else -%}
          Leider kenne ich den Standort der Person {{ User }} nicht.
        {%- endfor -%}
  find_iPhone:
    speech:
      text: >
        {%- if User.lower() == "fabian" or User.lower() == "fabi" or User.lower() == "nessie" or User.lower() == "vanessa"  -%}
          Ich lasse jetzt das Handy von {{ User }} klingeln
        {%- else -%}
          Leider kann ich das Handy von {{ User }} nicht suchen.
        {%- endif -%}
    action:
      - service: automation.trigger
        entity_id: automation.find_phone_fabian
      # {%- if User.lower() == "fabian" or User.lower() == "fabi" -%}
      #   - service: automation.trigger
      #     entity_id: automation.find_phone_fabian
      # {%- elif User.lower() == "nessie" or User.lower() == "vanessa" -%}
      #   - service: automation.trigger
      #     entity_id: automation.find_phone_nessie
      # {%- else -%}
      #   Leider kann ich das iPhone von {{ User }} nicht suchen.
      # {%- endif -%}
  vacuum_room_cleaning:
    speech:
      text: Starte manuelle Raumreinigung in {{ Room }}.
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'Wohnzimmer' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["6"]}'
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'K√ºche' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["4"]}'
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'Schlafzimmer' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["3"]}'
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'G√§stezimmer' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["7"]}'
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'Bad' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["1"]}'
          - conditions:
              - condition: template
                value_template: "{{ ((Room)) == 'Flur' }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["5"]}'

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
    language: "de"

input_select:
  washing_machine_status:
    name: Washing Machine Status
    options:
      - Idle
      - Running
      - Finishing
      - Clean
    initial: Idle
  rice_cooker_program:
    name: Reiskocher Programm
    options:
      - Kochen 1h
      - schnelles Kochen
      - Porridge
      - W√§rmen
      - Sonstiges
    initial: schnelles Kochen
    icon: mdi:import
  vacuum_cleaning_location:
    name: Raumauswahl
    options:
      - Wohnzimmer
      - K√ºche
      - Schlafzimmer
      - G√§stezimmer
      - Bad
      - Flur
      - Gesamt
    initial: Gesamt

input_datetime:
  cooker_start_time:
    name: Reiskocher Startzeit
    has_date: true
    has_time: true

frontend:
  themes: !include_dir_merge_named themes
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
