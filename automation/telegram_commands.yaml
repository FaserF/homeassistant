---
- id: telegram_pill_1h
  alias: "Telegram pill 1h"
  initial_state: false
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/pill1h"
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pill1h
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, eine Stunde"
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - delay: "00:60:00"
    - service: notify.telegram_samuel
      data:
        message: "Pille nehmen nicht vergessen!"
        data:
          inline_keyboard:
            - "Erledigt:/pilldone, Erinnern1h:/pill1h"

- id: telegram_pill_marked_done
  alias: "Telegram pill marked done"
  initial_state: false
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/pilldone"
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: pilldone
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_reset_pill_counter
  alias: "Telegram reset pill counter"
  initial_state: false
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/pillreset"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay. Du nimmst die Pille durch."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: counter.configure
      data:
        entity_id: counter.pille
        value: 28

- id: telegram_washing_mashine_set_program_30_degrees_pflegeleicht
  alias: "Telegram Washing mashine set program 30 degrees pflegeleicht"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/washerstart30"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, Programm gesetzt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "30 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."
    - service: notify.telegram_fabian
      data:
        message: "30 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."

- id: telegram_washing_mashine_set_program_20_degrees_feinwasche
  alias: "Telegram Washing mashine set program 20 degrees feinwasche"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/washerstart20fw"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, Programm gesetzt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "20 Grad Feinwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."
    - service: notify.telegram_fabian
      data:
        message: "20 Grad Feinwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."

- id: telegram_washing_mashine_set_program_60_degrees_koch_bunt
  alias: "Telegram Washing mashine set program 60 degrees koch bunt"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/washerstart60kb"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, Programm gesetzt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "60 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."
    - service: notify.telegram_fabian
      data:
        message: "60 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."

- id: telegram_washing_mashine_set_program_40_degrees_pflegeleicht
  alias: "Telegram Washing mashine set program 40 degrees pflegeleicht"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/washerstart40"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, Programm gesetzt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "40 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."
    - service: notify.telegram_fabian
      data:
        message: "40 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."

- id: telegram_washing_mashine_set_program_40_degrees_koch_bunt
  alias: "Telegram Washing mashine set program 40 degrees Koch Bunt"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/washerstart40kb"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, Programm gesetzt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "40 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."
    - service: notify.telegram_fabian
      data:
        message: "40 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr."

- id: telegram_shutdown_fpc
  alias: "Telegram shutdown fpc"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/shutdownfpc"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "PC wird heruntergefahren, Strom wird ausgeschaltet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.fabian_pc_strom

- id: telegram_hibernate_fpc
  alias: "Telegram hibernate fpc"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/hibernatefpc"
  action:
    - service: system_bridge.send_command
      data:
        bridge: adad8b8056b4dfcde2399824f9be1dd5
        command: shutdown
        arguments: "/h /t 0"
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "OK, PC wird in Ruhezustand gestellt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_shutdown_npc
  alias: "Telegram shutdown npc"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/shutdownnpc"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "PC wird heruntergefahren, Strom wird ausgeschaltet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.samuel_pc_strom

- id: telegram_hibernate_npc
  alias: "Telegram hibernate npc"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/hibernatenpc"
  action:
    - service: system_bridge.send_command
      data:
        bridge: adad8b8056b4dfcde239???
        command: shutdown
        arguments: "/h /t 0"
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "OK, PC wird in Ruhezustand gestellt."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_reboot_ha
  alias: Telegram Reboot HA
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/rebootha"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "Restarting Homeassistant Container..."
    - service: homeassistant.restart

- id: telegram_reboot
  alias: Telegram Reboot
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/reboot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "Rebooting Server..."
    - delay: 00:00:05
    - service: shell_command.restartha

- id: telegram_help
  alias: Telegram Help
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/help"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/help@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: >
          Hier sind ein paar Befehle:

          /admin - Übersicht der Admin Befehle
          /food - zufälliger Essensvorschlag

- id: telegram_admin
  alias: Telegram Admin
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/admin"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/admin@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: >
          Hier sind ein paar Befehle:

          /rebootha - Neustart Homeassistant Container
          /reboot - Neustart Homeassistant Core
          /status - Homeassistant Status
          /updateha - Homeassistant Update starten

- id: telegram_status
  alias: Telegram Status
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/status"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/status@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "System is online! Last system reboot was on {{ states('sensor.last_boot') }}."

- id: telegram_essen
  alias: Telegram Essen
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/food"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/food@smartlife_ha_bot"
  action:
    - service: shell_command.randomfood
      data_template:
        telegram_sender: "{{ trigger.event.data.user_id }}"
    - service: telegram_bot.send_message
      data_template:
        title: "Gericht heute zubereiten?"
        target: "{{ trigger.event.data.user_id }}"
        message: ""
        disable_notification: true
        inline_keyboard:
          - "Ja:/foodyes, Nein:/foodno"

- id: telegram_essen_vegetarisch
  alias: Telegram Essen Vegetarisch
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/foodv"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/foodv@smartlife_ha_bot"
  action:
    - service: shell_command.randomfood
      data_template:
        telegram_sender: "{{ trigger.event.data.user_id }}"
        vegetarisch: "j"
    - service: telegram_bot.send_message
      data_template:
        title: "Gericht heute zubereiten?"
        target: "{{ trigger.event.data.user_id }}"
        message: ""
        disable_notification: true
        inline_keyboard:
          - "Ja:/foodyes, Nein:/foodno"

- id: telegram_essen_fleisch
  alias: Telegram Essen Fleisch
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/foodn"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/foodn@smartlife_ha_bot"
  action:
    - service: shell_command.randomfood
      data_template:
        telegram_sender: "{{ trigger.event.data.user_id }}"
        vegetarisch: "n"
    - service: telegram_bot.send_message
      data_template:
        title: "Gericht heute zubereiten?"
        target: "{{ trigger.event.data.user_id }}"
        message: ""
        disable_notification: true
        inline_keyboard:
          - "Ja:/foodyes, Nein:/foodno"

- id: telegram_food_yes
  alias: "Telegram food yes"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/foodyes"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: !secret telegram_chat_samuel
        inline_keyboard: []
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: !secret telegram_chat_fabian
        inline_keyboard: []
    - service: shell_command.foodyes

- id: telegram_food_no
  alias: "Telegram food no"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/foodno"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "foodno@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, neues Essen."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: shell_command.randomfood
      data_template:
        telegram_sender: "{{ trigger.event.data.user_id }}"
    - service: telegram_bot.send_message
      data_template:
        title: "Gericht heute zubereiten?"
        target: "{{ trigger.event.data.user_id }}"
        message: ""
        disable_notification: true
        inline_keyboard:
          - "Ja:/foodyes, Nein:/foodno"

- id: telegram_answer_no
  alias: "Telegram answer no"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/telegramno"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/telegramno@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_waste_put_outside
  alias: "Telegram waste put outside"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/telegramwastedone"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/telegramwastedone@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Spitze!"
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_dust_bin_emptied
  alias: "Telegram dust bin emptied"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/telegramdustbindone"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/telegramdustbindone@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Spitze!"
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_washer_emptied
  alias: "Telegram washer emptied"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/telegramwasherdone"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/telegramwasherdone@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Spitze!"
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "Die Waschmaschine wurde ausgeräumt."
    - service: notify.telegram_fabian
      data:
        message: "Die Waschmaschine wurde ausgeräumt."

- id: telegram_pouring_done
  alias: "Telegram pouring done"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/telegrampouringdone"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/telegrampouringdone@smartlife_ha_bot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Spitze!"
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: notify.telegram_samuel
      data:
        message: "Die Pflanzen wurden gegossen."
    - service: notify.telegram_fabian
      data:
        message: "Die Pflanzen wurden gegossen."

- id: telegram_answer_cancel_light_turn_off
  alias: "Telegram answer cancel light turn off"
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/cancellight"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Licht wird in 20 Minuten NICHT ausgeschaltet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_remaining_time_coal_lighter
  alias: Telegram Remaining Time Coal Lighter
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/remaining_time"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/remaining_time"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/remaining_time@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        message: "{{ states.sensor.coal_lighter_finish_duration.attributes.friendly_name }} ist in ungefähr {{ states.sensor.coal_lighter_finish_duration.state }} Minuten fertig."
        disable_notification: true

- id: telegram_start_coal_lighter_timer
  alias: Telegram Start Coal Lighter Timer
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/shisha"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/shisha"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/shisha@smartlife_ha_bot"
  action:
    - service: input_button.press
      target:
        entity_id: input_button.kohleanzunder_timer
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        message: "Kohleanzünder Timer wurde gestartet."
        disable_notification: true

- id: telegram_turn_off_fridge
  alias: Telegram Turn off fridge
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/fridgeoff"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/fridgeoff@smartlife_ha_bot"
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_turn_off_fridge.attributes.last_triggered) | int > 4600 }}"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.kuhlschrank
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.chat_id }}"
        message: "Okay, wird ausgeschaltet."
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        message: "Kühlschrank wurde ausgeschaltet."
        disable_notification: true

- id: telegram_ha_update
  alias: Telegram HA Update
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/updateha"
  action:
    - service: update.install
      target:
        entity_id: update.home_assistant_core_update
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "HA Update gestartet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_ha_os_update
  alias: Telegram HA OS Update
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/updateos"
  action:
    - service: update.install
      target:
        entity_id: update.home_assistant_operating_system_update
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "OS Update gestartet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []

- id: telegram_send_weather_forecast
  alias: "Telegram send weather forecast"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        disable_notification: true
        message: >
          Wettervorhersage für heute {{ states.weather.ebersberg_ebersberg.state }} bei {{ states.weather.ebersberg_ebersberg.attributes.temperature }} °C
          *Momentan {{ states.sensor.weather_ebersberg_hourly.attributes.forecast[0].temperature }} °C*


          Niederschlag: {{ states.sensor.ebersberg_precipitation_2.state }} mm/h, Wahrscheinlichkeit: {{ states.sensor.ebersberg_precipitation_probability_2.state }} %.

- id: turn_on_strom_kühlschrank
  alias: "Turn on Strom Kühlschrank"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/kühlschrank"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/kuehlschrank"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/fridge"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/fridge@smartlife_ha_bot"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.kuhlschrank
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        # target: "{{ trigger.event.data.user_id }}"
        message: "Kühlschrank im Keller wurde angeschaltet. Achtung: Wird hierüber NICHT ausgeschaltet!"

- id: turn_on_climates
  alias: "Turn on Climates"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/climateson"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Okay, werden eingeschaltet."
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        inline_keyboard: []
    - service: input_boolean.turn_off
      data:
        entity_id: switch.climate_off

- id: find_phone_fabian
  alias: "Find Fabians Phone by sound"
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_button.find_fabian_s_phone_by_sound
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/lostfabian"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/lostfabian@smartlife_ha_bot"
  action:
    - service: notify.mobile_app_fabian_iphone
      data:
        message: "This phone is marked as lost! +49176 66334870"
        data:
          push:
            sound:
              name: "default"
              critical: 1
              volume: 1.0
    - service: icloud.play_sound
      data:
        account: !secret vapid_email
        device_name: Fabian-iPhone

- id: find_ipad_fabian
  alias: "Find Fabians ipad by sound"
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_button.find_fabian_s_ipad_by_sound
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/lostfabian"
  action:
    - service: icloud.play_sound
      data:
        account: !secret vapid_email
        device_name: Fabian-iPad

- id: telegram_urgent_message
  alias: "Telegram urgent message"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/urgent"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/urgent@smartlife_ha_bot"
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "Alle Google Homes werden Fabi/samuel über eine wichtige Nachricht bescheid geben."
    - service: notify.mobile_app_samuel_iphone
      data:
        message: "Wichtige Nachricht, schau auf dein Handy!"
        data:
          push:
            sound:
              name: "default"
              critical: 1
              volume: 0.4
    - service: notify.mobile_app_fabian_iphone
      data:
        message: "Wichtige Nachricht, schau auf dein Handy!"
        data:
          push:
            sound:
              name: "default"
              critical: 1
              volume: 0.4
    - service: media_player.volume_set
      data:
        volume_level: 0.7
        entity_id: media_player.wohnzimmer_uhr
    - service: tts.speak
      entity_id:
        - media_player.wohnzimmer_uhr
        - media_player.kuche_speaker
        - media_player.schlafzimmer_speaker
      data_template:
        message: >
          Wichtige Nachricht von
          {% if (is_state("trigger.event.data.user_id", "649657901")) -%}
          Fabian
          {% elif (is_state("trigger.event.data.user_id", "654536464")) -%}
          samuel
          {% elif (is_state("trigger.event.data.user_id", "665446537")) -%}
          Kai
          {% elif (is_state("trigger.event.data.user_id", "159366362")) -%}
          Adri
          {% elif (is_state("trigger.event.data.user_id", "668937527")) -%}
          Flo
          {% elif (is_state("trigger.event.data.user_id", "610791756")) -%}
          Maxi
          {% else %}
          jemandem
          {% endif %}
          Schau auf dein Handy!
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: input_boolean.gast_modus
                  state: "on"
          sequence:
            - service: tts.speak
              entity_id: media_player.gastezimmer_mini
              data_template:
                message: >
                  Wichtige Nachricht von
                  {% if (is_state("trigger.event.data.user_id", "649657901")) -%}
                  Fabian
                  {% elif (is_state("trigger.event.data.user_id", "654536464")) -%}
                  samuel
                  {% elif (is_state("trigger.event.data.user_id", "665446537")) -%}
                  Kai
                  {% elif (is_state("trigger.event.data.user_id", "159366362")) -%}
                  Adri
                  {% elif (is_state("trigger.event.data.user_id", "668937527")) -%}
                  Flo
                  {% elif (is_state("trigger.event.data.user_id", "610791756")) -%}
                  Maxi
                  {% else %}
                  jemandem
                  {% endif %}
                  Schau auf dein Handy!
    - service: media_player.volume_set
      data:
        volume_level: 0.3
        entity_id: media_player.wohnzimmer_uhr

- id: telegram_open_door
  alias: "Telegram open door"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/open"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/open@smartlife_ha_bot"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/alohomora"
  action:
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: switch.schloss
                  state: "unavailable"
          sequence:
            - service: switch.turn_on
              data:
                entity_id: switch.schloss
            - service: telegram_bot.send_message
              data_template:
                target: "{{ trigger.event.data.chat_id }}"
                # target: "{{ trigger.event.data.user_id }}"
                message: "Gartentor wurde geöffnet."
    - choose:
        - conditions:
            - condition: and
              conditions:
                - condition: state
                  entity_id: switch.schloss
                  state: "unavailable"
          sequence:
            - service: telegram_bot.send_message
              data_template:
                target: "{{ trigger.event.data.chat_id }}"
                message: "Der Gartentoröffner ist aktuell offline. Das Gartentor wurde NICHT geöffnet. Fabian wurde informiert. Bitte nutze /klingel stattdessen."
            - service: notify.telegram_fabian
              data:
                message: "Gartentoröffner ist offline! Bitte neustarten."

- id: telegram_virtual_bell
  alias: "Telegram virtual bell"
  initial_state: true
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/klingel"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/klingel@smartlife_ha_bot"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.schloss
    - service: notify.mobile_app_fabian_iphone
      data:
        message: "Es klingelt! Jemand ist da."
        data:
          push:
            sound:
              name: "default"
              critical: 1
              volume: 0.7
    - service: media_player.volume_set
      data:
        volume_level: 0.7
        entity_id: media_player.wohnzimmer_uhr
    - service: tts.speak
      entity_id:
        - media_player.wohnzimmer_uhr
        - media_player.kuche_speaker
      data_template:
        message: >
          Ding Dong, es klingelt.
          {% if is_state_attr('trigger.event.data', 'user_id', '649657901') %}
            Fabian
          {% elif is_state_attr('trigger.event.data', 'user_id', '654536464') %}
            samuel
          {% elif is_state_attr('trigger.event.data', 'user_id', '665446537') %}
            Kai
          {% elif is_state_attr('trigger.event.data', 'user_id', '159366362') %}
            Adri
          {% else %}
            Jemand
          {% endif %}
          ist da.
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        # target: "{{ trigger.event.data.user_id }}"
        message: "Klingel in Wohnung aktiviert. Gartentor wurde geöffnet."
    - service: media_player.volume_set
      data:
        volume_level: 0.3
        entity_id: media_player.wohnzimmer_uhr
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: media_player.wohnzimmer_tv
                  state: "unavailable"
          sequence:
            - service: androidtv.adb_command
              data:
                entity_id: media_player.wohnzimmer_tv
                command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
            - service: notify.wohnzimmer_tv
              continue_on_error: true
              data_template:
                message: >
                  Ding Dong, es klingelt.
                  {% if is_state_attr('trigger.event.data', 'user_id', '649657901') %}
                    Fabian
                  {% elif is_state_attr('trigger.event.data', 'user_id', '654536464') %}
                    samuel
                  {% elif is_state_attr('trigger.event.data', 'user_id', '665446537') %}
                    Kai
                  {% elif is_state_attr('trigger.event.data', 'user_id', '159366362') %}
                    Adri
                  {% else %}
                    Jemand
                  {% endif %}
                  ist da.
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: media_player.keller_tv
                  state: "unavailable"
          sequence:
            - service: androidtv.adb_command
              data:
                entity_id: media_player.keller_tv
                command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
            - service: notify.keller_tv
              continue_on_error: true
              data_template:
                message: >
                  Ding Dong, es klingelt.
                  {% if is_state_attr('trigger.event.data', 'user_id', '649657901') %}
                    Fabian
                  {% elif is_state_attr('trigger.event.data', 'user_id', '654536464') %}
                    samuel
                  {% elif is_state_attr('trigger.event.data', 'user_id', '665446537') %}
                    Kai
                  {% elif is_state_attr('trigger.event.data', 'user_id', '159366362') %}
                    Adri
                  {% else %}
                    Jemand
                  {% endif %}
                  ist da.
