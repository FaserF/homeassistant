---
- id: remind_to_open_doors_for_vacuum
  alias: "Remind to open doors for vacuum"
  initial_state: true
  trigger:
    - platform: template
      value_template: "{{ as_timestamp(now()) | round(-1) == (as_timestamp(states.schedule.reinigung.attributes.next_event) - 1800) | round(-1) }}"
  condition:
    - condition: state
      entity_id: input_boolean.abwesend_modus
      state: "off"
    - condition: state
      entity_id: input_boolean.gast_modus
      state: "off"
    - condition: state
      entity_id: input_boolean.leiser_modus
      state: "off"
    - condition: state
      entity_id: schedule.reinigung
      state: "off"
    - condition: not
      conditions:
        - condition: state
          entity_id: vacuum.valetudo_dreamez10pro
          state: "cleaning"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: person.samuel
              state: "home"
          sequence:
            - service: notify.telegram_samuel
              data_template:
                message: "Die geplante Staubsauger Reinigung startet in 30 Minuten. Bitte alle Türen öffnen."
    - choose:
        - conditions:
            - condition: state
              entity_id: person.fabian
              state: "home"
          sequence:
            - service: notify.telegram_fabian
              data_template:
                message: "Die geplante Staubsauger Reinigung startet in 30 Minuten. Bitte alle Türen öffnen."

- id: turn_on_vacuum_weekly
  alias: "Turn on vacuum weekly"
  initial_state: true
  trigger:
    - platform: state
      entity_id: schedule.reinigung
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.abwesend_modus
      state: "off"
    - condition: state
      entity_id: input_boolean.leiser_modus
      state: "off"
    - condition: state
      entity_id: input_boolean.gast_modus
      state: "off"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.staubsauger
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.fabian
                  state: "home"
                - condition: state
                  entity_id: person.samuel
                  state: "home"
          sequence:
            # if Fabi & samuel not at home clean all rooms
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["5", "2", "3", "4", "6"], "customOrder": true}'
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.fabian
                  state: "home"
          sequence:
            # else if only fabi is not at home clean all rooms except guest room
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["5", "2", "3", "4"], "customOrder": true}'
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.samuel
                  state: "home"
          sequence:
            - choose:
                - conditions:
                    - condition: not
                      conditions:
                        - condition: state
                          entity_id: input_boolean.gast_modus
                          state: "on"
                  sequence:
                    # else if only samuel is not at home but guest mode is on, clean all rooms except sleeping room & except guest room
                    - service: mqtt.publish
                      data:
                        topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                        payload: '{"segment_ids": ["5", "3", "4", "6"], "customOrder": true}'
              default:
                # else if only samuel is not at home but guest mode is on, clean all rooms except guest room
                - service: mqtt.publish
                  data:
                    topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                    payload: '{"segment_ids": ["5", "3", "4"], "customOrder": true}'
      default:
        # default if fabi & samuel at home: clean only living room, floor & kitchen
        - service: mqtt.publish
          data:
            topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
            payload: '{"segment_ids": ["5", "3", "4"], "customOrder": true}'

- id: vacuum_cleaner_error
  alias: "Vacuum Cleaner Error"
  initial_state: true
  trigger:
    # - platform: state
    # entity_id: sensor.valetudo_dreamez10pro_error_description
    # not_from:
    # - "unavailable"
    # - "unknown"
    # - ""
    # - "Unknown"
    - platform: state
      entity_id: vacuum.valetudo_dreamez10pro
      to: "error"
  action:
    - delay: "00:00:30"
    - choose:
        - conditions:
            - condition: state
              entity_id: person.fabian
              state: "home"
          sequence:
            - service: telegram_bot.send_message
              data_template:
                message: >
                  James hat ein Problem: {{ states.sensor.valetudo_dreamez10pro_error_description.state }}

                  Die Reinigung wurde daher unterbrochen.
                target: !secret telegram_chat_fabian
        - conditions:
            - condition: state
              entity_id: person.samuel
              state: "home"
          sequence:
            - service: telegram_bot.send_message
              data_template:
                message: >
                  James hat ein Problem: {{ states.sensor.valetudo_dreamez10pro_error_description.state }}

                  Die Reinigung wurde daher unterbrochen.
                target: !secret telegram_chat_samuel

- id: james_room_cleaning
  alias: "James Raum Reinigiung"
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_button.james_room_cleaning
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Wohnzimmer"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["5"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Küche"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["3"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Fabians-Zimmer"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["2"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Samuels-Zimmer"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["6"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Bad"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["1"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Flur"
          sequence:
            - service: mqtt.publish
              data:
                topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                payload: '{"segment_ids": ["4"]}'
        - conditions:
            - condition: state
              entity_id: input_select.vacuum_cleaning_location
              state: "Gesamt"
          sequence:
            - service: vacuum.start
              data:
                entity_id: vacuum.valetudo_dreamez10pro
    - delay: "00:30:00"
    - service: input_select.select_option
      data:
        entity_id: input_select.vacuum_cleaning_location
        option: "Gesamt"

- id: vacuum_reset_water_level
  alias: "Reset the Vacuum water level"
  trigger:
    - platform: state
      entity_id: vacuum.valetudo_dreamez10pro
      from: "Returning to dock"
      to: "docked"
  action:
    - service: select.select_option
      data:
        entity_id: select.valetudo_dreamez10pro_water_grade
        option: "medium"
    - service: select.select_option
      data:
        entity_id: select.valetudo_dreamez10pro_operation_mode
        option: "vacuum_and_mop"

- id: warning_for_closed_doors
  alias: "Warning for closed doors"
  trigger:
    - platform: state
      entity_id: vacuum.valetudo_dreamez10pro
      from: "returning"
      to: "docked"
      for:
        minutes: 2
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.valetudo_dreamez10pro_current_statistics_area
        below: 220
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_vacuum_weekly.attributes.last_triggered) | int < 5400 }}"
  action:
    - choose:
        - conditions:
            - condition: numeric_state
              entity_id: proximity.home_fabian
              below: 70
          sequence:
            - service: notify.telegram_fabian
              data_template:
                message: "Anscheinend waren Türen bei der geplanten Reinigung geschlossen. Daher wurden nicht alle Räume gesaugt."

- id: vacuum_cleaner_counter
  alias: "Set Counter with Cleaner Runs and remind for emptying and refilling"
  trigger:
    - platform: state
      entity_id: vacuum.valetudo_dreamez10pro
      from: "docked"
      for:
        minutes: 2
  condition:
    condition: not
    conditions:
      - condition: state
        entity_id: vacuum.valetudo_dreamez10pro
        state: unavailable
      - condition: state
        entity_id: vacuum.valetudo_dreamez10pro
        state: idle
  action:
    - service: counter.decrement
      target:
        entity_id: counter.vacuum_water_level
    - choose:
        - conditions:
            - condition: state
              entity_id: select.valetudo_dreamez10pro_water_grade
              state: high
          sequence:
            - service: counter.decrement
              target:
                entity_id: counter.vacuum_water_level
    - choose:
        - conditions:
            - condition: numeric_state
              entity_id: counter.vacuum_water_level
              below: 1
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: person.samuel
                      state: home
                  sequence:
                    - service: notify.telegram_samuel
                      data_template:
                        message: "Der Wassertank des Staubsaugroboters sollte zeitnah aufgefüllt werden."
            - choose:
                - conditions:
                    - condition: state
                      entity_id: person.fabian
                      state: home
                  sequence:
                    - service: notify.telegram_fabian
                      data_template:
                        message: "Der Wassertank des Staubsaugroboters sollte zeitnah aufgefüllt werden."
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ states('counter.vacuum_runs')|float % 30 == 0 }}"
          sequence:
            - choose:
                - conditions:
                    - condition: numeric_state
                      entity_id: proximity.home_samuel
                      below: 35
                  sequence:
                    - service: notify.telegram_samuel
                      data_template:
                        message: "Der Staubbehälter des Staubsaugroboters könnte langsam voll sein."
            - choose:
                - conditions:
                    - condition: numeric_state
                      entity_id: proximity.home_fabian
                      below: 70
                  sequence:
                    - service: notify.telegram_fabian
                      data_template:
                        message: "Der Staubbehälter des Staubsaugroboters könnte langsam voll sein."
            - choose:
                - conditions:
                    - condition: or
                      conditions:
                        - condition: numeric_state
                          entity_id: proximity.home_samuel
                          below: 35
                        - condition: numeric_state
                          entity_id: proximity.home_fabian
                          below: 70
                  sequence:
                    - service: counter.increment
                      target:
                        entity_id: counter.vacuum_runs
        - conditions:
            - condition: template
              value_template: "{{ states('counter.vacuum_runs')|float % 30 != 0 }}"
          sequence:
            - service: counter.increment
              target:
                entity_id: counter.vacuum_runs

- id: vacuum_water_refilled
  alias: "Vacuum Water refilled"
  trigger:
    - platform: state
      entity_id: binary_sensor.valetudo_dreamez10pro_water_tank_attachment
      from: "off"
      to: "on"
      for:
        seconds: 5
  condition:
    condition: not
    conditions:
      - condition: state
        entity_id: vacuum.valetudo_dreamez10pro
        state: unavailable
      - condition: numeric_state
        entity_id: counter.vacuum_water_level
        above: 90
  action:
    - service: counter.reset
      target:
        entity_id: counter.vacuum_water_level
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.samuel
                  state: "home"
          sequence:
            - service: notify.telegram_samuel
              data_template:
                message: "Der Wassertank des Staubsaugroboters wurde soeben aufgefüllt."
    - choose:
        - conditions:
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.fabian
                  state: "home"
          sequence:
            - service: notify.telegram_fabian
              data_template:
                message: "Der Wassertank des Staubsaugroboters wurde soeben aufgefüllt."

- id: turn_off_staubsauger_after_x_hours
  alias: "Turn off staubsauger after x hours"
  initial_state: true
  trigger:
    - platform: state
      entity_id: switch.staubsauger
      to: "on"
      for:
        minutes: 150
    - platform: state
      entity_id: switch.staubsauger
      from: "off"
      to: "on"
      for:
        minutes: 360
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.staubsauger
