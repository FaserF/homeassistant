  - id: turn_off_everything_except_guest_room_if_nobody_is_at_home
    alias: 'Turn off everything except guest room if nobody is at home'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1
      - platform: state
        entity_id: person.nessie
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: person.fabian
          state: home
        - condition: state
          entity_id: person.nessie
          state: home
    action:
      - service: light.turn_off
        data:
          area_id: 
            - "{{ area_id('Wohnzimmer') }}"
            - "{{ area_id('Schlafzimmer') }}"
            - "{{ area_id('Keller') }}"
      - service: switch.turn_off
        data:
          area_id: 
            - "{{ area_id('Wohnzimmer') }}"
            - "{{ area_id('Keller') }}"
      - service: switch.turn_off
        data:
          entity_id: 
            - switch.smart_power_strip_pro_usb_1
            - switch.schreibtisch
      - service: media_player.turn_off
        data:
          area_id: 
            - "{{ area_id('Wohnzimmer') }}"
            - "{{ area_id('Schlazimmer') }}"
            - "{{ area_id('Küche') }}"
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'home'
              - condition: numeric_state
                entity_id: sensor.steckdose_schlafzimmer_energy_power
                above: 20
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Keiner ist mehr zu Hause! Fabian-PC ist allerdings noch an!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownfpc, Ruhezustand:/hibernatefpc'
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: 'home'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Keiner ist mehr zu Hause. Nessie-PC ist allerdings noch an und wurde nicht ausgeschaltet!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownfpc, Ruhezustand:/hibernatefpc'
              - service: notify.telegram_nessie
                data:
                  message: "Keiner ist mehr zu Hause. Nessie-PC ist allerdings noch an und wurde nicht ausgeschaltet!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownnpc, Ruhezustand:/hibernatenpc'
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'not_home'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.fabian_pc_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: 'not_home'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.nessie_pc_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
            sequence:
              - service: light.turn_off
                data:
                  area_id: 
                    - "{{ area_id('Gästezimmer') }}"
              - service: media_player.turn_off
                data:
                  entity_id: media_player.gastezimmer_mini
              - service: select.select_option
                data:
                  option: min
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
              - delay: '00:00:40'
              - service: select.select_option
                data:
                  option: min
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.gastezimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.gastezimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.wohnzimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.wohnzimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.schlafzimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.schlafzimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.bad
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.bad
                  hvac_mode: auto

  - id: turn_on_5ghz_wifi_and_ssh_off_if_coming_home
    alias: 'Turn on 5ghz wifi and ssh off if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.nessie
        from: 'not_home'
        to: 'home'
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.abwesend_modus
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
                    state: 'max'
            sequence:
              - service: select.select_option
                data:
                  option: max
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
      - delay: '00:00:40'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength
                    state: 'max'
            sequence:
              - service: select.select_option
                data:
                  option: max
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength
      #- service: switch.turn_off
      #  data: 
      #    entity_id: switch.fritzbox_3490_portforward_ssh

  - id: open_door_for_fabian
    alias: 'Open the door for Fabian if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'not_home'
        to: 'home'
        for:
          seconds: 3
      - platform: numeric_state
        entity_id: proximity.home_fabian
        below: 2
        for:
          seconds: 3
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
        state: not_home
      - condition: or
        conditions:
          - condition: numeric_state
            entity_id: proximity.home_fabian
            below: 2
          - condition: not
            conditions:
              - condition: state
                entity_id: proximity.home_fabian
                attribute: dir_of_travel
                state: 'away_from'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_fabian_if_coming_home.attributes.last_triggered) | int > 300 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_nessie_if_coming_home.attributes.last_triggered) | int > 180 }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_fabian
          message: 'Gartentor wurde automatisch geöffnet, da du gleich daheim bist.'

  - id: open_door_for_nessie
    alias: 'Open the door for Nessie if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.nessie
        from: 'not_home'
        to: 'home'
      - platform: numeric_state
        entity_id: proximity.home_nessie
        below: 2
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
        state: not_home
      - condition: or
        conditions:
          - condition: numeric_state
            entity_id: proximity.home_nessie
            below: 2
          - condition: not
            conditions:
              - condition: state
                entity_id: proximity.home_nessie
                attribute: dir_of_travel
                state: 'away_from'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_fabian_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_nessie_if_coming_home.attributes.last_triggered) | int > 300 }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_nessie
          message: 'Gartentor wurde automatisch geöffnet, da du gleich daheim bist.'

  - id: open_door_for_adri
    alias: 'Open the door for Adri if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.adri
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_14_c8_8b_0e_84_66
        state: not_home
      - condition: or
        conditions:
          - condition: state
            entity_id: person.fabian
            state: home
          - condition: state
            entity_id: person.nessie
            state: home
      #- condition: not
      #  conditions:
      #    - condition: state
      #      entity_id: proximity.home_ka
      #      attribute: dir_of_travel
      #      state: 'away_from'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_fabian_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_nessie_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_adri_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_kai_if_coming_home.attributes.last_triggered) | int > 300 }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_adrian
          message: 'Gartentor wurde automatisch geöffnet, da du gleich bei Fabi bist und die Google Homes klingeln.'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: time
                    before: '22:00:00'
                  - condition: time
                    after: '10:00:00'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: notify.mobile_app_fabian_iphone
                data:
                  message: "Adri ist gleich da"
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.7
              - service: media_player.volume_set
                data:
                  volume_level: 0.7
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                data:
                  message: "Adri ist gleich da."
              - service: media_player.volume_set
                data:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
            sequence:
              - service: androidtv.adb_command
                data:
                  entity_id: media_player.keller_tv
                  command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
              - service: notify.keller_tv
                continue_on_error: true
                data:
                  message: "Adri ist gleich da."

  - id: open_door_for_kai
    alias: 'Open the door for Kai if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.kai
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_e8_7f_95_73_88_96
        state: not_home
      - condition: or
        conditions:
          - condition: state
            entity_id: person.fabian
            state: home
          - condition: state
            entity_id: person.nessie
            state: home
      #- condition: not
      #  conditions:
      #    - condition: state
      #      entity_id: proximity.home_ka
      #      attribute: dir_of_travel
      #      state: 'away_from'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_fabian_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_nessie_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_adri_if_coming_home.attributes.last_triggered) | int > 300 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_kai_if_coming_home.attributes.last_triggered) | int > 180 }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_kai
          message: 'Gartentor wurde automatisch geöffnet, da du gleich bei Fabi bist und die Google Homes klingeln.'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: time
                    before: '22:00:00'
                  - condition: time
                    after: '10:00:00'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: notify.mobile_app_fabian_iphone
                data:
                  message: "Kai ist gleich da"
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.7
              - service: media_player.volume_set
                data:
                  volume_level: 0.7
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                data:
                  message: "Kai ist gleich da."
              - service: media_player.volume_set
                data:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
            sequence:
              - service: androidtv.adb_command
                continue_on_error: true
                data:
                  entity_id: media_player.keller_tv
                  command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
              - service: notify.keller_tv
                continue_on_error: true
                data:
                  message: "Kai ist gleich da."

  - id: open_door_for_flo
    alias: 'Open the door for Flo if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: person.flo
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_30_ab_6a_c1_fe_15
        state: not_home
      - condition: or
        conditions:
          - condition: state
            entity_id: person.fabian
            state: home
          - condition: state
            entity_id: person.nessie
            state: home
      #- condition: not
      #  conditions:
      #    - condition: state
      #      entity_id: proximity.home_ka
      #      attribute: dir_of_travel
      #      state: 'away_from'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_fabian_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_nessie_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_adri_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_kai_if_coming_home.attributes.last_triggered) | int > 180 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.open_the_door_for_flo_if_coming_home.attributes.last_triggered) | int > 300 }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      #- service: telegram_bot.send_message
      #  data:
      #    target: !secret telegram_chat_flo
      #    message: 'Gartentor wurde automatisch geöffnet, da du gleich bei Fabi bist und die Google Homes klingeln.'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: time
                    before: '22:00:00'
                  - condition: time
                    after: '10:00:00'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: notify.mobile_app_fabian_iphone
                data:
                  message: "Flo ist gleich da"
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.7
              - service: media_player.volume_set
                data:
                  volume_level: 0.7
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                data:
                  message: "Flo ist gleich da."
              - service: media_player.volume_set
                data:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
            sequence:
              - service: androidtv.adb_command
                continue_on_error: true
                data:
                  entity_id: media_player.keller_tv
                  command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
              - service: notify.keller_tv
                continue_on_error: true
                data:
                  message: "Flo ist gleich da."

  # - id: notify_if_someone_joined_lan_play_server
  #   alias: Notify if someone joined lan play server
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: sensor.switch_lan_play_online
  #       above: 0
  #   condition:
  #     - condition: template
  #       value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_if_someone_joined_lan_play_server.attributes.last_triggered) | int > 300 }}"
  #   action:
  #     - service: telegram_bot.send_message
  #       data_template:
  #         target: !secret telegram_chat_fabian
  #         message: 'Jemand ist dem LAN-Play Server beigetreten. Spieleranzahl: {{ states.sensor.switch_lan_play_online.state }}'

#  - id: turn_on_ventilator_if_coming_home
#    alias: 'Turn on ventilator if coming home'
#    initial_state: on
#    trigger:
#      - platform: state
#        entity_id: person.fabian
#        from: 'not_home'
#        to: 'home'
#      - platform: state
#        entity_id: person.nessie
#        from: 'not_home'
#        to: 'home'
#    condition:
#      condition: and
#      conditions:
#        - condition: numeric_state
#          entity_id: 'weather.dwd_weather_ebersberg_1h'
#          attribute: temperature
#          above: 22
#        - condition: time
#          after: '12:00:00'
#          before: '21:00:00'
#    action:
#      - service: switch.turn_on
#        data:
#          entity_id: switch.ventilator

  - id: turn_off_light_at_night_notify
    alias: 'Turn off light at night - notify'
    initial_state: true
    trigger:
      platform: time
      at: '00:30:00'
    condition:
      - condition: state
        entity_id: input_boolean.gast_modus
        state: 'off'
      - condition: template
        value_template: >
          {% set domain = 'light' %}
          {% set state = 'on' %}
          {{ states[domain] | selectattr('state','eq', state) | list | count > 0 }}
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
              - condition: template
                value_template: >
                  {% set domain = 'light' %}
                  {% set state = 'on' %}
                  {{ states[domain] | selectattr('state','eq', state) | list | count > 1 }}
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet, außer im Keller.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet, außer im Keller.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.keller_tv
                state: 'unavailable'
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'

  - id: turn_off_light_at_night
    alias: 'Turn off light at night'
    initial_state: true
    trigger:
      platform: time
      at: '00:50:00'
    condition:
      - condition: state
        entity_id: input_boolean.gast_modus
        state: 'off'
      - condition: template
        value_template: >
          {% set domain = 'light' %}
          {% set state = 'on' %}
          {{ states[domain] | selectattr('state','eq', state) | list | count > 0 }}
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_answer_cancel_light_turn_off.attributes.last_triggered) | int > 1500 }}"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {% set domain = 'light' %}
                  {% set state = 'on' %}
                  {{ states[domain] | selectattr('state','eq', state) | list | count > 1 }}
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
            sequence:
              - service: light.turn_off
                data:
                  area_id: 
                    - "{{ area_id('Wohnzimmer') }}"
                    - "{{ area_id('Schlafzimmer') }}"
                    - "{{ area_id('Gästezimmer') }}"
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter (außer im Keller) wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter (außer im Keller) wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.keller_tv
                state: 'unavailable'
            sequence:
              - service: light.turn_off
                entity_id: all
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'

  - id: turn_off_devices_at_night_notify
    alias: 'Turn off devices at night - notify'
    initial_state: true
    trigger:
      platform: time
      at: '04:30:00'
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: switch.fernseher
            state: 'on'
          - condition: state
            entity_id: switch.kuhlschrank
            state: 'on'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Fernseher & Kühlschrank werden in 20 Minuten ausgeschaltet.'
          inline_keyboard:
            - 'Abbruch:/cancellight, Okay:/telegramno'

  - id: turn_off_devices_at_night
    alias: 'Turn off devices at night'
    initial_state: true
    trigger:
      platform: time
      at: '04:50:00'
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: switch.fernseher
            state: 'on'
          - condition: state
            entity_id: switch.kuhlschrank
            state: 'on'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_answer_cancel_light_turn_off.attributes.last_triggered) | int > 1500 }}"
    action:
      - service: switch.turn_off
        entity_id: 
          - switch.fernseher
          - switch.kuhlschrank
      - service: media_player.turn_off
        entity_id: media_player.keller_tv
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Fernseher & Kühlschrank wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'

  - id: set_climate_at_night
    alias: 'Set climate at night'
    initial_state: true
    trigger:
      platform: time
      at: '00:50:00'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.thermostate_aus
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: 
                    - climate.wohnzimmer
                    - climate.schlafzimmer
                    - climate.bad
                  hvac_mode: 'auto'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.thermostate_aus
                state: 'on'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: 
                    - climate.wohnzimmer
                    - climate.schlafzimmer
                    - climate.bad
                  hvac_mode: 'off'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'auto'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'on'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'off'

  - id: set_climate_on_weekdays
    alias: 'Set climate on weekdays'
    initial_state: true
    trigger:
      - platform: time
        at: '16:15:00'
      - platform: time
        at: '21:00:00'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - sun
      - condition: state
        entity_id: input_boolean.thermostate_aus
        state: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.wohnzimmer
          hvac_mode: 'auto'

  - id: set_wifi_settings_at_night
    alias: 'Set wifi settings at night'
    initial_state: true
    trigger:
      - platform: time
        at: '00:00:00'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: switch.fernseher_keller
        state: 'off'
      - condition: state
        entity_id: switch.fernseher
        state: 'off'
      - condition: state
        entity_id: input_boolean.gast_modus
        state: 'off'
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
                    state: 'min'
            sequence:
              - service: select.select_option
                data:
                  option: min
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
      - delay: '00:01:00'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength
                    state: 'min'
            sequence:
              - service: select.select_option
                data:
                  option: min
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength

  - id: set_wifi_settings_at_morning
    alias: 'Set wifi settings at morning'
    initial_state: true
    trigger:
      - platform: time
        at: '00:06:15'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
                    state: 'max'
            sequence:
              - service: select.select_option
                data:
                  option: max
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_2_4g_signal_strength
      - delay: '00:01:00'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength
                    state: 'max'
            sequence:
              - service: select.select_option
                data:
                  option: max
                target:
                  entity_id: select.miwifi_28_d1_27_fc_ab_d8_wifi_5g_signal_strength

  - id: remind_for_unavailable_device
    alias: 'Remind for unavailable device'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.unavailable_entities
        above: 0
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.remind_for_unavailable_device.attributes.last_triggered) | int > 3200 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            {% if is_state("sensor.unavailable_entities", "1")%} 
            Es ist eine Entität nicht verfügbar.
            {% else %}
            Es sind {{ states.sensor.unavailable_entities.state }} Entitäten nicht erreichbar.
            {% endif %}
            Darunter folgende Entitäten:

            {{ states.sensor.unavailable_entities.attributes.entities }}

  - id: activate_guest_mode_if_guest_is_here
    alias: 'Activate guest mode if guest is here'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.isi
        to: 'home'
      - platform: time
        at: '01:00:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.gast_modus
          state: 'off'
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.activate_guest_mode_if_guest_is_here.attributes.last_triggered) | int > 86400 }}"
        - condition: or
          conditions:
            - condition: state
              entity_id: person.isi
              state: 'home'
            - condition: state
              entity_id: person.adri
              state: 'home'
            - condition: state
              entity_id: person.kai
              state: 'home'
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.gast_modus
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Gast Modus wurde aktiviert, da jemand vermutlich übernachtet. Automationen im Gästezimmer sind dadurch eingeschränkt.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Gast Modus wurde aktiviert, da jemand vermutlich übernachtet. Automationen im Gästezimmer sind dadurch eingeschränkt.'

  - id: deactivate_guest_mode_if_no_guest_is_here
    alias: 'Deactivate guest mode if no guest is here'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.isi
        to: 'not_home'
        for:
          days: 1
      - platform: state
        entity_id: input_boolean.gast_modus
        to: 'on'
        for:
          days: 1
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.gast_modus
          state: 'on'
        - condition: state
          entity_id: person.isi
          state: 'not_home'
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.gast_modus
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Gast Modus wurde deaktiviert, da niemand mehr zu Besuch ist.'

  - id: reactivate_adguard_protection
    alias: 'Reactivate Adguard Protection'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.adguard_protection
        to: 'off'
        for:
          hours: 12
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.adguard_protection
      - service: switch.turn_on
        data:
          entity_id: switch.adguard_filtering
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Adguard wurde wieder eingeschaltet.'

  - id: deactivate_silent_mode_after_12_hours
    alias: 'Deactivate silent mode after 12 hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_boolean.leiser_modus
        to: 'on'
        for:
          hours: 12
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.leiser_modus
          state: 'on'
        - condition: state
          entity_id: input_boolean.abwesend_modus
          state: 'off'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Der Leise Modus sollte deaktiviert werden, da er bereits seit 12 Stunden aktiv ist.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Der Leise Modus sollte deaktiviert werden, da er bereits seit 12 Stunden aktiv ist.'

  - id: remind_fabi_to_ventilate
    alias: 'Remind Fabi to ventilate'
    initial_state: off
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        to: 'home'
        for:
          hours: 4
      - platform: state
        entity_id: device_tracker.nsta0552
        to: 'home'
        for:
          hours: 4
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.schlafzimmer
          attribute: current_humidity
          above: 50
        - condition: time
          before: '22:00:00'
        - condition: state
          entity_id: input_boolean.leiser_modus
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.fabian_pc
              state: 'home'
            - condition: state
              entity_id: device_tracker.nsta0552
              state: 'home'
    action:
      - service: tts.google_say
        entity_id: media_player.schlafzimmer_speaker
        data_template:
          message: >
            Du bist nun seit 4 Stunden am PC und solltest einmal lüften und aufstehen.
      - service: notify.telegram_fabian
        data:
          message: "Du bist nun seit 4 Stunden am PC und solltest einmal lüften und aufstehen."

  - id: turn_on_light_and_climate_if_fpc_starts
    alias: 'Turn on light and climate if fpc starts'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.fabian_strom
        to: 'on'
        for:
          seconds: 5
    condition:
      condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.miwifi_34_51_80_d0_44_29
              state: 'not_home'
            - condition: state
              entity_id: switch.fernseher
              state: 'off'
    action:
      - choose:
          - conditions:
              - condition: time
                after: '16:00:00'
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 2000
              - condition: numeric_state
                entity_id: sensor.fabian_s_zuhause_solar_percentage
                below: 15
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.miwifi_34_51_80_d0_44_29
                    state: 'not_home'
                  - condition: state
                    entity_id: switch.fernseher
                    state: 'off'
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.leds_tisch
                  brightness: 255
                  transition: 2
              - delay: '00:04:00'
              - service: light.turn_on
                data:
                  entity_id: light.prismatik
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 16
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
              - condition: time
                after: '08:45:00'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.miwifi_34_51_80_d0_44_29
                    state: 'not_home'
                  - condition: state
                    entity_id: switch.fernseher
                    state: 'off'
            sequence:
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.schlafzimmer_open_window
                        state: 'on'
                    sequence:
                      - delay: '00:25:00'
              - service: climate.set_temperature
                data:
                  entity_id: climate.schlafzimmer
                  temperature: 19
                  hvac_mode: heat

  - id: turn_off_tleds_and_climate_if_fpc_stops
    alias: 'Turn off tleds and climate if fpc stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'home'
        to: 'not_home'
        for:
            minutes: 1
      - platform: state
        entity_id: device_tracker.nsta0552
        from: 'home'
        to: 'not_home'
        for:
            minutes: 1
      - platform: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 20
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: device_tracker.fabian_pc
        state: 'not_home'
        for: 
          minutes: 1
      - condition: state
        entity_id: device_tracker.nsta0552
        state: 'not_home'
        for: 
          seconds: 20
      - condition: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 20
    action:
      - service: light.turn_off
        data:
          entity_id: light.leds_tisch
      - service: media_player.volume_set
        data:
          volume_level: 0.4
          entity_id: media_player.schlafzimmer_speaker
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.thermostate_aus
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.schlafzimmer
                  hvac_mode: 'auto'

  - id: turn_on_light_and_climate_if_npc_started
    alias: 'Turn on light and climate if npc started'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.nessie_pc
        to: 'on'
        for:
          seconds: 5
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 17
              - condition: state
                entity_id: 'input_boolean.gast_modus'
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
              - condition: time
                after: '17:30:00'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: 'climate.gastezimmer'
                    state: 'off'
            sequence:
              - service: climate.set_temperature
                data:
                  entity_id: climate.gastezimmer
                  temperature: 21.5
                  hvac_mode: heat
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 17
              - condition: state
                entity_id: 'input_boolean.gast_modus'
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
              - condition: time
                before: '17:31:00'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: 'climate.gastezimmer'
                    state: 'off'
            sequence:
              - service: climate.set_temperature
                data:
                  entity_id: climate.gastezimmer
                  temperature: 20.0
                  hvac_mode: heat
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: and
                    conditions:
                      - condition: numeric_state
                        entity_id: sensor.dwd_illuminance
                        below: 2000
                      - condition: time
                        after: '16:00:00'
                  - condition: and
                    conditions:
                      - condition: numeric_state
                        entity_id: sensor.fabian_s_zuhause_solar_percentage
                        below: 20
                      - condition: time
                        after: '16:00:00'
                  - condition: and
                    conditions:
                      - condition: numeric_state
                        entity_id: sensor.fabian_s_zuhause_solar_percentage
                        below: 20
                      - condition: numeric_state
                        entity_id: sensor.dwd_illuminance
                        below: 2000
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.lampe_gastezimmer
                data:
                  transition: 2
                  brightness: 255
                  #color_mode: white
              - service: light.turn_on
                target:
                  entity_id: light.leds_gastezimmer
                data:
                  transition: 2
                  brightness: 255
                  rgb_color: [255,255,255]

  - id: turn_off_lights_and_climate_if_npc_stopped
    alias: 'Turn off lights and climate if npc stopped'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.nessie_pc_energy_power
        below: 15
        for:
          seconds: 30
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.gast_modus'
          state: 'off'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'auto'
      - service: light.turn_off
        data:
          area_id: 
            - "{{ area_id('Gästezimmer') }}"
      - service: media_player.volume_set
        data:
          volume_level: 0.4
          entity_id: media_player.gastezimmer_mini

  - id: turn_off_strom_if_npc_stops
    alias: 'Turn off strom if npc stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.vku_lb_20
        from: 'home'
        to: 'not_home'
        for:
          minutes: 5
      - platform: numeric_state
        entity_id: sensor.nessie_pc_energy_power
        below: 25
        for:
          minutes: 10
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.nessie_pc_energy_power
          below: 25
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.nessie_pc

  - id: turn_off_strom_if_fpc_stops
    alias: 'Turn off strom if fpc stops'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 25
        for:
          minutes: 10
      - platform: state
        entity_id: device_tracker.nsta0552
        from: 'home'
        to: 'not_home'
        for:
          minutes: 5
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'home'
        to: 'not_home'
        for:
          minutes: 60
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.steckdose_schlafzimmer_energy_power
          below: 25
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.fabian_strom

  - id: turn_on_light_climate_if_tv_starts
    alias: 'Turn on light and climate if tv starts'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.miwifi_34_51_80_d0_44_29
        from: 'not_home'
        to: 'home'
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 3000
              - condition: time
                after: '14:00:00'
              - condition: numeric_state
                entity_id: sensor.fabian_s_zuhause_solar_percentage
                below: 15
            sequence:
              - service: light.turn_on
                data:
                  entity_id: 
                    - light.leds_wohnzimmer_tv
                    - light.leds_wohnzimmer
                    - light.yeelight_color_0x00000000036dc050
                  transition: 2
      - choose:
          - conditions:
              - condition: state
                entity_id: 'input_boolean.thermostate_aus'
                state: 'off'
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 17
            sequence:
              - service: climate.set_temperature
                data:
                  entity_id: climate.wohnzimmer
                  temperature: 21.5
                  hvac_mode: heat

  - id: turn_off_climate_if_tv_stops
    alias: 'Turn off climate if tv stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.miwifi_34_51_80_d0_44_29
        from: 'home'
        to: 'not_home'
    condition:
      - condition: state
        entity_id: 'input_boolean.thermostate_aus'
        state: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.wohnzimmer
          hvac_mode: 'auto'

  - id: remind_for_open_window_bathroom
    alias: 'Remind for open window bathroom'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.bad_open_window
        to: 'off'
        for:
          minutes: 31
      - platform: state
        entity_id: binary_sensor.bad_open_window
        to: 'off'
        for:
          minutes: 45
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.bad
          attribute: current_temperature
          below: 18
        - condition: numeric_state
          entity_id: sensor.bad_heating
          above: 35
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.gast_modus
              state: 'off'
            - condition: state
              entity_id: input_boolean.leiser_modus
              state: 'off'
            - condition: state
              entity_id: person.nessie
              state: 'home'
            - condition: state
              entity_id: person.fabian
              state: 'home'
          sequence:
            - service: tts.google_say
              entity_id: media_player.gastezimmer_mini
              data: 
                message: Es wurde vergessen das Fenster im Bad zu schließen.
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.nessie
                    state: 'home'
                  - condition: state
                    entity_id: person.fabian
                    state: 'home'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                  - media_player.schlafzimmer_speaker
                data: 
                  message: Es wurde eventuell vermutlich vergessen das Fenster im Bad zu schließen.
        default:
          - service: notify.telegram_fabian
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Bad zu schließen."
          - service: notify.telegram_nessie
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Bad zu schließen."

  - id: remind_for_open_window_sleeping_room
    alias: 'Remind for open window sleeping room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.schlafzimmer_open_window
        to: 'off'
        for:
          minutes: 31
      - platform: state
        entity_id: binary_sensor.schlafzimmer_open_window
        to: 'off'
        for:
          minutes: 45
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.schlafzimmer
          attribute: current_temperature
          below: 18
        - condition: numeric_state
          entity_id: sensor.schlafzimmer_heating
          above: 35
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.gast_modus
              state: 'off'
            - condition: state
              entity_id: input_boolean.leiser_modus
              state: 'off'
            - condition: state
              entity_id: person.nessie
              state: 'home'
            - condition: state
              entity_id: person.fabian
              state: 'home'
          sequence:
            - service: tts.google_say
              entity_id: media_player.gastezimmer_mini
              data: 
                message: Es wurde eventuell vergessen das Fenster im Schlafzimmer zu schließen.
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.nessie
                    state: 'home'
                  - condition: state
                    entity_id: person.fabian
                    state: 'home'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                data: 
                  message: Es wurde vermutlich vergessen das Fenster im Schlafzimmer zu schließen.
        default:
          - service: notify.telegram_fabian
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Schlafzimmer zu schließen."
          - service: notify.telegram_nessie
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Schlafzimmer zu schließen."

  - id: remind_for_open_window_living_room
    alias: 'Remind for open window living room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnzimmer_open_window
        to: 'off'
        for:
          minutes: 31
      - platform: state
        entity_id: binary_sensor.wohnzimmer_open_window
        to: 'off'
        for:
          minutes: 45
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.wohntimmer
          attribute: current_temperature
          below: 18
        - condition: numeric_state
          entity_id: sensor.wohnzimmer_heating
          above: 35
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.gast_modus
              state: 'off'
            - condition: state
              entity_id: input_boolean.leiser_modus
              state: 'off'
            - condition: state
              entity_id: person.nessie
              state: 'home'
            - condition: state
              entity_id: person.fabian
              state: 'home'
          sequence:
            - service: tts.google_say
              entity_id: media_player.gastezimmer_mini
              data: 
                message: Es wurde eventuell vergessen das Fenster im Wohnzimmer zu schließen.
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.nessie
                    state: 'home'
                  - condition: state
                    entity_id: person.fabian
                    state: 'home'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.kuche_speaker
                  - media_player.schlafzimmer_speaker
                data: 
                  message: Es wurde eventuell vergessen das Fenster im Wohnzimmer zu schließen.
        default:
          - service: notify.telegram_fabian
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Bad zu schließen."
          - service: notify.telegram_nessie
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Bad zu schließen."

  - id: remind_for_open_window_guest_room
    alias: 'Remind for open window guest room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.gastezimmer_open_window
        to: 'off'
        for:
          minutes: 31
      - platform: state
        entity_id: binary_sensor.gastezimmer_open_window
        to: 'off'
        for:
          minutes: 45
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.gastezimmer
          attribute: current_temperature
          below: 18
        - condition: numeric_state
          entity_id: sensor.gastezimmer_heating
          above: 85
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.nessie
                    state: 'home'
                  - condition: state
                    entity_id: person.fabian
                    state: 'home'
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_uhr
                  - media_player.kuche_speaker
                  - media_player.schlafzimmer_speaker
                data: 
                  message: Es wurde eventuell vergessen das Fenster im Gästezimmer zu schließen.
        default:
          - service: notify.telegram_fabian
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Gästezimmer zu schließen."
          - service: notify.telegram_nessie
            data:
              message: "Es wurde vermutlich vergessen das Fenster im Gästezimmer zu schließen."

  - id: remind_for_open_window_after_5_minutes_in_bathroom
    alias: 'Remind for open window after 5 minutes in bathroom'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.bad_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.bad'
          attribute: current_temperature
          below: 21
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'on'
            sequence:
              - service: notify.mobile_app_nessie_iphone
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.1
              - service: notify.mobile_app_fabian_iphone
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.1
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nsta0552
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer_speaker
                    state: 'off'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
              - service: notify.mobile_app_fabian_iphone
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.1
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.schlafzimmer_speaker
              - service: tts.google_say
                entity_id: media_player.schlafzimmer_speaker
                data: 
                  message: Das Fenster im Bad kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.schlafzimmer_speaker
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.vku_lb_20
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    state: 'off'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
              - service: notify.mobile_app_nessie_iphone
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
                  data:
                    push:
                      sound:
                        name: "default"
                        critical: 1
                        volume: 0.1
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.gastezimmer_mini
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data: 
                  message: Das Fenster im Bad kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.gastezimmer_mini
      - choose:
          - conditions:
              - condition: state
                entity_id: person.fabian
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: person.nessie
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.kuche_speaker
              - service: tts.google_say
                entity_id: media_player.kuche_speaker
                data: 
                  message: Das Fenster im Bad kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.kuche_speaker
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv
                    state: 'unavailable'
            sequence:
              - service: notify.wohnzimmer_tv
                continue_on_error: true
                data:
                  message: Das Fenster im Bad kann wieder geschlossen werden.
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'off'
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: media_player.wohnzimmer_uhr
                data:
                  message: Das Fenster im Bad kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr

  - id: remind_for_open_window_after_5_minutes_in_sleeping_room
    alias: 'Remind for open window after 5 minutes in sleeping room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.schlafzimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.schlafzimmer'
          attribute: current_temperature
          below: 19
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.vku_lb_20
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    state: 'off'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.gastezimmer_mini
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data: 
                  message: Das Fenster im Schlafzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.gastezimmer_mini
      - choose:
          - conditions:
              - condition: state
                entity_id: person.fabian
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: person.nessie
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.kuche_speaker
              - service: tts.google_say
                entity_id: media_player.kuche_speaker
                data: 
                  message: Das Fenster im Schlafzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.kuche_speaker
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv
                    state: 'unavailable'
            sequence:
              - service: notify.wohnzimmer_tv
                continue_on_error: true
                data:
                  message: Das Fenster im Schlafzimmer kann wieder geschlossen werden.
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'off'
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: media_player.wohnzimmer_uhr
                data:
                  message: Das Fenster im Schlafzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr

  - id: remind_for_open_window_after_5_minutes_in_living room
    alias: 'Remind for open window after 5 minutes in living room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnzimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.wohnzimmer'
          attribute: current_temperature
          below: 20
        - condition: state
          entity_id: switch.fernseher
          state: 'off'
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: 
                      - device_tracker.fabian_pc
                      - device_tracker.nsta0552
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer_speaker
                    state: 'off'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.schlafzimmer_speaker
              - service: tts.google_say
                entity_id: media_player.schlafzimmer_speaker
                data: 
                  message: Das Fenster im Wohnzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.schlafzimmer_speaker
      - choose:
          - conditions:
              - condition: state
                entity_id: 
                  - device_tracker.schnuppes_pc
                  - device_tracker.vku_lb_20
                match: any
                state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    state: 'off'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.gast_modus
                state: 'off'
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.gastezimmer_mini
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data: 
                  message: Das Fenster im Wohnzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.gastezimmer_mini
      - choose:
          - conditions:
              - condition: state
                entity_id: person.fabian
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nsta0552
                    state: 'home'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: person.nessie
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.kuche_speaker
              - service: tts.google_say
                entity_id: media_player.kuche_speaker
                data: 
                  message: Das Fenster im Wohnzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.kuche_speaker

  - id: remind_for_open_window_after_5_minutes_in_guest_room
    alias: 'Remind for open window after 5 minutes in guest room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.gastezimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.gastezimmer'
          attribute: current_temperature
          below: 20
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.leiser_modus
                    state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nsta0552
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer_speaker
                    state: 'off'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.schlafzimmer_speaker
              - service: tts.google_say
                entity_id: media_player.schlafzimmer_speaker
                data: 
                  message: Das Fenster im Gästezimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.schlafzimmer_speaker
      - choose:
          - conditions:
              - condition: state
                entity_id: person.fabian
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: person.nessie
                state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'off'
                  - condition: state
                    entity_id: media_player.kuche_speaker
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.kuche_speaker
              - service: tts.google_say
                entity_id: media_player.kuche_speaker
                data: 
                  message: Das Fenster im Gästezimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.kuche_speaker
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv
                    state: 'unavailable'
            sequence:
              - service: notify.wohnzimmer_tv
                continue_on_error: true
                data:
                  message: Das Fenster im Gästezimmer kann wieder geschlossen werden.
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.leiser_modus
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'off'
                  - condition: state
                    entity_id: media_player.wohnzimmer_uhr
                    state: 'idle'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.wohnzimmer_uhr
              - service: tts.google_say
                entity_id: media_player.wohnzimmer_uhr
                data:
                  message: Das Fenster im Gästezimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_uhr

  - id: turn_off_bett_if_no_device_is_charging
    alias: 'Turn off bett if no device is charging'
    initial_state: on
    trigger:
      - platform: state
        entity_id: 
          - sensor.fabian_ipadpro_battery_state
          - sensor.fabian_phone_battery_state
          - sensor.nessie_iphone_battery_state_2
        to: 'discharging'
      - platform: state
        entity_id: 
          - sensor.fabian_ipadpro_battery_state
          - sensor.fabian_phone_battery_state
          - sensor.nessie_iphone_battery_state_2
        to: 'Not Charging'
      - platform: numeric_state
        entity_id: 
          - sensor.fabian_ipadpro_battery_level
          - sensor.fabian_iphone_battery_state
          - sensor.nessie_iphone_battery_state
        above: 90
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.smart_power_strip_pro_usb_1
          state: 'on'
        #- condition: or
        #  conditions:
        #    - condition: state
        #      entity_id: sensor.fabian_ipadpro_battery_state
        #      state: 'discharging'
        #    - condition: numeric_state
        #      entity_id: sensor.fabian_ipadpro_battery_level
        #      above: 90
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.fabian_phone_battery_state
              state: 'discharging'
            - condition: numeric_state
              entity_id: sensor.fabian_iphone_battery_state
              above: 80
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.nessie_iphone_battery_state_2
              state: 'discharging'
            - condition: numeric_state
              entity_id: sensor.nessie_phone_battery_level
              above: 80
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.smart_power_strip_pro_usb_1

  - id: turn_off_bett_after_x_hours
    alias: 'Turn off bett after x hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.smart_power_strip_pro_usb_1
        from: 'off'
        to: 'on'
        for:
            minutes: 180
      - platform: state
        entity_id: switch.smart_power_strip_pro_usb_1
        from: 'off'
        to: 'on'
        for:
            minutes: 360
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.smart_power_strip_pro_usb_1
          state: 'on'
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.smart_power_strip_pro_usb_1

  - id: turn_off_staubsauger_after_x_hours
    alias: 'Turn off staubsauger after x hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.staubsauger
        from: 'off'
        to: 'on'
        for:
            minutes: 150
      - platform: state
        entity_id: switch.staubsauger
        from: 'off'
        to: 'on'
        for:
            minutes: 360
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.staubsauger

  - id: turn_on_staubsauger_weekly
    alias: 'Turn on staubsauger weekly'
    initial_state: on
    trigger:
      platform: time
      at: '13:00:00'
    condition:
      - condition: time
        weekday:
          - mon
          - thu
      - condition: state
        entity_id: input_boolean.abwesend_modus
        state: "off"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.staubsauger
      - service: mqtt.publish
        data:
          topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
          payload: '{"segment_ids": ["6", "5", "4"], "customOrder": true}'

  - id: vacuum_cleaner_error
    alias: 'Vacuum Cleaner Error'
    initial_state: on
    trigger:
      - platform: state
        entity_id: sensor.valetudo_dreamez10pro_error_description
        not_from:
          - "unavailable"
          - "unknown"
          - ""
          - "Unknown"
    action:
      - service: telegram_bot.send_message
        data_template: 
          message: >
            James hat ein Problem: *{{ states.sensor.valetudo_dreamez10pro_error_description.state }}*

            Die Reinigung wurde daher unterbrochen.
          target: !secret telegram_chat_fabian
      - service: telegram_bot.send_message
        data_template: 
          message: >
            James hat ein Problem: *{{ states.sensor.valetudo_dreamez10pro_error_description.state }}*

            Die Reinigung wurde daher unterbrochen.
          target: !secret telegram_chat_nessie

  - id: james_room_cleaning
    alias: 'James Raum Reinigiung'
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_button.james_room_cleaning
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Wohnzimmer'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["6"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Küche'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["4"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Schlafzimmer'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["3"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Gästezimmer'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["7"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Bad'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["1"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Flur'
            sequence:
              - service: mqtt.publish
                data:
                  topic: valetudo/dreamez10pro/MapSegmentationCapability/clean/set
                  payload: '{"segment_ids": ["5"]}'
          - conditions:
              - condition: state
                entity_id: input_select.vacuum_cleaning_location
                state: 'Gesamt'
            sequence:
              - service: vacuum.start
                data:
                  entity_id: vacuum.valetudo_dreamez10pro

  - id: turn_on_lights_in_morning
    alias: 'Turn on lights in morning'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
        from: 'not_home'
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '05:00:00'
        - condition: time
          before: '09:00:00'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_lights_in_morning.attributes.last_triggered) | int > 1800 }}"
        - condition: or
          conditions:
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
                  state: home
                - condition: state
                  entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
                  state: home
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
                  state: home
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: device_tracker.google_maps_112174659110860535869
                      state: home
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
                  state: home
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: device_tracker.google_maps_112056758146194246561
                      state: home
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.dwd_illuminance
                    below: 2000
                  - condition: numeric_state
                    entity_id: sensor.fabian_s_zuhause_solar_percentage
                    below: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.adaptive_lighting_sleeping_room
              - service: light.turn_on
                data:
                  entity_id: 
                    - light.leds_tisch
                    - light.yeelight_bslamp2_0x0000000013fea10f
                  brightness: 2
              - delay: '00:02:30'
              - service: automation.trigger
                entity_id: automation.increase_lights_in_morning
      - delay: '00:00:30'
      - service: automation.trigger
        entity_id: automation.notify_for_high_humidity
      - service: light.turn_on
        data_template:
          entity_id: light.bett_gluhbirne
          brightness: 100
          rgb_color: > 
            {% if state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'snowy' %}
            [255,255,255] 
            {% elif state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'rainy' %}
            [0,0,255] 
            {% elif state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'sunny' %}
            [0,255,0]
            {% else %}
            [0,0,0]
            {% endif %}
      #- delay: '00:05:00'
      #- service: light.turn_off
      #  data:
      #    entity_id: 
      #      - light.yeelight_bslamp2_0x0000000013fea10f
      - delay: '00:20:00'
      - service: switch.turn_on
        data:
          entity_id: switch.adaptive_lighting_sleeping_room
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'not_home'
              - condition: state
                entity_id: 'device_tracker.nsta0552'
                state: 'not_home'
            sequence:
              - service: light.turn_off
                data:
                  entity_id: 
                    - light.leds_tisch

  - id: increase_lights_in_morning
    alias: 'Increase lights in morning'
    initial_state: off
    mode: restart
    trigger:
      - platform: state
        entity_id: automation.increase_lights_in_morning
        to: 'on'
    condition:
      condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: light.yeelight_bslamp2_0x0000000013fea10f
          state: 'off'
        - condition: state
          entity_id: light.leds_tisch
          state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.leds_tisch
          state: 'unavailable'
        - condition: not
          conditions:
            - condition: state
              entity_id: light.leds_tisch
              attribute: brightness
              state: '255'
    action:
      - delay: '00:00:15'
      - choose:
          - conditions:
              - condition: state
                entity_id: light.leds_tisch
                state: 'on'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.leds_tisch
                    attribute: brightness
                    state: '255'
            sequence:
              - service: light.turn_on
                entity_id: light.leds_tisch
                data_template:
                  brightness: '{{states.light.leds_tisch.attributes.brightness + 5}}'
      - choose:
          - conditions:
              - condition: state
                entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                state: 'on'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                    attribute: brightness
                    state: '255'
            sequence:
              - service: light.turn_on
                entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                data_template:
                  brightness: '{{states.light.yeelight_bslamp2_0x0000000013fea10f.attributes.brightness + 5}}'
      - service: automation.trigger
        data:
          entity_id: automation.increase_lights_in_morning

  - id: Remind for leaving wohnzimmer
    alias: 'Remind for leaving wohnzimmer'
    initial_state: True
    trigger:
      - platform: time
        at: '06:55:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.leiser_modus'
          state: 'off'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: or
          conditions:
          - condition: state
            entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
            state: home
          - condition: state
            entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
            state: home
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_uhr
          - media_player.kuche_speaker
        data_template: 
          message: >
            Es ist {{ now().hour }} Uhr {{ now().minute }} .
            Die Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} Uhr hat voraussichtlich 
            {{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} Minuten Verspätung.
      - delay: '00:00:12'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: binary_sensor.schlafzimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.gastezimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.wohnzimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.bad_open_window
                    state: 'on'
            sequence:
              - parallel:
                  - service: tts.google_say
                    entity_id: media_player.wohnzimmer_uhr
                    data_template: 
                      message: >
                        Das Fenster im {% if is_state('binary_sensor.schlafzimmer_open_window', 'on') %}
                          Schlafzimmer 
                        {% endif %}
                        {% if is_state('binary_sensor.gastezimmer_open_window', 'on') %}
                          Gästezimmer
                        {% endif %}
                        {% if is_state('binary_sensor.wohnzimmer_open_window', 'on') %}
                          Wohnzimmer
                        {% endif %}
                        {% if is_state('binary_sensor.bad_open_window', 'on') %}
                          Bad
                        {% endif %}
                        muss noch geschlossen werden.
                  - service: tts.google_say
                    entity_id: media_player.kuche_speaker
                    data_template: 
                      message: >
                        Das Fenster im {% if is_state('binary_sensor.schlafzimmer_open_window', 'on') %}
                          Schlafzimmer 
                        {% endif %}
                        {% if is_state('binary_sensor.gastezimmer_open_window', 'on') %}
                          Gästezimmer
                        {% endif %}
                        {% if is_state('binary_sensor.wohnzimmer_open_window', 'on') %}
                          Wohnzimmer
                        {% endif %}
                        {% if is_state('binary_sensor.bad_open_window', 'on') %}
                          Bad
                        {% endif %}
                        muss noch geschlossen werden.

  - id: remind_for_leaving_schlafzimmer
    alias: 'Remind for leaving schlafzimmer'
    initial_state: True
    trigger:
      - platform: time
        at: '06:55:00'
    condition:
      condition: and
      conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: device_tracker.miwifi_a0_fb_c5_10_d2_75
        state: home
      - condition: state
        entity_id: device_tracker.miwifi_a0_fb_c5_c5_d7_ad
        state: home
      - condition: state
        entity_id: 'input_boolean.leiser_modus'
        state: 'off'
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.schlafzimmer_speaker
          - media_player.kuche_speaker
        data_template: 
          message: >
            Es ist 
            {{ now().hour }} Uhr {{ now().minute }} . 
            Die Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} Uhr hat voraussichtlich {{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} Minuten Verspätung.
      - delay: '00:00:12'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: binary_sensor.schlafzimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.gastezimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.wohnzimmer_open_window
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.bad_open_window
                    state: 'on'
            sequence:
              - parallel:
                  - service: tts.google_say
                    entity_id: media_player.schlafzimmer_speaker
                    data_template: 
                      message: >
                        Das Fenster im {% if is_state('binary_sensor.schlafzimmer_open_window', 'on') %}
                          Schlafzimmer 
                        {% endif %}
                        {% if is_state('binary_sensor.gastezimmer_open_window', 'on') %}
                          Gästezimmer
                        {% endif %}
                        {% if is_state('binary_sensor.wohnzimmer_open_window', 'on') %}
                          Wohnzimmer
                        {% endif %}
                        {% if is_state('binary_sensor.bad_open_window', 'on') %}
                          Bad
                        {% endif %}
                        muss noch geschlossen werden.
                  - service: tts.google_say
                    entity_id: media_player.kuche_speaker
                    data_template: 
                      message: >
                        Das Fenster im {% if is_state('binary_sensor.schlafzimmer_open_window', 'on') %}
                          Schlafzimmer 
                        {% endif %}
                        {% if is_state('binary_sensor.gastezimmer_open_window', 'on') %}
                          Gästezimmer
                        {% endif %}
                        {% if is_state('binary_sensor.wohnzimmer_open_window', 'on') %}
                          Wohnzimmer
                        {% endif %}
                        {% if is_state('binary_sensor.bad_open_window', 'on') %}
                          Bad
                        {% endif %}
                        muss noch geschlossen werden.

  - id: turn_on_light_in_sleeping_room_if_tv_turned_off
    alias: 'Turn on light in sleeping room if tv turned off'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.miwifi_34_51_80_d0_44_29
        from: 'home'
        to: 'not_home'
        for:
          seconds: 5
      - platform: state
        entity_id: switch.fernseher
        to: 'off'
        for:
          seconds: 5
    condition:
      - condition: time
        after: '21:00:00'
        before: '23:50:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_light_in_sleeping_room_if_tv_turned_off.attributes.last_triggered) | int > 1800 }}"
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.bett_gluhbirne
                    state: unavailable
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.bett_gluhbirne
                  brightness: 255
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                    state: unavailable
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                  brightness: 255
                  color_temp: 279
      - service: light.turn_off
        data:
          entity_id: 
            - light.leds_tisch
      - delay: '00:04:00'
      - service: light.turn_off
        data:
          area_id: 
            - "{{ area_id('Wohnzimmer') }}"

  - id: turn_on_lights_in_livingroom_when_dark_outside
    alias: 'Turn on lights in livingroom when dark outside'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.dwd_illuminance
        below: 1800
      - platform: numeric_state
        entity_id: sensor.fabian_s_zuhause_solar_percentage
        below: 18
      - platform: sun
        event: sunset
        offset: "-00:30:00"
    condition:
      - condition: state
        entity_id: device_tracker.miwifi_34_51_80_d0_44_29
        state: home
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_lights_in_livingroom_when_dark_outside.attributes.last_triggered) | int > 1800 }}"
    action:
      - service: light.turn_on
        data:
          entity_id: 
            - light.leds_wohnzimmer_tv
            - light.leds_wohnzimmer
            - light.yeelight_color_0x00000000036dc050
          transition: 2
  
  - id: turn_off_prismatik_during_the_day
    alias: 'Turn off Prismatik during the day'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'not_home'
        to: 'home'
        for:
          minutes: 2
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.dwd_illuminance
          above: 2000
        - condition: numeric_state
          entity_id: sensor.fabian_s_zuhause_solar_percentage
          above: 20
    action:
      - delay: '00:04:00'
      - service: light.turn_off
        data:
          entity_id: light.prismatik

  - id: turn_on_lights_in_sleeping_room_when_sun_set
    alias: 'Turn on lights in sleeping room when sun set'
    initial_state: on
    trigger:
      platform: sun
      event: sunset
      offset: "-00:05:00"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'device_tracker.miwifi_34_51_80_d0_44_29'
          state: 'not_home'
        - condition: or
          conditions:
            - condition: state
              entity_id: 'device_tracker.fabian_pc'
              state: 'home'
            - condition: state
              entity_id: 'device_tracker.nsta0552'
              state: 'home'
    action:
      - service: light.turn_on
        data:
          entity_id: light.leds_tisch
          brightness: 255
          transition: 2
      - delay: '00:04:00'
      - service: light.turn_on
        data:
          entity_id: light.prismatik

  - id: Turn_on_lights_in_sleeping_room_when_cloudy
    alias: 'Turn on lights in sleeping room when cloudy'
    initial_state: off
    trigger:
      - platform: sun
        event: sunset
        offset: "-02:00:00"
      - platform: state
        entity_id: weather.dwd_weather_ebersberg_1h
        to: 'cloudy'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: weather.dwd_weather_ebersberg_1h
          state: cloudy
        - condition: sun
          after: sunset
          after_offset: "-02:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: 'device_tracker.fabian_pc'
              state: 'home'
            - condition: state
              entity_id: 'device_tracker.nsta0552'
              state: 'home'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.miwifi_34_51_80_d0_44_29
              state: 'not_home'
            - condition: state
              entity_id: switch.fernseher
              state: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.leds_tisch
          brightness: 255
          transition: 2
      - delay: '00:04:00'
      - service: light.turn_on
        data:
          entity_id: light.prismatik

  - id: turn_on_lights_in_guest_room_when_dark_outside
    alias: 'Turn on lights in guest room when dark outside'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.dwd_illuminance
        below: 2000
      - platform: numeric_state
        entity_id: sensor.fabian_s_zuhause_solar_percentage
        below: 27
    condition:
      condition: and
      conditions:
        - condition: or
          conditions: 
            - condition: and
              conditions:
                - condition: numeric_state
                  entity_id: sensor.dwd_illuminance
                  below: 2000
                - condition: time
                  after: '15:00:00'
            - condition: numeric_state
              entity_id: sensor.fabian_s_zuhause_solar_percentage
              below: 20
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_lights_in_guest_room_when_dark_outside.attributes.last_triggered) | int > 1800 }}"
        - condition: or
          conditions: 
            - condition: state
              entity_id: 'device_tracker.schnuppes_pc'
              state: 'home'
            - condition: and
              conditions:
                - condition: state
                  entity_id: 'device_tracker.vku_lb_20'
                  state: 'home'
                - condition: state
                  entity_id: 'switch.nessie_pc'
                  state: 'on'
    action:
      - service: light.turn_on
        data:
          area_id: 
            - "{{ area_id('Gästezimmer') }}"
          transition: 2

  - id: turn_off_lights_in_rooms_when_bright_outside
    alias: 'Turn off lights in rooms when bright outside'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.dwd_illuminance
        above: 2510
      - platform: numeric_state
        entity_id: sensor.fabian_s_zuhause_solar_percentage
        above: 25
    condition:
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_lights_in_guest_room_when_dark_outside.attributes.last_triggered) | int > 2400 }}"
    action:
      - service: light.turn_off
        data:
          area_id: 
            - "{{ area_id('Wohnzimmer') }}"
            - "{{ area_id('Schlafzimmer') }}"
            - "{{ area_id('Gästezimmer') }}"

  - id: turn_off_climates_on_warm_days
    alias: 'Turn off Climates on warm days'
    initial_state: True
    trigger:
      platform: numeric_state
      entity_id: weather.dwd_weather_ebersberg_1h
      attribute: temperature
      above: 14
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'sunny' }}"
        - condition: template
          value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[1]['condition'] == 'sunny' }}"
        - condition: template
          value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[1]['temperature'] >= '14' }}"
        #- condition: state
        #  entity_id: 'weather.dwd_weather_ebersberg_1h'
        #  state: 'sunny'
        - condition: state
          entity_id: 'input_boolean.thermostate_aus'
          state: 'off'
        - condition: or
          conditions:
            - condition: template
              value_template: '{{ now().month <= 10 and now().month >= 2 }}'
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.thermostate_aus
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Thermostate wurden ausgeschaltet, da es {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} ° hat und sonnig ist.'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Thermostate wurden ausgeschaltet, da es {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} ° hat und sonnig ist.'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'

  - id: turn_on_climates_on_cold_days
    alias: 'Turn on Climates on cold days'
    initial_state: True
    trigger:
      - platform: numeric_state
        entity_id: weather.dwd_weather_ebersberg_1h
        attribute: temperature
        below: 10
      - platform: sun
        event: sunset
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.thermostate_aus'
          state: 'on'
        - condition: or
          conditions:
            - condition: and
              conditions:
                - condition: numeric_state
                  entity_id: weather.dwd_weather_ebersberg_1h
                  attribute: temperature
                  below: 10
                - condition: sun
                  after: sunset
                  after_offset: "-04:00:00"
                - condition: time
                  before: '20:30:00'
                - condition: template
                  value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_climates_on_cold_days.attributes.last_triggered) | int > 