  - id: turn_off_everything_except_guest_room_if_nobody_is_at_home
    alias: 'Turn off everything except guest room if nobody is at home'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1
      - platform: state
        entity_id: person.nessie
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: person.fabian
          state: home
        - condition: state
          entity_id: person.nessie
          state: home
    action:
      - service: light.turn_off
        data:
          entity_id: 
            - group.schlafzimmer
            - group.wohnzimmer
            - group.keller
      - service: switch.turn_off
        data:
          entity_id: 
            - group.wohnzimmer
            - switch.bett_usb_ports
            - switch.bett
            - switch.keller_usb_ports
            - switch.strom_keller
            - switch.lichtschalter
            - switch.deckenlampe
            - switch.schreibtisch
      - service: media_player.turn_off
        data:
          entity_id: 
            - media_player.schlafzimmer
            - media_player.wohnzimmer_mini
            - media_player.kueche_mini
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'home'
              - condition: numeric_state
                entity_id: sensor.steckdose_schlafzimmer_energy_power
                above: 20
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Keiner ist mehr zu Hause! Fabian-PC ist allerdings noch an!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownfpc, Ruhezustand:/hibernatefpc'
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: 'home'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Keiner ist mehr zu Hause. Nessie-PC ist allerdings noch an und wurde nicht ausgeschaltet!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownfpc, Ruhezustand:/hibernatefpc'
              - service: notify.telegram_nessie
                data:
                  message: "Keiner ist mehr zu Hause. Nessie-PC ist allerdings noch an und wurde nicht ausgeschaltet!"
                  data:
                    inline_keyboard:
                    - 'Herunterfahren:/shutdownnpc, Ruhezustand:/hibernatenpc'
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'not_home'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.fs_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: 'not_home'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.vk_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
            sequence:
              - service: light.turn_off
                data:
                  entity_id: group.gastezimmer
              - service: media_player.turn_off
                data:
                  entity_id: media_player.gastezimmer_mini
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.gastezimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.gastezimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.wohnzimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.wohnzimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.schlafzimmer
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.schlafzimmer
                  hvac_mode: auto
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.bad
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data: 
                  entity_id: climate.bad
                  hvac_mode: auto

#  - id: turn_off_5ghz_wifi_and_turn_on_ssh_if_nobody_is_at_home
#    alias: 'Turn off 5ghz wifi and turn on ssh if nobody is at home'
#    initial_state: on
#    trigger:
#      - platform: state
#        entity_id: device_tracker.fabian_iphone
#        from: 'home'
#        to: 'not_home'
#        for:
#          minutes: 10
#      - platform: state
#        entity_id: device_tracker.50_3d_c6_5b_4f_bd
#        from: 'home'
#        to: 'not_home'
#        for:
#          minutes: 10
#      - platform: state
#        entity_id: person.fabian
#        from: 'home'
#        to: 'not_home'
#        for:
#          minutes: 2
#      - platform: state
#        entity_id: person.nessie
#        from: 'home'
#        to: 'not_home'
#        for:
#          minutes: 2
#    condition:
#      condition: and
#      conditions:
#        - condition: state
#          entity_id: input_boolean.guest_mode
#          state: 'off'
#        - condition: state
#          entity_id: device_tracker.fabian_iphone
#          state: not_home
#        - condition: state
#          entity_id: device_tracker.50_3d_c6_5b_4f_bd
#          state: not_home
#    action:
      #- service: switch.turn_off
      #  data: 
      #    entity_id: switch.fritzbox_3490_wifi_5ghz
#      - service: switch.turn_on
#        data: 
#          entity_id: switch.fritzbox_3490_portforward_ssh

  - id: turn_on_5ghz_wifi_and_ssh_off_if_coming_home
    alias: 'Turn on 5ghz wifi and ssh off if coming home'
    initial_state: true
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_iphone
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.fabian
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: person.nessie
        from: 'not_home'
        to: 'home'
    action:
      #- service: switch.turn_on
      #  data:
      #    entity_id: switch.fritzbox_3490_wifi_5ghz
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.away_mode
      - service: switch.turn_off
        data: 
          entity_id: switch.fritzbox_3490_portforward_ssh

#  - id: turn_on_ventilator_if_coming_home
#  - alias: 'Turn on ventilator if coming home'
#    initial_state: on
#    trigger:
#      - platform: state
#        entity_id: person.fabian
#        from: 'not_home'
#        to: 'home'
#      - platform: state
#        entity_id: person.nessie
#        from: 'not_home'
#        to: 'home'
#    condition:
#      condition: and
#      conditions:
#        - condition: numeric_state
#          entity_id: 'weather.dwd_weather_ebersberg_1h'
#          attribute: temperature
#          above: 22
#        - condition: time
#          after: '12:00:00'
#          before: '21:00:00'
#    action:
#      - service: switch.turn_on
#        data:
#          entity_id: switch.ventilator

  - id: turn_off_light_at_night_notify
    alias: 'Turn off light at night - notify'
    initial_state: true
    trigger:
      platform: time
      at: '00:30:00'
    condition:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      - condition: template
        value_template: >
          {% set domain = 'light' %}
          {% set state = 'on' %}
          {{ states[domain] | selectattr('state','eq', state) | list | count > 0 }}
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
              - condition: template
                value_template: >
                  {% set domain = 'light' %}
                  {% set state = 'on' %}
                  {{ states[domain] | selectattr('state','eq', state) | list | count > 1 }}
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet, außer im Keller.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet, außer im Keller.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.keller_tv
                state: 'unavailable'
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter werden in 20 Minuten ausgeschaltet.'
                  inline_keyboard:
                    - 'Abbruch:/cancellight, Okay:/telegramno'


  - id: turn_off_light_at_night
    alias: 'Turn off light at night'
    initial_state: true
    trigger:
      platform: time
      at: '00:50:00'
    condition:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      - condition: template
        value_template: >
          {% set domain = 'light' %}
          {% set state = 'on' %}
          {{ states[domain] | selectattr('state','eq', state) | list | count > 0 }}
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_answer_cancel_light_turn_off.attributes.last_triggered) | int > 1500 }}"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {% set domain = 'light' %}
                  {% set state = 'on' %}
                  {{ states[domain] | selectattr('state','eq', state) | list | count > 1 }}
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: 'unavailable'
            sequence:
              - service: light.turn_off
                entity_id: 
                  - group.schlafzimmer
                  - group.wohnzimmer
                  - group.gastezimmer
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter (außer im Keller) wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter (außer im Keller) wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.keller_tv
                state: 'unavailable'
            sequence:
              - service: light.turn_off
                entity_id: all
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Alle Lichter wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: 'Alle Lichter wurden automatisch ausgeschaltet, da diese vermutlich vergessen wurden.'

  - id: set_climate_at_night
    alias: 'Set climate at night'
    initial_state: true
    trigger:
      platform: time
      at: '00:50:00'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.climate_off
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: 
                    - climate.wohnzimmer
                    - climate.schlafzimmer
                    - climate.bad
                  hvac_mode: 'auto'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.climate_off
                state: 'on'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: 
                    - climate.wohnzimmer
                    - climate.schlafzimmer
                    - climate.bad
                  hvac_mode: 'off'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'auto'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'on'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'off'

  - id: remind_for_unavailable_device
    alias: 'Remind for unavailable device'
    variables:
      watched: >
        {{states|selectattr('state','in',['unavailable','unknown','none'])
                |rejectattr('domain','eq','group')
                |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))
                |map(attribute='entity_id')
                |list}}
    trigger:
      platform: template
      value_template: >
        {{watched|count|int > 0}}
      for:
        minutes: 5
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Es sind {{ states|selectattr('state','in',['unavailable','unknown','none'])|rejectattr('domain','eq','group')
            |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))|list|count }} Gerät(e) nicht verfügbar, bitte prüfen:
            {{ states|selectattr('state','in',['unavailable','unknown','none'])|rejectattr('domain','eq','group')
                |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))|map(attribute='entity_id')|list }}

  - id: activate_guest_mode_if_isi_is_here
    alias: 'Activate guest mode if isi is here'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.isi_phone
        from: 'not_home'
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.activate_guest_mode_if_isi_is_here.attributes.last_triggered) | int > 86400 }}"
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.guest_mode
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Gast Modus wurde aktiviert, da Isi zu Besuch ist. Automationen im Gästezimmer sind dadurch eingeschränkt.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Gast Modus wurde aktiviert, da Isi zu Besuch ist. Automationen im Gästezimmer sind dadurch eingeschränkt.'

  - id: deactivate_guest_mode_if_no_guest_is_here
    alias: 'Deactivate guest mode if no guest is here'
    initial_state: on
    trigger:
      #- platform: state
      #  entity_id: device_tracker.isi_phone
      #  to: 'not_home'
      #  for:
      #    days: 1
      - platform: state
        entity_id: input_boolean.guest_mode
        to: 'on'
        for:
          days: 1
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'on'
        #- condition: state
        #  entity_id: device_tracker.isi_phone
        #  state: 'not_home'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Gast Modus sollte deaktiviert werden, da niemand mehr zu Besuch ist.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Gast Modus sollte deaktiviert werden, da niemand mehr zu Besuch ist.'

  - id: deactivate_silent_mode_after_12_hours
    alias: 'Deactivate silent mode after 12 hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_boolean.silent_mode
        to: 'on'
        for:
          hours: 12
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.silent_mode
          state: 'on'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Der Leise Modus sollte deaktiviert werden, da er bereits seit 12 Stunden aktiv ist.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Der Leise Modus sollte deaktiviert werden, da er bereits seit 12 Stunden aktiv ist.'

#  - id: turn_on_bett_if_bett_usb_ports_turned on
#    alias: 'Turn on bett if bett usb ports turned on'
#    initial_state: on
#    trigger:
#      - platform: state
#        entity_id: switch.bett_usb_ports
#        from: 'off'
#        to: 'on'
#    action:
#      - service: switch.turn_on
#        data:
#          entity_id: switch.bett

#  - id: turn_off_bett_if_bett_usb_ports_turned_off
#    alias: 'Turn off bett if bett usb ports turned off'
#    initial_state: on
#    trigger:
#      - platform: state
#        entity_id: switch.bett_usb_ports
#        from: 'on'
#        to: 'off'
#    action:
#      - service: switch.turn_off
#        data:
#          entity_id: switch.bett

  - id: remind_Nessie_to_ventilate
    alias: 'Remind Nessie to ventilate'
    initial_state: off
    trigger:
      - platform: state
        entity_id: device_tracker.schnuppes_pc
        to: 'home'
        for:
          hours: 4
      - platform: state
        entity_id: switch.nessie_pc
        to: 'on'
        for:
          hours: 4
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.gastezimmer
          attribute: current_humidity
          above: 50
        - condition: state
          entity_id: 
            - input_boolean.silent_mode
            - input_boolean.guest_mode
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.schnuppes_pc
              state: 'home'
            - condition: state
              entity_id: device_tracker.nessie_macbook_lan
              state: 'home'
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.remind_Nessie_to_ventilate.attributes.last_triggered) | int > 1800 }}"
    action:
      - service: notify.telegram_nessie
        data:
          message: "Du bist nun seit 4 Stunden am PC und solltest einmal lüften und aufstehen."

  - id: remind_fabi_to_ventilate
    alias: 'Remind Fabi to ventilate'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        to: 'home'
        for:
          hours: 4
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        to: 'home'
        for:
          hours: 4
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: climate.schlafzimmer
          attribute: current_humidity
          above: 50
        - condition: state
          entity_id: input_boolean.silent_mode
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.fabian_pc
              state: 'home'
            - condition: state
              entity_id: device_tracker.nsta0516_lan
              state: 'home'
    action:
      - service: tts.google_say
        entity_id: media_player.schlafzimmer
        data_template:
          message: >
            Du bist nun seit 4 Stunden am PC und solltest einmal lüften und aufstehen.
      - service: notify.telegram_fabian
        data:
          message: "Du bist nun seit 4 Stunden am PC und solltest einmal lüften und aufstehen."

  - id: turn_on_light_and_climate_if_fpc_starts
    alias: 'Turn on light and climate if fpc starts'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        from: 'not_home'
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.tv
              state: 'not_home'
            - condition: state
              entity_id: switch.fernseher
              state: 'off'
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 2000
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.tv
                    state: 'not_home'
                  - condition: state
                    entity_id: switch.fernseher
                    state: 'off'
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.leds_tisch
                  brightness: 255
                  transition: 2
              - delay: '00:03:00'
              - service: light.turn_on
                data:
                  entity_id: light.prismatik
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 16
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.tv
                    state: 'not_home'
                  - condition: state
                    entity_id: switch.fernseher
                    state: 'off'
            sequence:
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.schlafzimmer_open_window
                        state: 'on'
                    sequence:
                      - delay: '00:25:00'
              - service: climate.set_temperature
                data:
                  entity_id: climate.schlafzimmer
                  temperature: 19
                  hvac_mode: heat

  - id: turn_off_tleds_and_climate_if_fpc_stops
    alias: 'Turn off tleds and climate if fpc stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'home'
        to: 'not_home'
        for:
            minutes: 1
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        from: 'home'
        to: 'not_home'
        for:
            minutes: 1
      - platform: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 20
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: device_tracker.fabian_pc
        state: 'not_home'
        for: 
          minutes: 1
      - condition: state
        entity_id: device_tracker.nsta0516_lan
        state: 'not_home'
        for: 
          seconds: 20
      - condition: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 20
    action:
      - service: light.turn_off
        data:
          entity_id: light.leds_tisch
      - service: media_player.volume_set
        data:
          volume_level: 0.4
          entity_id: media_player.schlafzimmer
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.climate_off
                    state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.schlafzimmer
                  hvac_mode: 'auto'

  - id: turn_on_light_and_climate_if_npc_started
    alias: 'Turn on light and climate if npc started'
    initial_state: on
    trigger:
      platform: state
      entity_id: switch.nessie_pc
      to: 'on'
      for:
        seconds: 40
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: 'device_tracker.schnuppes_pc'
                    state: 'home'
                  - condition: and
                    conditions:
                      - condition: state
                        entity_id: 'device_tracker.nessie_macbook_lan'
                        state: 'home'
                      - condition: state
                        entity_id: 'switch.nessie_pc'
                        state: 'on'
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 17
              - condition: state
                entity_id: 'input_boolean.guest_mode'
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: 'climate.gastezimmer'
                    state: 'off'
            sequence:
              - service: climate.set_temperature
                data:
                  entity_id: climate.gastezimmer
                  temperature: 20
                  hvac_mode: heat
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 2000
              - condition: or
                conditions:
                  - condition: state
                    entity_id: 'device_tracker.schnuppes_pc'
                    state: 'home'
                  - condition: and
                    conditions:
                      - condition: state
                        entity_id: 'device_tracker.nessie_macbook_lan'
                        state: 'home'
                      - condition: state
                        entity_id: 'switch.nessie_pc'
                        state: 'on'
            sequence:
              - service: light.turn_on
                data:
                  entity_id: group.gastezimmer
                  transition: 2

  - id: turn_off_lights_and_climate_if_npc_stopped
    alias: 'Turn off lights and climate if npc stopped'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.schnuppes_pc
        from: 'home'
        to: 'not_home'
        for:
          seconds: 30
      - platform: state
        entity_id: device_tracker.nessie_macbook_lan
        from: 'home'
        to: 'not_home'
        for:
          seconds: 20
      - platform: numeric_state
        entity_id: sensor.nessie_pc_energy_power
        below: 25
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: not_home
                for:
                  seconds: 30
              - condition: numeric_state
                entity_id: sensor.nessie_pc_energy_power
                below: 25
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.nessie_macbook_lan
                    state: not_home
                    for:
                      seconds: 20
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    below: 15
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
              - condition: state
                entity_id: 'input_boolean.guest_mode'
                state: 'off'
            sequence:
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.gastezimmer
                  hvac_mode: 'auto'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: 'not_home'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.nessie_macbook_lan
                    state: not_home
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    below: 15
            sequence:
              - service: light.turn_off
                data:
                  entity_id: group.gastezimmer
              - service: media_player.volume_set
                data:
                  volume_level: 0.4
                  entity_id: media_player.gastezimmer_mini

  - id: turn_off_strom_if_npc_stops
    alias: 'Turn off strom if npc stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.nessie_macbook_lan
        from: 'home'
        to: 'not_home'
        for:
          minutes: 5
      - platform: numeric_state
        entity_id: sensor.nessie_pc_energy_power
        below: 25
        for:
          minutes: 10
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.nessie_pc_energy_power
          below: 25
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.nessie_pc

  - id: turn_off_strom_if_fpc_stops
    alias: 'Turn off strom if fpc stops'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.steckdose_schlafzimmer_energy_power
        below: 25
        for:
          minutes: 10
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        from: 'home'
        to: 'not_home'
        for:
          minutes: 5
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'home'
        to: 'not_home'
        for:
          minutes: 60
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.steckdose_schlafzimmer_energy_power
          below: 25
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.fabian_strom

  - id: turn_on_light_climate_if_tv_starts
    alias: 'Turn on light and climate if tv starts'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.tv
        from: 'not_home'
        to: 'home'
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 2000
            sequence:
              - service: light.turn_on
                data:
                  entity_id: group.wohnzimmer
                  transition: 2
      - choose:
          - conditions:
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
              - condition: numeric_state
                entity_id: 'weather.dwd_weather_ebersberg_1h'
                attribute: temperature
                below: 17
            sequence:
              - service: climate.set_temperature
                data:
                  entity_id: climate.wohnzimmer
                  temperature: 21
                  hvac_mode: heat

  - id: turn_off_climate_if_tv_stops
    alias: 'Turn off climate if tv stops'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.tv
        from: 'home'
        to: 'not_home'
    condition:
      - condition: state
        entity_id: 'input_boolean.climate_off'
        state: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.wohnzimmer
          hvac_mode: 'auto'

  - id: remind_for_open_window_bathroom
    alias: 'Remind for open window bathroom'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.bad_open_window
        to: 'off'
        for:
          minutes: 15
    condition:
      condition: or
      conditions:
        - condition: numeric_state
          entity_id: climate.bad
          attribute: current_temperature
          below: 16
        - condition: numeric_state
          entity_id: sensor.bad_heating
          above: 90
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.gastezimmer_mini
          - media_player.schlafzimmer
        data: 
          message: Es wurde vergessen das Fenster im Bad zu schließen.

  - id: remind_for_open_window_sleeping_room
    alias: 'Remind for open window sleeping room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.schlafzimmer_open_window
        to: 'off'
        for:
          minutes: 15
    condition:
      condition: or
      conditions:
        - condition: numeric_state
          entity_id: 'climate.schlafzimmer'
          attribute: current_temperature
          below: 16
        - condition: numeric_state
          entity_id: sensor.schlafzimmer_heating
          above: 90
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.gastezimmer_mini
        data: 
          message: Es wurde vergessen das Fenster im Schlafzimmer zu schließen.

  - id: remind_for_open_window_living_room
    alias: 'Remind for open window living room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnzimmer_open_window
        to: 'off'
        for:
          minutes: 15
    condition:
      condition: or
      conditions:
        - condition: numeric_state
          entity_id: 'climate.wohnzimmer'
          attribute: current_temperature
          below: 16
        - condition: numeric_state
          entity_id: sensor.wohnzimmer_heating
          above: 90
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.gastezimmer_mini
        data: 
          message: Es wurde vergessen das Fenster im Wohnzimmer zu schließen.

  - id: remind_for_open_window_guest_room
    alias: 'Remind for open window guest room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.gastezimmer_open_window
        to: 'off'
        for:
          minutes: 15
    condition:
      condition: or
      conditions:
        - condition: numeric_state
          entity_id: 'climate.gastezimmer'
          attribute: current_temperature
          below: 16
        - condition: numeric_state
          entity_id: sensor.gastezimmer_heating
          above: 90
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.schlafzimmer
        data: 
          message: Es wurde vergessen das Fenster im Gästezimmer zu schließen.

  - id: remind_for_open_window_after_5_minutes_in_bathroom
    alias: 'Remind for open window after 5 minutes in bathroom'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.bad_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.bad'
          attribute: current_temperature
          below: 21
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_boolean.silent_mode
                    state: 'on'
                  - condition: and
                    conditions:
                      - condition: state
                        entity_id: device_tracker.fabian_pc
                        state: 'not_home'
                      - condition: state
                        entity_id: device_tracker.nsta0516_lan
                        state: 'not_home'
                      - condition: state
                        entity_id: device_tracker.schnuppes_pc
                        state: 'not_home'
                      - condition: state
                        entity_id: device_tracker.nessie_macbook_lan
                        state: 'not_home'
                      - condition: state
                        entity_id: device_tracker.tv
                        state: 'not_home'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nsta0516_lan
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    state: 'off'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nessie_macbook_lan
                    state: 'home'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    state: 'off'
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Bad kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data: 
                  message: Das Fenster im Bad kann wieder geschlossen werden.
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id:
                    - media_player.schlafzimmer
                    - media_player.wohnzimmer_mini
                    - media_player.kueche_mini
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.schlafzimmer
                  - media_player.kueche_mini
                data: 
                  message: Das Fenster im Bad kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id:
                    - media_player.schlafzimmer
                    - media_player.wohnzimmer_mini
                    - media_player.kueche_mini

  - id: remind_for_open_window_after_5_minutes_in_sleeping_room
    alias: 'Remind for open window after 5 minutes in sleeping room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.schlafzimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.schlafzimmer'
          attribute: current_temperature
          below: 19
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Schlafzimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.wohnzimmer_mini
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.kueche_mini
                data: 
                  message: Das Fenster im Schlafzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.wohnzimmer_mini

  - id: remind_for_open_window_after_5_minutes_in_living room
    alias: 'Remind for open window after 5 minutes in living room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnzimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.wohnzimmer'
          attribute: current_temperature
          below: 18
        - condition: state
          entity_id: switch.fernseher
          state: 'off'
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Wohnzimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id: media_player.schlafzimmer
              - service: tts.google_say
                entity_id: media_player.schlafzimmer
                data: 
                  message: Das Fenster im Wohnzimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id: media_player.schlafzimmer
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data: 
                  message: Das Fenster im Wohnzimmer kann wieder geschlossen werden.

  - id: remind_for_open_window_after_5_minutes_in_guest_room
    alias: 'Remind for open window after 5 minutes in guest room'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.gastezimmer_open_window
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'climate.gastezimmer'
          attribute: current_temperature
          below: 19
        - condition: time
          before: '23:00:00'
        - condition: time
          after: '07:50:00'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'on'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
              - service: notify.telegram_nessie
                data:
                  message: "Das Fenster im Gästezimmer kann wieder geschlossen werden."
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.6
                  entity_id:
                    - media_player.schlafzimmer
                    - media_player.wohnzimmer_mini
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.schlafzimmer
                  - media_player.kueche_mini
                data: 
                  message: Das Fenster im Gästezimmer kann wieder geschlossen werden.
              - service: media_player.volume_set
                data_template:
                  volume_level: 0.3
                  entity_id:
                    - media_player.schlafzimmer
                    - media_player.wohnzimmer_mini

  - id: turn_off_bett_if_no_device_is_charging
    alias: 'Turn off bett if no device is charging'
    initial_state: on
    trigger:
      - platform: state
        entity_id: 
          - sensor.fabian_ipadpro_battery_state
          - sensor.fabianphone_battery_state
          - sensor.nessiephone_battery_state
        to: 'discharging'
      - platform: state
        entity_id: 
          - sensor.fabian_ipadpro_battery_state
          - sensor.fabianphone_battery_state
          - sensor.nessiephone_battery_state
        to: 'Not Charging'
      - platform: numeric_state
        entity_id: 
          - sensor.fabian_ipadpro_battery_level
          - sensor.fabian_phone_battery_level
          - sensor.nessie_phone_battery_level
        above: 90
    condition:
      condition: and
      conditions:
        #- condition: or
        #  conditions:
        #    - condition: state
        #      entity_id: sensor.fabian_ipadpro_battery_state
        #      state: 'discharging'
        #    - condition: numeric_state
        #      entity_id: sensor.fabian_ipadpro_battery_level
        #      above: 90
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.fabianphone_battery_state
              state: 'discharging'
            - condition: numeric_state
              entity_id: sensor.fabian_phone_battery_level
              above: 80
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.nessiephone_battery_state
              state: 'discharging'
            - condition: numeric_state
              entity_id: sensor.nessie_phone_battery_level
              above: 80
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.bett_usb_ports

  - id: turn_off_bett_after_x_hours
    alias: 'Turn off bett after x hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.bett_usb_ports
        from: 'off'
        to: 'on'
        for:
            minutes: 180
      - platform: state
        entity_id: switch.bett_usb_ports
        from: 'off'
        to: 'on'
        for:
            minutes: 360
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.bett_usb_ports

  - id: turn_off_staubsauger_after_x_hours
    alias: 'Turn off staubsauger after x hours'
    initial_state: on
    trigger:
      - platform: state
        entity_id: switch.staubsauger
        from: 'off'
        to: 'on'
        for:
            minutes: 150
      - platform: state
        entity_id: switch.staubsauger
        from: 'off'
        to: 'on'
        for:
            minutes: 360
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.staubsauger

  - id: turn_on_staubsauger_weekly
    alias: 'Turn on staubsauger weekly'
    initial_state: on
    trigger:
      platform: time
      at: '13:00:00'
    condition:
      - condition: time
        weekday:
          - mon
          - fri
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.staubsauger

  - id: turn_on_lights_in_morning
    alias: 'Turn on lights in morning'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_iphone
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        from: 'not_home'
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '05:00:00'
        - condition: time
          before: '09:00:00'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_lights_in_morning.attributes.last_triggered) | int > 1800 }}"
        - condition: or
          conditions:
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.fabian_iphone
                  state: home
                - condition: state
                  entity_id: device_tracker.50_3d_c6_5b_4f_bd
                  state: home
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.50_3d_c6_5b_4f_bd
                  state: home
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: device_tracker.google_maps_112174659110860535869
                      state: home
            - condition: and
              conditions:
                - condition: state
                  entity_id: device_tracker.fabian_iphone
                  state: home
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: device_tracker.google_maps_112056758146194246561
                      state: home
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.dwd_illuminance
                below: 2000
            sequence:
              - service: light.turn_on
                data:
                  entity_id: 
                    - light.leds_tisch
                    - light.yeelight_stripe_0x00000000036d0c16
                  brightness: 10
              - delay: '00:00:20'
              - service: automation.trigger
                entity_id: automation.increase_lights_in_morning
              - delay: '00:00:30'
      - service: automation.trigger
        entity_id: automation.notify_for_high_humidity
      - service: light.turn_on
        data_template:
          entity_id: light.yeelight_bslamp2_0x0000000013fea10f
          brightness: 100
          rgb_color: > 
            {% if state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'snowy' %}
            [255,255,255] 
            {% elif state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'rainy' %}
            [0,0,255] 
            {% elif state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'sunny' %}
            [0,255,0]
            {% else %}
            [0,0,0]
            {% endif %}
      - delay: '00:05:00'
      - service: light.turn_off
        data:
          entity_id: 
            - light.yeelight_bslamp2_0x0000000013fea10f
      - delay: '00:20:00'
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_pc
                state: 'not_home'
            sequence:
              - service: light.turn_off
                data:
                  entity_id: 
                    - light.leds_tisch
                    - light.yeelight_stripe_0x00000000036d0c16

  - id: increase_lights_in_morning
    alias: 'Increase lights in morning'
    initial_state: off
    mode: restart
    trigger:
      - platform: state
        entity_id: automation.increase_lights_in_morning
        to: 'on'
    condition:
      condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: light.yeelight_stripe_0x00000000036d0c16
          state: 'off'
        - condition: state
          entity_id: light.leds_tisch
          state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.leds_tisch
          state: 'unavailable'
        - condition: not
          conditions:
            - condition: state
              entity_id: light.leds_tisch
              attribute: brightness
              state: '255'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.yeelight_stripe_0x00000000036d0c16
          state: 'unavailable'
        - condition: not
          conditions:
            - condition: state
              entity_id: light.yeelight_stripe_0x00000000036d0c16
              attribute: brightness
              state: '255'
    action:
      - delay: '00:00:10'
      #- service: light.turn_on
      #  data:
      #    entity_id: 
      #      - light.leds_tisch
      #      - light.yeelight_stripe_0x00000000036d0c16 
      #    brightness_step: 30
      - choose:
          - conditions:
              - condition: state
                entity_id: light.yeelight_stripe_0x00000000036d0c16
                state: 'on'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.yeelight_stripe_0x00000000036d0c16
                    attribute: brightness
                    state: '255'
            sequence:
              - service: light.turn_on
                entity_id: light.yeelight_stripe_0x00000000036d0c16
                data_template:
                  brightness: '{{states.light.yeelight_stripe_0x00000000036d0c16.attributes.brightness + 5}}'
      - choose:
          - conditions:
              - condition: state
                entity_id: light.leds_tisch
                state: 'on'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.leds_tisch
                    attribute: brightness
                    state: '255'
            sequence:
              - service: light.turn_on
                entity_id: light.leds_tisch
                data_template:
                  brightness: '{{states.light.leds_tisch.attributes.brightness + 5}}'
      - service: automation.trigger
        data:
          entity_id: automation.increase_lights_in_morning

  - id: Remind for leaving wohnzimmer
    alias: 'Remind for leaving wohnzimmer'
    initial_state: True
    trigger:
      - platform: time
        at: '06:55:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.silent_mode'
          state: 'off'
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: or
          conditions:
          - condition: state
            entity_id: device_tracker.50_3d_c6_5b_4f_bd
            state: home
          - condition: state
            entity_id: device_tracker.fabian_iphone
            state: home
    action:
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          #- media_player.mpd
        data_template: 
          message: >
            Es ist 
            {{ now().hour }} Uhr {{ now().minute }} .
            Die Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} Uhr hat voraussichtlich 
            {{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} Minuten Verspätung.

  - id: remind_for_leaving_schlafzimmer
    alias: 'Remind for leaving schlafzimmer'
    initial_state: True
    trigger:
      - platform: time
        at: '06:55:00'
    condition:
      condition: and
      conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: device_tracker.fabian_iphone
        state: home
      - condition: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        state: home
      - condition: state
        entity_id: 'input_boolean.silent_mode'
        state: 'off'
    action:
      - service: tts.google_say
        entity_id: media_player.schlafzimmer
        data_template: 
          message: >
            Es ist 
            {{ now().hour }} Uhr {{ now().minute }} .
            Die Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} Uhr hat voraussichtlich 
            {{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} Minuten Verspätung.

  - id: turn_on_light_in_sleeping_room_if_tv_turned_off
    alias: 'Turn on light in sleeping room if tv turned off'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.tv
        from: 'home'
        to: 'not_home'
        for:
          seconds: 5
      - platform: state
        entity_id: switch.fernseher
        to: 'off'
        for:
          seconds: 5
    condition:
      - condition: time
        after: '21:00:00'
        before: '23:50:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_light_in_sleeping_room_if_tv_turned_off.attributes.last_triggered) | int > 1800 }}"
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.bett_gluhbirne
                    state: unavailable
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.bett_gluhbirne
                  brightness: 255
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                    state: unavailable
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                  brightness: 255
                  color_temp: 279
      - service: light.turn_off
        data:
          entity_id: 
            - light.leds_tisch
            - light.yeelight_stripe_0x00000000036d0c16
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                    state: unavailable
                  - condition: state
                    entity_id: light.bett_gluhbirne
                    state: unavailable
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.yeelight_stripe_0x00000000036d0c16
                  brightness: 255
      - delay: '00:04:00'
      - service: light.turn_off
        data:
          entity_id: group.wohnzimmer
      - service: switch.turn_off
        data:
          entity_id: 
            - switch.deckenlampe
            - switch.leds_wohnzimmer_tv

  - id: turn_on_lights_in_livingroom_when_dark_outside
    alias: 'Turn on lights in livingroom when dark outside'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.dwd_illuminance
        below: 2000
      - platform: sun
        event: sunset
        offset: "-00:30:00"
    condition:
      condition: state
      entity_id: device_tracker.tv
      state: home
    action:
      - service: light.turn_on
        data:
          entity_id: group.wohnzimmer
          transition: 2
      - service: switch.turn_on
        data:
          entity_id: switch.leds_wohnzimmer_tv

  - alias: 'Turn off Prismatik during the day'
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        from: 'not_home'
        to: 'home'
        for:
          minutes: 2
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.dwd_illuminance
          above: 2000
    action:
      - delay: '00:03:00'
      - service: light.turn_off
        data:
          entity_id: light.prismatik

  - id: turn_on_lights_in_sleeping_room_when_sun_set
    alias: 'Turn on lights in sleeping room when sun set'
    initial_state: on
    trigger:
      platform: sun
      event: sunset
      offset: "-00:05:00"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'device_tracker.tv'
          state: 'not_home'
        - condition: or
          conditions:
            - condition: state
              entity_id: 'device_tracker.fabian_pc'
              state: 'home'
            - condition: state
              entity_id: 'device_tracker.nsta0516_lan'
              state: 'home'
    action:
      - service: light.turn_on
        data:
          entity_id: light.leds_tisch
          brightness: 255
          transition: 2
      - delay: '00:03:00'
      - service: light.turn_on
        data:
          entity_id: light.prismatik

  - id: Turn_on_lights_in_sleeping_room_when_cloudy
    alias: 'Turn on lights in sleeping room when cloudy'
    initial_state: off
    trigger:
      - platform: sun
        event: sunset
        offset: "-02:00:00"
      - platform: state
        entity_id: weather.dwd_weather_ebersberg_1h
        to: 'cloudy'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: weather.dwd_weather_ebersberg_1h
          state: cloudy
        - condition: sun
          after: sunset
          after_offset: "-02:00:00"
        - condition: or
          conditions:
            - condition: state
              entity_id: 'device_tracker.fabian_pc'
              state: 'home'
            - condition: state
              entity_id: 'device_tracker.nsta0516_lan'
              state: 'home'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.tv
              state: 'not_home'
            - condition: state
              entity_id: switch.fernseher
              state: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.leds_tisch
          brightness: 255
          transition: 2
      - delay: '00:03:00'
      - service: light.turn_on
        data:
          entity_id: light.prismatik

  - id: turn_on_lights_in_guest_room_when_dark_outside
    alias: 'Turn on lights in guest room when dark outside'
    initial_state: on
    trigger:
      platform: numeric_state
      entity_id: sensor.dwd_illuminance
      below: 2000
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: 'device_tracker.schnuppes_pc'
          state: 'home'
        - condition: and
          conditions:
            - condition: state
              entity_id: 'device_tracker.nessie_macbook_lan'
              state: 'home'
            - condition: state
              entity_id: 'switch.nessie_pc'
              state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: group.gastezimmer
          transition: 2

  - id: turn_off_lights_in_rooms_when_bright_outside
    alias: 'Turn off lights in rooms when bright outside'
    initial_state: on
    trigger:
      platform: numeric_state
      entity_id: sensor.dwd_illuminance
      above: 2510
    action:
      - service: light.turn_off
        data:
          entity_id: 
            - group.gastezimmer
            - group.schlafzimmer
            - group.wohnzimmer

  - id: turn_off_climates_on_warm_days
    alias: 'Turn off Climates on warm days'
    initial_state: True
    trigger:
      platform: numeric_state
      entity_id: weather.dwd_weather_ebersberg_1h
      attribute: temperature
      above: 12
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition'] == 'sunny' }}"
        #- condition: state
        #  entity_id: 'weather.dwd_weather_ebersberg_1h'
        #  state: 'sunny'
        - condition: state
          entity_id: 'input_boolean.climate_off'
          state: 'off'
        - condition: or
          conditions:
            - condition: template
              value_template: '{{ now().month <= 10 and now().month >= 2 }}'
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.climate_off
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Thermostate wurden ausgeschaltet, da es {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} ° hat und sonnig ist.'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Thermostate wurden ausgeschaltet, da es {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} ° hat und sonnig ist.'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'

  - id: turn_on_climates_on_cold_days
    alias: 'Turn on Climates on cold days'
    initial_state: True
    trigger:
      - platform: numeric_state
        entity_id: weather.dwd_weather_ebersberg_1h
        attribute: temperature
        below: 10
      - platform: sun
        event: sunset
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.climate_off'
          state: 'on'
        - condition: or
          conditions:
            - condition: and
              conditions:
                - condition: numeric_state
                  entity_id: weather.dwd_weather_ebersberg_1h
                  attribute: temperature
                  below: 10
                - condition: sun
                  after: sunset
                  after_offset: "-04:00:00"
                - condition: time
                  before: '20:30:00'
                - condition: template
                  value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.turn_on_climates_on_cold_days.attributes.last_triggered) | int > 12000 }}"
                - condition: template
                  value_template: '{{ now().month <= 10 and now().month >= 2 }}'
            - condition: template
              value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[1]['temperature'] <= '12' }}"
            - condition: and
              conditions:
                - condition: template
                  value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[1]['condition'] != 'sunny' }}"
                - condition: template
                  value_template: "{{state_attr('weather.dwd_weather_ebersberg', 'forecast')[1]['temperature'] <= '14' }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Thermostate sollten wieder eingeschaltet werden, da es jetzt nur noch {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} °C und morgen {{state_attr("weather.dwd_weather_ebersberg", "forecast")[1]["temperature"]}} °C hat. Dies wurde nicht automatisch gemacht!'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Thermostate sollten wieder eingeschaltet werden, da es jetzt nur noch {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} °C und morgen {{state_attr("weather.dwd_weather_ebersberg", "forecast")[1]["temperature"]}} °C hat. Dies wurde nicht automatisch gemacht!'
          disable_notification: true
          inline_keyboard:
            - 'Einschalten:/climateson'

  - id: turn_on_fridge_for_meetings
    alias: 'Turn on fridge for meetings'
    initial_state: True
    trigger:
      #- platform: time
      #  at: '15:30:00'
      - platform: template
        value_template: "{{ as_timestamp(now()) | round(-1) == (as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - 10800) | round(-1) }}"
    condition:
      condition: and
      conditions:  
        - condition: template
          value_template: "{{ ((as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - as_timestamp(now())) < 43200) and ((as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - as_timestamp(now())) > 0) }}"
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Gruppentreffen"
                  - condition: state
                    entity_id: 'switch.kuhlschrank'
                    state: 'off'
              - condition: or
                conditions:
                  - condition: template
                    value_template: '{{ now().month < 4 and now().month > 10 }}'
                  - condition: and
                    conditions:
                      - condition: template
                        value_template: '{{ now().month <= 10 and now().month >= 4 }}'
                      - condition: numeric_state
                        entity_id: weather.dwd_weather_ebersberg_1h
                        attribute: temperature
                        below: 6
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Erinnerung: Heute steht {{ states.calendar.fabianseitz98_gmail_com.attributes.message }} an.'
                  disable_notification: true
                  inline_keyboard:
                    - 'Kühlschrank anschalten:/fridge'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Gruppentreffen"
                  - condition: state
                    entity_id: input_boolean.away_mode
                    state: "off"
                  - condition: state
                    entity_id: 'switch.kuhlschrank'
                    state: 'off'
                  - condition: template
                    value_template: '{{ now().month <= 10 and now().month >= 4 }}' #Im Winter ist der Keller kalt genug, da muss der Kühlschrank nicht an sein.
                  - condition: numeric_state
                    entity_id: weather.dwd_weather_ebersberg_1h
                    attribute: temperature
                    above: 5
            sequence:
              - service: switch.turn_on
                data:
                  entity_id: switch.kuhlschrank
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Der Kühlschrank für das Gruppentreffen heute wurde angeschaltet.'
                  disable_notification: true
                  inline_keyboard:
                    - 'Ausschalten:/fridgeoff'
      - choose:
          - conditions:
              - condition: state
                entity_id: 'switch.kuhlschrank'
                state: 'off'
              - condition: template
                value_template: '{{ now().month <= 10 and now().month >= 4 }}' #Im Winter ist der Keller kalt genug, da muss der Kühlschrank nicht an sein.
              - condition: state
                entity_id: input_boolean.away_mode
                state: "off"
              - condition: not
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Gruppentreffen"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: location
                    state: !secret strasse
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: location
                    state: none
              - condition: or
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Treffen"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Monthly Meet"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Treffen in Zorneding"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Geburtstagsfeier"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Spieleabend"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Karten- / Brettspieleabend"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Kartenspieleabend"
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Anscheinend steht heute {{ states.calendar.fabianseitz98_gmail_com.attributes.message }} an, soll der Kühlschrank im Keller eingeschaltet werden?'
                  disable_notification: true
                  inline_keyboard:
                    - 'Anschalten:/fridge'

  - id: remind_for_door_for_meetings
    alias: 'Remind for door for meetings'
    initial_state: True
    trigger:
      - platform: template
        value_template: "{{ as_timestamp(now()) | round(-1) == (as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - 43200) | round(-1) }}"
    condition:
      condition: and
      conditions:  
        - condition: template
          value_template: "{{ ((as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - as_timestamp(now())) < 58000) and ((as_timestamp(states.calendar.fabianseitz98_gmail_com.attributes.start_time) - as_timestamp(now())) > 0) }}"
        - condition: template
          value_template: '{{ now().month <= 4 or now().month >= 10 }}' #Im Sommer ist der Keller warm genug, da muss nicht die Wärme vom Flur genutzt werden.
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: location
                    state: !secret strasse
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: location
                    state: none
              - condition: or
                conditions:
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Gruppentreffen"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Treffen"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Monthly Meet"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Treffen in Zorneding"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Geburtstagsfeier"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Spieleabend"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Karten- / Brettspieleabend"
                  - condition: state
                    entity_id: calendar.fabianseitz98_gmail_com
                    attribute: message
                    state: "Kartenspieleabend"
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Demnächst steht {{ states.calendar.fabianseitz98_gmail_com.attributes.message }} an. Tür im Keller öffnen um die Wärme vom Heizraum zu nutzen?'

  - id: turn_on_strom_kühlschrank
    alias: 'Turn on Strom Kühlschrank'
    initial_state: on
    trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/kühlschrank'
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/kuehlschrank'
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/fridge'
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.kuhlschrank
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: 'Kühlschrank im Keller wurde angeschaltet. Achtung: Wird hierüber NICHT ausgeschaltet!'

  - id: turn_on_climates
    alias: 'Turn on Climates'
    initial_state: on
    trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/climateson'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, werden eingeschaltet.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: input_boolean.turn_off
        data:
          entity_id: switch.climate_off

  - id: remind_for_DST_change_Winter_Sommerzeit
    alias: 'Remind for DST change - Winter/Sommerzeit'
    initial_state: True
    trigger:
      #- platform: time
      #  at: '15:30:00'
      - platform: template
        value_template: "{{ now().timetuple().tm_isdst }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Die Zeitumstellung hat stattgefunden!
            {%- if now().timetuple().tm_isdst | int > 0 -%}
              Sommerzeit hat begonnen und die Uhrzeit wird um eine Stunde vorgestellt (eine Stunde weniger Schlaf).
            {%- else -%}
              Winterzeit hat begonnen und die Uhrzeit wird um eine Stunde zurückgestellt (eine Stunde mehr Schlaf).
            {%- endif -%}
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Die Zeitumstellung hat stattgefunden!
            {%- if now().timetuple().tm_isdst | int > 0 -%}
              Sommerzeit hat begonnen und die Uhrzeit wird um eine Stunde vorgestellt (eine Stunde weniger Schlaf).
            {%- else -%}
              Winterzeit hat begonnen und die Uhrzeit wird um eine Stunde zurückgestellt (eine Stunde mehr Schlaf).
            {%- endif -%}

  - id: notify_on_HA_restart
    alias: 'Notify on HA restart'
    initial_state: True
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        after: '03:10:00'
        before: '03:00:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_on_ha_restart.attributes.last_triggered) | int > 1800 }}"
    action:
      - service: frontend.set_theme
        data:
          name: transparentgray-LAB
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Homeassistant wurde soeben gestartet.'

#  - id: restart_homeassistant_every_sunday
#    alias: 'Restart Homeassistant every sunday'
#    initial_state: on
#    trigger:
#      platform: time
#      at: '03:00:00'
#    condition:
#      - condition: time
#        weekday: sun
#    action:
#      - service: shell_command.restartha

  #- id: lets_encrypt_Renewal
  #  alias: "Let's Encrypt Renewal"
  #  trigger:
  #    platform: time
  #    at: '00:02:00'
  #  action:
  #  - service: hassio.addon_stop
  #    data:
  #      addon: a0d7b954_nginxproxymanager
  #  - service: hassio.addon_restart
  #    data:
  #      addon: core_letsencrypt
  #  - delay: '00:10:00'
  #  - service: hassio.addon_start
  #    data:
  #      addon: a0d7b954_nginxproxymanager

  - id: run_bash_script_with_addon_bash_script_executer_every_hour
    alias: "Run Bash Script with Addon Bash Script Executer every hour"
    trigger:
      - platform: time_pattern
        minutes: '/59'
        seconds: 0
    action:
      - service: hassio.addon_start
        data:
          addon: 605cee21_bashscriptexecuter

  - id: turn_on_away_mode
    alias: Turn on Away Mode
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.away_mode
        to: 'on'
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.silent_mode
      - service: climate.set_preset_mode
        data:
          entity_id: all
          preset_mode: 'away'

  - id: turn_off_away_mode
    alias: Turn off Away Mode
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.away_mode
        to: 'off'
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.silent_mode
      - service: climate.set_preset_mode
        data:
          entity_id: all
          preset_mode: 'home'

  - id: turn_on_climate_off_mode
    alias: Turn on Climate Off mode
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.climate_off
        to: 'on'
    action:
      - service: climate.turn_off
        data:
          entity_id: all

  - id: turn_off_climate_off_mode
    alias: Turn off Climate Off mode
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.climate_off
        to: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: all
          hvac_mode: auto

  - id: turn_on_fs_strom
    alias: Turn on FS Strom
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.fs_strom
        to: 'on'
      - platform: state
        entity_id: switch.fabian_strom
        to: 'on'
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.fabian_strom
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.fs_strom

  - id: turn_off_fs_strom
    alias: Turn off FS Strom
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.fs_strom
        to: 'off'
      - platform: state
        entity_id: switch.fabian_strom
        to: 'off'
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.steckdose_schlafzimmer_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fabian_pc_shutdown
              - delay: '00:30:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.steckdose_schlafzimmer_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fabian_pc_shutdown
              - delay: '00:30:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.steckdose_schlafzimmer_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fabian_pc_shutdown
              - delay: '00:01:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.steckdose_schlafzimmer_energy_power
                    above: 20
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Der PC ist noch an und konnte nicht heruntergefahren werden. Daher wurde der Strom nicht ausgeschaltet."
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: 'not_home'
                  - condition: numeric_state
                    entity_id: sensor.steckdose_schlafzimmer_energy_power
                    below: 21
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fabian_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.fabian_strom
                state: 'off'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.fs_strom

  - id: turn_on_vk_strom
    alias: Turn on VK Strom
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.vk_strom
        to: 'on'
      - platform: state
        entity_id: switch.nessie_pc
        to: 'on'
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.nessie_pc
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.vk_strom

  - id: turn_off_vk_strom
    alias: Turn off VK Strom
    initial_state: on
    trigger: 
      - platform: state
        entity_id: input_boolean.vk_strom
        to: 'off'
      - platform: state
        entity_id: switch.nessie_pc
        to: 'off'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.nessie_pc_shutdown
              - delay: '00:30:00'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.nessie_pc_shutdown
              - delay: '00:30:00'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    above: 20
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.nessie_pc_shutdown
              - delay: '00:01:00'
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: device_tracker.schnuppes_pc
                    state: 'home'
                  - condition: state
                    entity_id: device_tracker.nessie_macbook_lan
                    state: 'not_home'
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    above: 20
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Der PC ist noch an und konnte nicht heruntergefahren werden. Daher wurde der Strom nicht ausgeschaltet."
              - service: notify.telegram_fabian
                data:
                  message: "Nessie PC ist noch an und konnte nicht heruntergefahren werden. Daher wurde der Strom nicht ausgeschaltet."
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.nessie_pc_energy_power
                    below: 21
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.nessie_pc
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.nessie_pc
                state: 'off'
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.vk_strom

  - id: remind_for_away_mode
    alias: 'Remind for away mode'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1440
      - platform: state
        entity_id: person.nessie
        from: 'home'
        to: 'not_home'
        for:
          minutes: 1440
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: person.fabian
          state: not_home
          for:
            minutes: 1440
        - condition: state
          entity_id: person.nessie
          state: home
          for:
            minutes: 1440
    action:
      - service: notify.telegram_fabian
        data:
          message: "Away Mode wurde aktiviert, da keiner seit 24 Stunden daheim ist."
      - service: notify.telegram_nessie
        data:
          message: "Away Mode wurde aktiviert, da keiner seit 24 Stunden daheim ist."
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.away_mode

  - id: warn_for_state_change_if_in_away_mode
    alias: Warn for state change if in away mode
    initial_state: on
    trigger: 
      - platform: state
        entity_id: 
          - group.wohnzimmer
          - group.schlafzimmer
          - group.gastezimmer
        from: 'off'
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'on'
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.warn_for_state_change_if_in_away_mode.attributes.last_triggered) | int > 3600 }}"
    action:
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_fabian
          message: 'ACHTUNG! Es wurde ein Gerät eingeschaltet, obwohl der Abwesend Modus aktiviert ist!'
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_nessie
          message: 'ACHTUNG! Es wurde ein Gerät eingeschaltet, obwohl der Abwesend Modus aktiviert ist!'
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.gastezimmer_mini
          - media_player.schlafzimmer
        data: 
          message: Einbrecher sind nicht erwünscht. Du wirst beobachtet und wurdest gefilmt. Verlasse die Wohnung sofort. Die Polizei wird gerufen.

  - id: ha_update_available
    alias: 'HA Update Available'
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.updater
        from: 'off'
        to: 'on'
    action:
      - service: telegram_bot.send_message
        data_template:
          message: "Home Assistant  {{ state_attr('binary_sensor.updater', 'newest_version') }}  ist nun verfügbar. Changelog: {{ state_attr('binary_sensor.updater', 'release_notes') }}"
          target: !secret telegram_chat_fabian
          inline_keyboard:
          - 'Update starten:/updateha'

  - alias: 'HACS Update available'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.hacs
        above: 0
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.hacs_update_available.attributes.last_triggered) | int > 3200 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            {% if is_state("sensor.hacs", "1")%} 
            Es gibt ein verfügbares HACS Update.
            {% else %}
            Es gibt {{ states.sensor.hacs.state }} verfügbare HACS Updates.
            {% endif %}
            Darunter folgende Integrationen:

            - {{state_attr('sensor.hacs', 'repositories')[0]['display_name']}} von Version {{state_attr('sensor.hacs', 'repositories')[0]['installed_version']}} zu Version {{state_attr('sensor.hacs', 'repositories')[0]['available_version']}}
            {% if states.sensor.hacs.state >= '2' %}
            - {{state_attr('sensor.hacs', 'repositories')[1]['display_name']}} von Version {{state_attr('sensor.hacs', 'repositories')[1]['installed_version']}} zu Version {{state_attr('sensor.hacs', 'repositories')[1]['available_version']}}
            {% endif %}
            {% if states.sensor.hacs.state >= '3' %}
            - {{state_attr('sensor.hacs', 'repositories')[2]['display_name']}} von Version {{state_attr('sensor.hacs', 'repositories')[2]['installed_version']}} zu Version {{state_attr('sensor.hacs', 'repositories')[2]['available_version']}}
            {% endif %}

  # - alias: 'Incoming Call Fabian'
  #   initial_state: on
  #   trigger:
  #     - platform: state
  #       entity_id: automation.incoming_call_fabian
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: 'input_boolean.silent_mode'
  #       state: 'off'
  #   action:
  #     - service: media_player.volume_set
  #       data:
  #         volume_level: 0.4
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: tts.google_say
  #       entity_id: 
  #       - media_player.wohnzimmer_mini
  #       - media_player.schlafzimmer
  #       data_template: 
  #         message: "Fabian wird soeben von {{ states('sensor.fs_caller') }} angerufen!"
  #     - service: media_player.media_pause
  #       data:
  #         entity_id: media_player.wohnzimmer_tv
  #     - delay: '00:00:09'
  #     - service: media_player.volume_set
  #       data:
  #         volume_level: 0.3
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: automation.turn_off
  #       data:
  #         entity_id: automation.incoming_call_fabian
  #     - service: media_player.turn_off
  #       data:
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: media_player.turn_off
  #       data:
  #         entity_id: media_player.schlafzimmer

  # - alias: 'Incoming Call Nessie'
  #   initial_state: on
  #   trigger:
  #     - platform: state
  #       entity_id: automation.incoming_call_nessie
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: 'input_boolean.silent_mode'
  #       state: 'off'
  #   action:
  #     - service: media_player.volume_set
  #       data:
  #         volume_level: 0.7
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: tts.google_say
  #       entity_id: 
  #       - media_player.wohnzimmer_mini
  #       - media_player.schlafzimmer
  #       data:
  #         message: 'Nessie wird soeben angerufen!'
  #     - delay: '00:00:10'
  #     - service: media_player.volume_set
  #       data:
  #         volume_level: 0.3
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: automation.turn_off
  #       data:
  #         entity_id: automation.incoming_call_nessie
  #     - service: media_player.turn_off
  #       data:
  #         entity_id: media_player.wohnzimmer_mini
  #     - service: media_player.turn_off
  #       data:
  #         entity_id: media_player.schlafzimmer

#not in use, as the attribute contains "EUR" which makes it unusable for numeric_state
#  - alias: 'Coinbase balance high'
#    initial_state: on
#    trigger:
#      - platform: template
#        value_template: {{ states.sensor.coinbase_btc_wallet.attributes.["Balance in native currency"] |replace(“EUR”,"")|replace(“ ”,"")|float| int > 220 }}
#      - platform: numeric_state
#        entity_id: sensor.coinbase_btc_wallet
#        attribute: "Balance in native currency"
#        above: 220
#    condition:
#      condition: and
#      conditions:
      #Maximal einmal am Tag schreiben
#        - condition: template
#          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.coinbase_balance_high.attributes.last_triggered) | int > 86400 }}"
#    action:
#      - service: telegram_bot.send_message
#        data_template:
#          target: !secret telegram_chat_fabian
#          message: 'Aktueller Bitcoin Wert ist hoch: {{ states.sensor.coinbase_btc_wallet.attributes.["Balance in native currency"] }} .'

  - alias: 'DWD Weather Warnings'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.dwd_weather_warnings_current_warning_level
        above: 1
    condition:
      condition: and
      conditions:
        #Maximal zwei mal am Tag schreiben
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.dwd_weather_warnings.attributes.last_triggered) | int > 43200 }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.dwd_weather_warnings_current_warning_level
                state: '2'
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  disable_notification: true
                  message: >
                    Aktuell Wetterwarnung vor markantem Wetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}

                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  disable_notification: true
                  message: >
                    Aktuell Wetterwarnung vor markantem Wetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}

                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.dwd_weather_warnings_current_warning_level
                state: '3'
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: >
                    Aktuell Wetterwarnung vor Unwetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}

                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: >
                    Aktuell Wetterwarnung vor Unwetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}

                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.dwd_weather_warnings_current_warning_level
                state: '4'
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: >
                    ACHTUNG!!!! Aktuell Wetterwarnung vor extremen Unwetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}

                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_nessie
                  message: >
                    ACHTUNG!!!! Aktuell Wetterwarnung vor extremen Unwetter in {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.region_name }}.
                    *{{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_headline }}*


                    {{ states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_description }}
                    
                    Voraussichtlich ab {{  states.sensor.dwd_weather_warnings_current_warning_level.attributes.warning_1_end }} Uhr.

  - alias: 'RaspberryPi Temp Warning'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.processor_temperature
        above: 75
      - platform: numeric_state
        entity_id: sensor.processor_temperature
        above: 78
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.raspberrypi_temp_warning.attributes.last_triggered) | int > 3600 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'ACHTUNG! RaspberryPi Temperatur sehr hoch: {{ states.sensor.processor_temperature.state }}'

  - alias: Turn Schloss off after turning on
    initial_state: on
    trigger: 
      - platform: state
        entity_id: switch.schloss
        to: 'on'
    action:
      - delay: '00:00:02'
      - service: switch.turn_off
        data:
          entity_id: switch.schloss

  - alias: Nessie Phone Battery below 5 %
    initial_state: on
    trigger:
      platform: numeric_state
      entity_id: sensor.nessie_phone_battery_level
      below: 5
    action:
      - service: telegram_bot.send_message
        data_template:
          title: 'Nessie Akku unter 5%'
          target: !secret telegram_chat_fabian
          message: ''

  - alias: Fabi Phone Battery below 5 %
    initial_state: on
    trigger:
      platform: numeric_state
      entity_id: sensor.fabian_phone_battery_level
      below: 5
    action:
      - service: telegram_bot.send_message
        data_template:
          title: 'Fabi Akku unter 5%'
          target: !secret telegram_chat_nessie
          message: ''

  - id: mute_cast_spotify_ads
    alias: Mute Cast Spotify ads
    initial_state: on
    mode: single
    trigger:
      - platform: state
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.schlafzimmer
          - media_player.gastezimmer_mini
          - media_player.wohnzimmer_tv_cast
          - media_player.mini_gruppe
          - media_player.keller_tv_cast
        attribute: media_title
    action:
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.wohnzimmer_mini
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.wohnzimmer_mini
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.kueche_mini
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.kueche_mini
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.kueche_mini
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.schlafzimmer
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.schlafzimmer
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.gastezimmer_mini
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.gastezimmer_mini
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.gastezimmer_mini
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.wohnzimmer_tv_cast
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.wohnzimmer_tv_cast
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.wohnzimmer_tv_cast
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.mini_gruppe
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.mini_gruppe
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.mini_gruppe
                  is_volume_muted: false
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: is_volume_muted
                    state: "false"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: media_title
                    state: "Advertisement"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.keller_tv_cast
                  is_volume_muted: true
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: media_title
                    state: "Advertisement"
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: media_title
                    state: "Spotify"
                  - condition: state
                    entity_id: media_player.keller_tv_cast
                    attribute: is_volume_muted
                    state: "true"
            sequence:
              - service: media_player.volume_mute
                data:
                  entity_id: media_player.keller_tv_cast
                  is_volume_muted: false

  - alias: Low battery thermostats
    initial_state: on
    trigger:
      - platform: state
        entity_id: 
          - binary_sensor.bad_battery_state
          - binary_sensor.schlafzimmer_battery_state
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: 
          - climate.wohnzimmer
          - climate.gastezimmer
        to: 'unavailable'
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: climate.bad
          state: "unavailable"
        - condition: state
          entity_id: climate.schlafzimmer
          state: "unavailable"
    action:
      - service: notify.telegram_fabian
        data_template:
          message: > 
            Die Batterie im Thermostat
            {% if is_state('state.climate.wohnzimmer', 'unavailable') %}
            Gästezimmer 
            {% endif %}
            {% if is_state('state.climate.gastezimmer', 'unavailable') %}
            Wohnzimmer
            {% endif %}
            {% if is_state('binary_sensor.schlafzimmer_battery_state', 'on') %}
            Schlafzimmer
            {% endif %}
            {% if is_state('binary_sensor.bad_battery_state', 'on') %}
            Bad
            {% endif %}
            ist (bald) leer. Bitte auswechseln! Luftfeuchtigkeitsautomationen funktionieren so lange nur eingeschränkt.
      - service: notify.telegram_nessie
        data_template:
          message: > 
            Die Batterie im Thermostat
            {% if is_state('binary_sensor.gastezimmer_battery_state', 'on') %}
            Gästezimmer 
            {% endif %}
            {% if is_state('binary_sensor.wohnzimmer_battery_state', 'on') %}
            Wohnzimmer
            {% endif %}
            {% if is_state('binary_sensor.schlafzimmer_battery_state', 'on') %}
            Schlafzimmer
            {% endif %}
            {% if is_state('binary_sensor.bad_battery_state', 'on') %}
            Bad
            {% endif %}
            ist (bald) leer. Bitte auswechseln! Luftfeuchtigkeitsautomationen funktionieren so lange nur eingeschränkt.

  - alias: Cast HA to TV if idleing
    trigger: 
      - platform: state
        entity_id: media_player.wohnzimmer_tv
        to: 
          - 'idle'
          - 'standby'
        for:
          minutes: 3
    action:
      service: cast.show_lovelace_view
      data: 
        entity_id: media_player.wohnzimmer_tv_cast
        view_path: cast

  - alias: Fritzbox Public IP Change
    initial_state: on
    trigger:
      - platform: state
        entity_id: sensor.fritz_netmonitor
        attribute: external_ip
    condition:
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.fritzbox_no_internet_access.attributes.last_triggered) | int > 360 }}"
      - condition: not
        conditions:
          - condition: state
            entity_id: 'sensor.fritz_netmonitor'
            state: 'None'
    action:
      - service: notify.telegram_fabian
        data:
          message: 'Öffentliche IP hat sich geändert zu {{ states.sensor.fritz_netmonitor.attributes.external_ip }}'

  - alias: Fritzbox no Internet access
    initial_state: on
    trigger:
      - platform: state
        entity_id: sensor.fritz_netmonitor
        from: 'online'
        to: 'offline'
        for:
          seconds: 15
    condition:
      condition: and
      conditions:
        - condition: time
          after: '10:30:00'
          before: '22:30:00'
        - condition: state
          entity_id: 'input_boolean.silent_mode'
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: device_tracker.50_3d_c6_5b_4f_bd
            state: home
          - condition: state
            entity_id: device_tracker.fabian_iphone
            state: home
          - condition: template
            value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.fritzbox_no_internet_access.attributes.last_triggered) | int > 1200 }}"
    action:
      #- service: rest_command.assistant_broadcast
      #  data:
      #    command: Die Fritzbox hat keine Internet Verbindung und wird nun neugestartet.
      #    user: "homeassistant"
      - service: tts.google_say
        entity_id: 
        - media_player.schlafzimmer
        - media_player.wohnzimmer_mini
        - media_player.kueche_mini
        - media_player.gastezimmer_mini
        data:
          message: 'Die Fritzbox hat keine Internet Verbindung' #und wird nun neugestartet.'
      - service: fritz.reboot
        data:
          host: 192.168.178.1
      - service: automation.turn_on
        data:
          entity_id: automation.fritzbox_internet_access_returned
      - service: automation.turn_off
        data:
          entity_id: automation.fritzbox_no_internet_access

  - alias: Fritzbox Internet access returned
    initial_state: off
    trigger:
      - platform: state
        entity_id: sensor.fritz_netmonitor
        from: 'offline'
        to: 'online'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '10:30:00'
          before: '22:30:00'
        - condition: state
          entity_id: 'input_boolean.silent_mode'
          state: 'off'
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.50_3d_c6_5b_4f_bd
                    state: home
                  - condition: state
                    entity_id: device_tracker.fabian_iphone
                    state: home
            sequence:
              #- service: rest_command.assistant_broadcast
              #  data:
              #    command: Die Internetverbindung ist wiederhergestellt.
              #    user: "homeassistant"
              - service: tts.google_say
                entity_id: 
                  - media_player.schlafzimmer
                  - media_player.wohnzimmer_mini
                  - media_player.kueche_mini
                  - media_player.gastezimmer_mini
                data:
                  message: 'Die Internetverbindung ist wiederhergestellt.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.50_3d_c6_5b_4f_bd
                    state: home
                  - condition: state
                    entity_id: device_tracker.fabian_iphone
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_fabian
                  message: 'Die Fritzbox Internet Verbundung wurde verloren und wurde soeben wiederhergestellt.'
      - service: automation.turn_on
        data:
          entity_id: automation.fritzbox_no_internet_access
      - service: automation.turn_off
        data:
          entity_id: automation.fritzbox_internet_access_returned

  # - alias: Internet Speed Test Poor Fabian
  # 
  #   initial_state: on
  #   trigger:
  #     - platform: template
  #       value_template: "{{ states('sensor.speedtest_download')|float < 40 }}"
  #   condition:
  #     - condition: template
  #       value_template: "{{ states.device_tracker.google_maps_112174659110860535869.state == 'home' }}"
  #   action:
  #     - service: notify.telegram_fabian
  #       data:
  #         message: 'Die Internetgeschwindigkeit ist aktuell langsam ( {{ state.sensor.speedtest_download }} Mbit/s ). Eventuell die Fritzbox neustarten?'

  # - alias: Internet Speed Test Poor Nessie
  # 
  #   initial_state: on
  #   trigger:
  #     - platform: template
  #       value_template: "{{ states('sensor.speedtest_download')|float < 30 }}"
  #   condition:
  #     - condition: template
  #       value_template: "{{ states.device_tracker.google_maps_112056758146194246561.state == 'home' }}"
  #     - condition: state
  #       entity_id: device_tracker.schnuppes_pc
  #       state: home
  #   action:
  #     - service: notify.telegram_nessie
  #       data: 
  #         message: 'Die Internetgeschwindigkeit ist aktuell langsam. Eventuell die Fritzbox neustarten?'

  - alias: Deckenlampe Button Hold
    initial_state: on
    trigger: 
      - entity_id: sensor.deckenlampe
        platform: state
        to: '{"TRIG":"HOLD"}'
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.leds_wohnzimmer
                    state: 'off'
                  - condition: state
                    entity_id: light.leds_wohnzimmer
                    state: 'unavailable'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.yeelight_color_0x00000000036dc050
                    state: 'off'
                  - condition: state
                    entity_id: light.yeelight_color_0x00000000036dc050
                    state: 'unavailable'
              - condition: or
                conditions:
                  - condition: state
                    entity_id: switch.leds_wohnzimmer_tv
                    state: 'off'
                  - condition: state
                    entity_id: switch.leds_wohnzimmer_tv
                    state: 'unavailable'
            sequence:
              - service: light.turn_on
                data:
                  entity_id: group.wohnzimmer
                  transition: 2
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.leds_wohnzimmer
                    state: 'on'
                    for:
                      seconds: 1
                  - condition: state
                    entity_id: light.yeelight_color_0x00000000036dc050
                    state: 'on'
                    for:
                      seconds: 1
                  - condition: state
                    entity_id: switch.leds_wohnzimmer_tv
                    state: 'on'
                    for:
                      seconds: 1
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: 
                    - switch.deckenlampe
                    - switch.leds_wohnzimmer_tv
              - service: light.turn_off
                data:
                  entity_id: group.wohnzimmer

  - alias: Deckenlampe Button double press
    initial_state: on
    trigger: 
      - entity_id: sensor.deckenlampe
        platform: state
        to: '{"TRIG":"DOUBLE"}'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.fernseher
                state: 'on'
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fernseher
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.fernseher
                state: 'off'
            sequence:
              - service: switch.turn_on
                data:
                  entity_id: switch.fernseher

  - alias: Lichtschalter Button Hold
    initial_state: on
    trigger: 
      - entity_id: sensor.lichtschalter
        platform: state
        to: '{"TRIG":"HOLD"}'
    action:
      - choose:
          - conditions:
              - condition: and
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: light.bett_gluhbirne
                        state: 'off'
                      - condition: state
                        entity_id: light.bett_gluhbirne
                        state: 'unavailable'
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                        state: 'off'
                      - condition: state
                        entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                        state: 'unavailable'
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: light.leds_tisch
                        state: 'off'
                      - condition: state
                        entity_id: light.leds_tisch
                        state: 'unavailable'
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: light.yeelight_stripe_0x00000000036d0c16
                        state: 'off'
                      - condition: state
                        entity_id: light.yeelight_stripe_0x00000000036d0c16
                        state: 'unavailable'
            sequence:
              - service: light.turn_on
                data:
                  entity_id: 
                    - light.leds_tisch
                    - light.yeelight_stripe_0x00000000036d0c16
                  brightness: 255
                  transition: 2
              - choose:
                  - conditions:
                      - condition: or
                        conditions:
                          - condition: state
                            entity_id: light.yeelight_stripe_0x00000000036d0c16
                            state: 'unavailable'
                          - condition: state
                            entity_id: light.yeelight_stripe_0x00000000036d0c16
                            state: 'unavailable'
                    sequence:
                      - service: light.turn_on
                        data:
                          entity_id: 
                            - light.bett_gluhbirne
                            - light.yeelight_bslamp2_0x0000000013fea10f
                          brightness: 255
                          transition: 2
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.yeelight_stripe_0x00000000036d0c16
                    state: 'on'
                    for:
                      seconds: 1
                  - condition: state
                    entity_id: light.leds_tisch
                    state: 'on'
                    for:
                      seconds: 1
                  - condition: state
                    entity_id: light.bett_gluhbirne
                    state: 'on'
                    for:
                      seconds: 1
                  - condition: state
                    entity_id: light.yeelight_bslamp2_0x0000000013fea10f
                    state: 'on'
                    for:
                      seconds: 1
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.lichtschalter
              - service: light.turn_off
                data:
                  entity_id: group.schlafzimmer

  - alias: Lichtschalter Button double press
    initial_state: on
    trigger: 
      - entity_id: sensor.lichtschalter
        platform: state
        to: '{"TRIG":"DOUBLE"}'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.fabian_strom
                state: 'on'
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.fabian_strom
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.fabian_strom
                state: 'off'
            sequence:
              - service: switch.turn_on
                data:
                  entity_id: switch.fabian_strom

  - alias: Restart Bluetooth on TV
    initial_state: off
    trigger:
      - platform: state
        entity_id: automation.restart_bluetooth_on_tv
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: device_tracker.tv
          state: 'home'
    action:
      - service: androidtv.adb_command
        data:
          entity_id: media_player.wohnzimmer_tv
          command: "settings put global bluetooth_disabled_profiles 0"
      - delay: '00:00:01'
      - service: androidtv.adb_command
        data:
          entity_id: media_player.wohnzimmer_tv
          command: "settings put global bluetooth_disabled_profiles 1"
      - service: automation.turn_off
        data:
          entity_id: automation.restart_bluetooth_on_tv

  - alias: Notify for high humidity
    trigger:
      - platform: numeric_state
        entity_id: 
          - climate.gastezimmer
          - climate.wohnzimmer
          - climate.schlafzimmer
          - climate.bad
        attribute: current_humidity
        above: 60
    condition:
      condition: and
      conditions:
        - condition: time
          before: '22:00:00'
        - condition: time
          after: '10:00:00'
        - condition: state
          entity_id: input_boolean.silent_mode
          state: 'off'
        - condition: not
          conditions:
            - condition: state
              entity_id: automation.notify_for_high_humidity
              attribute: last_triggered
              state: none
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_high_humidity.attributes.last_triggered) | int > 7200 }}"
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_high_humidity_when_coming_home.attributes.last_triggered) | int > 7200 }}"
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.fabian_iphone
              state: home
            - condition: state
              entity_id: device_tracker.50_3d_c6_5b_4f_bd
              state: home
        - condition: or
          conditions:
            - condition: numeric_state
              entity_id: climate.gastezimmer
              attribute: current_humidity
              above: 60
            - condition: numeric_state
              entity_id: climate.wohnzimmer
              attribute: current_humidity
              above: 60
            - condition: numeric_state
              entity_id: climate.schlafzimmer
              attribute: current_humidity
              above: 60
            - condition: numeric_state
              entity_id: climate.bad
              attribute: current_humidity
              above: 60
    action:
      - service: media_player.volume_set
        data_template:
          volume_level: 0.6
          entity_id:
            - media_player.schlafzimmer
            - media_player.wohnzimmer_mini
      - service: media_player.media_pause
        data: 
          entity_id: media_player.wohnzimmer_tv
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.wohnzimmer_mini
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.wohnzimmer_mini
                data_template:
                  message: >
                    Die Luftfeuchtigkeit ist zu hoch im Raum
                    {% if (states.climate.gastezimmer.attributes.current_humidity) > 60 %}
                    Gästezimmer, 
                    {% endif %}
                    {% if (states.climate.wohnzimmer.attributes.current_humidity) > 60 %}
                    Wohnzimmer,
                    {% endif %}
                    {% if (states.climate.schlafzimmer.attributes.current_humidity) > 60 %}
                    Schlafzimmer,
                    {% endif %}
                    {% if (states.climate.bad.attributes.current_humidity) > 60 %}
                    Bad,
                    {% endif %}
                    Bitte lüften.
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.kueche_mini
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.kueche_mini
                data_template:
                  message: >
                    Die Luftfeuchtigkeit ist zu hoch im Raum
                    {% if (states.climate.gastezimmer.attributes.current_humidity) > 60 %}
                    Gästezimmer, 
                    {% endif %}
                    {% if (states.climate.wohnzimmer.attributes.current_humidity) > 60 %}
                    Wohnzimmer,
                    {% endif %}
                    {% if (states.climate.schlafzimmer.attributes.current_humidity) > 60 %}
                    Schlafzimmer,
                    {% endif %}
                    {% if (states.climate.bad.attributes.current_humidity) > 60 %}
                    Bad,
                    {% endif %}
                    Bitte lüften.
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.schlafzimmer
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.schlafzimmer
                data_template:
                  message: >
                    Die Luftfeuchtigkeit ist zu hoch im Raum
                    {% if (states.climate.gastezimmer.attributes.current_humidity) > 60 %}
                    Gästezimmer, 
                    {% endif %}
                    {% if (states.climate.wohnzimmer.attributes.current_humidity) > 60 %}
                    Wohnzimmer,
                    {% endif %}
                    {% if (states.climate.schlafzimmer.attributes.current_humidity) > 60 %}
                    Schlafzimmer,
                    {% endif %}
                    {% if (states.climate.bad.attributes.current_humidity) > 60 %}
                    Bad,
                    {% endif %}
                    Bitte lüften.
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'off'
              - condition: state
                entity_id: media_player.gastezimmer_mini
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: media_player.gastezimmer_mini
                data_template:
                  message: >
                    Die Luftfeuchtigkeit ist zu hoch im Raum
                    {% if (states.climate.gastezimmer.attributes.current_humidity) > 60 %}
                    Gästezimmer, 
                    {% endif %}
                    {% if (states.climate.wohnzimmer.attributes.current_humidity) > 60 %}
                    Wohnzimmer,
                    {% endif %}
                    {% if (states.climate.schlafzimmer.attributes.current_humidity) > 60 %}
                    Schlafzimmer,
                    {% endif %}
                    {% if (states.climate.bad.attributes.current_humidity) > 60 %}
                    Bad,
                    {% endif %}
                    Bitte lüften.
      - service: media_player.volume_set
        data:
          volume_level: 0.3
          entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.schlafzimmer

  - alias: Notify for extreme high humidity
    trigger:
      - platform: numeric_state
        entity_id: 
          - climate.gastezimmer
          - climate.wohnzimmer
          - climate.schlafzimmer
          - climate.bad
        attribute: current_humidity
        above: 67
    condition:
      - condition: state
        entity_id: device_tracker.fabian_iphone
        state: not_home
      - condition: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        state: not_home
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_extreme_high_humidity.attributes.last_triggered) | int > 32400 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Achtung, sehr hohe Luftfeuchtigkeit. {% if (states.climate.gastezimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Gästezimmer {{ states.climate.gastezimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.wohnzimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Wohnzimmer {{ states.climate.wohnzimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.schlafzimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Schlafzimmer {{ states.climate.schlafzimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.bad.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Bad {{ states.climate.bad.attributes.current_humidity }} %. {% endif %}'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Achtung, sehr hohe Luftfeuchtigkeit. {% if (states.climate.gastezimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Gästezimmer {{ states.climate.gastezimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.wohnzimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Wohnzimmer {{ states.climate.wohnzimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.schlafzimmer.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Schlafzimmer {{ states.climate.schlafzimmer.attributes.current_humidity }} %. {% endif %} {% if (states.climate.bad.attributes.current_humidity) > 67 %} Luftfeuchtigkeit Bad {{ states.climate.bad.attributes.current_humidity }} %. {% endif %}'

  - alias: Notify for high humidity when coming home
    initial_state: true
    trigger:
      - platform: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.fabian_iphone
        from: 'not_home'
        to: 'home'
    condition:
      - condition: or
        conditions:
          - condition: numeric_state
            entity_id: climate.gastezimmer
            attribute: current_humidity
            above: 57
          - condition: numeric_state
            entity_id: climate.wohnzimmer
            attribute: current_humidity
            above: 57
          - condition: numeric_state
            entity_id: climate.schlafzimmer
            attribute: current_humidity
            above: 57
          - condition: numeric_state
            entity_id: climate.bad
            attribute: current_humidity
            above: 57
      - condition: state
        entity_id: 'input_boolean.silent_mode'
        state: 'off'
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: time
        before: '22:00:00'
      - condition: time
        after: '08:00:00'
      - condition: not
        conditions:
          - condition: state
            entity_id: automation.notify_for_high_humidity_when_coming_home
            attribute: last_triggered
            state: none
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_high_humidity_when_coming_home.attributes.last_triggered) | int > 4200 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_high_humidity.attributes.last_triggered) | int > 4200 }}"
    action:
      - delay: 00:03:00
      - service: media_player.volume_set
        data_template:
          volume_level: 0.7
          entity_id:
            - media_player.schlafzimmer
            - media_player.wohnzimmer_mini
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
          - media_player.schlafzimmer
          #- media_player.mpd
        data_template: 
          message: >
            Die Luftfeuchtigkeit ist zu hoch im Raum
            {% if (states.climate.gastezimmer.attributes.current_humidity) > 55 %}
            Gästezimmer, 
            {% endif %}
            {% if (states.climate.wohnzimmer.attributes.current_humidity) > 55 %}
            Wohnzimmer,
            {% endif %}
            {% if (states.climate.schlafzimmer.attributes.current_humidity) > 55 %}
            Schlafzimmer,
            {% endif %}
            {% if (states.climate.bad.attributes.current_humidity) > 55 %}
            Bad,
            {% endif %}
            Bitte lüften.
      - service: media_player.volume_set
        data:
          volume_level: 0.3
          entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.schlafzimmer
          
  - alias: Notify for high humidity when coming home weekend
    initial_state: true
    trigger:
      - platform: state
        entity_id: device_tracker.50_3d_c6_5b_4f_bd
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: device_tracker.fabian_iphone
        from: 'not_home'
        to: 'home'
    condition:
      - condition: numeric_state
        entity_id: 
          - climate.gastezimmer
          - climate.wohnzimmer
          - climate.schlafzimme
          - climate.bad
        attribute: current_humidity
        above: 55
      - condition: state
        entity_id: 'input_boolean.silent_mode'
        state: 'off'
      - condition: time
        weekday:
          - sat
          - sun
      - condition: time
        before: '22:00:00'
      - condition: time
        after: '11:00:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_for_high_humidity_when_coming_home_weekend.attributes.last_triggered) | int > 4200 }}"
    action:
      - delay: 00:03:00
      - service: media_player.volume_set
        data:
          volume_level: 0.7
          entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.schlafzimmer
      - service: tts.google_say
        entity_id: 
        - media_player.wohnzimmer_mini
        - media_player.kueche_mini
        - media_player.schlafzimmer
        data_template:
          message: >
            Willkommen zurück. Die Luftfeuchtigkeit ist zu hoch im
            {% if (states.climate.gastezimmer.attributes.current_humidity) > 55 %}
            Gästezimmer, 
            {% endif %}
            {% if (states.climate.wohnzimmer.attributes.current_humidity) > 55 %}
            Wohnzimmer,
            {% endif %}
            {% if (states.climate.schlafzimmer.attributes.current_humidity) > 55 %}
            Schlafzimmer,
            {% endif %}
            {% if (states.climate.bad.attributes.current_humidity) > 55 %}
            Bad
            {% endif %}
            Bitte lüften.
      - service: media_player.volume_set
        data:
          volume_level: 0.3
          entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.schlafzimmer

  - alias: 'Notify for above 100 corona stats'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        above: 100
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            Notbremse

            - Ausgangssperre von 22 bis 5 Uhr

            - Treffen mit max. einer weiteren Person


            Link: www.stmgp.bayern.de/coronavirus/
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            Notbremse

            - Ausgangssperre von 22 bis 5 Uhr

            - Treffen mit max. einer weiteren Person


            Link: www.stmgp.bayern.de/coronavirus/

  - alias: 'Notify for below 100 corona stats'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        below: 100
      - platform: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        above: 50
    condition:
      - condition: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        above: 50
      - condition: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        below: 100
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            - Öffnung von Einzelhandel als Click and meet mit Terminbuchung

            - Kontaktfreier Sport mit zwei Haushalten in Gruppen bis 20 Personen

            - Weiterhin ein Haushalt bei max 5 Personen


            Link: www.stmgp.bayern.de/coronavirus/
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            - Öffnung von Einzelhandel als Click and meet mit Terminbuchung

            - Kontaktfreier Sport mit zwei Haushalten in Gruppen bis 20 Personen

            - Weiterhin ein Haushalt bei max 5 Personen


            Link: www.stmgp.bayern.de/coronavirus/

  - alias: 'Notify for below 51 corona stats'
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        below: 51
      - platform: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        above: 35
    condition:
      - condition: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        above: 35
      - condition: numeric_state
        entity_id: sensor.coronavirus_lk_ebersberg
        below: 51
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            - Öffnung von Einzelhandel, Museen, Galerien, Zoo, botanische Gärten

            - Kontaktfreier Sport in Gruppen bis 10 Personen

            - Weiterhin ein Haushalt bei max 5 Personen


            Bei 14 Tage 50 und niedriger:

            - Öffnung von Außengastronomie, Theatern, Konzerten, Kinos

            - Kontaktfreier Sport im Innen und Außenbereich bei unbegrenzten


            Link: www.stmgp.bayern.de/coronavirus/
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch gelten folgende Regeln:

            - Öffnung von Einzelhandel, Museen, Galerien, Zoo, botanische Gärten

            - Kontaktfreier Sport in Gruppen bis 10 Personen

            - Weiterhin ein Haushalt bei max 5 Personen


            Bei 14 Tage 50 und niedriger:

            - Öffnung von Außengastronomie, Theatern, Konzerten, Kinos

            - Kontaktfreier Sport im Innen und Außenbereich bei unbegrenzten
            

            Link: www.stmgp.bayern.de/coronavirus/

  - alias: 'Notify for below 36 corona stats'
    initial_state: on
    trigger:
      platform: numeric_state
      entity_id: sensor.coronavirus_lk_ebersberg
      below: 36
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch treten neue Regeln in Kraft:

            - Zwei Haushälte bei 10 Personen maximal


            Link: www.stmgp.bayern.de/coronavirus/
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

            Dadurch treten neue Regeln in Kraft:

            - Zwei Haushälte bei 10 Personen maximal


            Link: www.stmgp.bayern.de/coronavirus/

  - alias: Detect if coal lighter is currently active
    initial_state: on
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        above: 470
        below: 540
        for:
          seconds: 35
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered) | int > 900 }}"
        - condition: state
          entity_id: switch.kohleanzunder
          state: 'on'
    action:
      - service: automation.turn_off
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_oven_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Kohleanzünder wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Kohleanzünder wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Kohleanzünder wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - delay: '00:09:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Bitte Kohle wenden.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Bitte Kohle wenden.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Bitte Kohle wenden.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.keller_tv
                    state: unavailable
            sequence:
              - service: androidtv.adb_command
                data:
                  entity_id: media_player.keller_tv
                  command: "pm clear com.tcl.videoplayer"
              - service: androidtv.adb_command
                data:
                  entity_id: media_player.keller_tv
                  command: "am start -a android.intent.action.VIEW -d /sdcard/jonny_rozay_shisha_smoke.mp4 -t video/mp4"
      - delay: '00:08:00'
      - service: switch.turn_off
        data:
          entity_id: switch.kohleanzunder
      - delay: '00:01:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Die Kohle sollte fertig sein! Strom wurde ausgeschaltet.'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Die Kohle sollte fertig sein! Strom wurde ausgeschaltet.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Die Kohle sollte fertig sein! Strom wurde ausgeschaltet.'
      - service: automation.turn_on
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_oven_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "pm clear com.tcl.videoplayer"
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "am start -a android.intent.action.VIEW -d /sdcard/bitte_gib_mir_die_shisha.mp4 -t video/mp4"

  - alias: Detect if oven is currently active
    initial_state: on
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        above: 1400
        below: 1500
        for:
          seconds: 35
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.detect_if_oven_is_currently_active.attributes.last_triggered) | int > 1020 }}"
        - condition: state
          entity_id: switch.kohleanzunder
          state: 'on'
    action:
      - service: automation.turn_off
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Der Ofen wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Der Ofen wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Der Ofen wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - delay: '00:13:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Das Gericht im Ofen sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Das Gericht im Ofen sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Das Gericht im Ofen sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - service: automation.turn_on
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "pm clear com.tcl.videoplayer"
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "am start -a android.intent.action.VIEW -d /sdcard/raab_mib.mp4 -t video/mp4"
      - delay: '00:05:00'
      - service: switch.turn_off
        data:
          entity_id: switch.kohleanzunder

  - alias: Detect if pizzamaker is currently active
    initial_state: on
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        above: 1100
        below: 1250
        for:
          seconds: 35
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.detect_if_pizzamaker_is_currently_active.attributes.last_triggered) | int > 600 }}"
        - condition: state
          entity_id: switch.kohleanzunder
          state: 'on'
    action:
      - service: automation.turn_off
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_oven_is_currently_active
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Der Pizzamaker wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Der Pizzamaker wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Der Pizzamaker wurde eingeschaltet.'
                  inline_keyboard:
                    - "Dauer:/remaining_time"
      - delay: '00:05:00'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_5friends
                  message: 'Das Gericht im Pizzamaker sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_afk
                  message: 'Das Gericht im Pizzamaker sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - choose:
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: device_tracker.flophone
                    state: home
                  - condition: state
                    entity_id: device_tracker.galaxy_s9
                    state: home
                  - condition: state
                    entity_id: person.kai
                    state: home
                  - condition: state
                    entity_id: person.adri
                    state: home
            sequence:
              - service: telegram_bot.send_message
                data_template:
                  target: !secret telegram_chat_fabian
                  message: 'Das Gericht im Pizzamaker sollte fertig sein! Strom wird in 5 min ausgeschaltet.'
      - service: automation.turn_on
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_oven_is_currently_active
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "pm clear com.tcl.videoplayer"
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "am start -a android.intent.action.VIEW -d /sdcard/raab_pizza.mp4 -t video/mp4"
      - delay: '00:05:00'
      - service: switch.turn_off
        data:
          entity_id: switch.kohleanzunder

  - alias: Detect if Washing machine is currently active
    initial_state: on
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        above: 22
        below: 469
        for:
          seconds: 40
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.detect_if_washing_machine_is_currently_active.attributes.last_triggered) | int > 5400 }}"
        - condition: state
          entity_id: switch.waschmaschine
          state: 'on'
    action:
      - service: notify.telegram_nessie
        data:
          message: 'Die Waschmaschine wurde gestartet. Wähle das Waschprogramm aus um eine Zeit zu erhalten, wann die Waschmaschine fertig ist:'
          data:
            inline_keyboard:
            - '30° Pflegeleicht:/washerstart30, 40° Pflegeleicht:/washerstart40, 40° Koch-Bunt:/washerstart40kb, 20° Fein:/washerstart20fw, 60° Koch-Bunt:/washerstart60kb'
      - service: notify.telegram_fabian
        data:
          message: 'Die Waschmaschine wurde gestartet. Wähle das Waschprogramm aus um eine Zeit zu erhalten, wann die Waschmaschine fertig ist:'
          data:
            inline_keyboard:
            - '30° Pflegeleicht:/washerstart30, 40° Pflegeleicht:/washerstart40, 40° Koch-Bunt:/washerstart40kb, 20° Fein:/washerstart20fw, 60° Koch-Bunt:/washerstart60kb'
      - service: automation.turn_on
        data:
          entity_id: 
            - automation.set_washing_machine_active_when_power_detected
            - automation.set_washing_machine_clean_when_power_drops
      - service: automation.turn_off
        data:
          entity_id: 
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_oven_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
            - automation.detect_if_washing_machine_is_currently_active
 
  - alias: Set washing machine active when power detected
    initial_state: off
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        above: 22
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: sensor.washing_machine_state
          state: Idle
        - condition: state
          entity_id: sensor.washing_machine_state
          state: Clean
        - condition: state
          entity_id: sensor.washing_machine_state
          state: Finishing
        #- condition: template
        #  value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.detect_if_coal_lighter_is_currently_active.attributes.last_triggered) | int > 50 }}"
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.washing_machine_status
          option: Running
  
  # When the power drops, move the state of the washing machine to Clean  
  - alias: Set washing machine clean when power drops
    initial_state: off
    trigger:
      - platform: numeric_state
        entity_id: sensor.keller_steckdose_energy_power
        below: 5
        for:
          minutes: 3
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.washing_machine_status
          state: Running
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.washing_machine_status
          option: Clean
      - service: notify.telegram_nessie
        data:
          message: 'Die Waschmaschine ist fertig.'
      - service: notify.telegram_fabian
        data:
          message: 'Die Waschmaschine ist fertig.'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.wohnzimmer_mini
                    state: 'playing'
            sequence:
              - service: tts.google_say
                entity_id: media_player.wohnzimmer_mini
                data:
                  message: 'Die Waschmaschine ist fertig.'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.kueche_mini
                    state: 'playing'
            sequence:
              - service: tts.google_say
                entity_id: media_player.kueche_mini
                data:
                  message: 'Die Waschmaschine ist fertig.'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: media_player.schlafzimmer
                    state: 'playing'
            sequence:
              - service: tts.google_say
                entity_id: media_player.schlafzimmer
                data:
                  message: 'Die Waschmaschine ist fertig.'
      - service: automation.turn_on
        data:
          entity_id: 
            - automation.detect_if_washing_machine_is_currently_active
            - automation.detect_if_coal_lighter_is_currently_active
            - automation.detect_if_oven_is_currently_active
            - automation.detect_if_pizzamaker_is_currently_active
      #- service: tts.google_say
      #  entity_id: 
      #  - media_player.wohnzimmer_mini
      #  - media_player.schlafzimmer
      #  data_template:
      #    message: '{% if (is_state("input_boolean.silent_mode", "off")) -%} Die Waschmaschine ist fertig. {%- endif %} '
      - service: switch.turn_off
        data:
          entity_id: switch.waschmaschine
      - service: automation.turn_off
        data:
          entity_id: automation.set_washing_machine_finished_when_power_drops

  - alias: Set washing machine idle after timeout
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_select.washing_machine_status
        to: Clean
        for:
          minutes: 120
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.washing_machine_status
          option: Idle

  - alias: 'Remind for going off'
    initial_state: on
    trigger:
      platform: time
      at: '22:05:00'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
        - condition: state
          entity_id: device_tracker.schnuppes_pc
          state: home
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.schnuppes_pc
                state: home
            sequence:
              #- service: notify.browser
              #  data_template:
              #    message: "Es ist 22 Uhr - Zeit off zu gehen."
              #    target: Nessie-PC
              #  data:
              #    data:
              #      tag: 'notification-about-sensor'
              - service: notify.mobile_app_nessie_phone
                data_template:
                  title: "Zeit off zu gehen"
                  message: "Es ist 22 Uhr."
                data:
                  data:
                    tag: 'notification-about-sensor'
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: device_tracker.fabian_pc
                    state: home
                  - condition: state
                    entity_id: device_tracker.nsta0516_lan
                    state: home
            sequence:
              #- service: notify.browser
              #  data_template:
              #    message: "Es ist 22 Uhr - Zeit off zu gehen."
              #    target: 
              #      - Fabian-PC
              #      - Fabian-Hackbook
              #  data:
              #    data:
              #      tag: 'notification-about-sensor'
              - service: notify.mobile_app_fabian_phone
                data_template:
                  title: "Zeit off zu gehen"
                  message: "Es ist 22 Uhr."
                data:
                  data:
                    tag: 'notification-about-sensor'

#  - alias: 'Turn on Airplane Mode Fabi'
#    initial_state: on
#    trigger:
#      - platform: time
#        at: '23:30:00'
#      - platform: time
#        at: '03:30:00'
#    condition:
#      condition: and
#      conditions:
#        - condition: time
#          weekday:
#            - mon
#            - tue
#            - wed
#            - thu
#            - sun
#        - condition: state
#          entity_id: device_tracker.fabian_iphone
#          state: home
#        - condition: template
#          value_template: >
#            {% set domain = 'light' %}
#            {% set state = 'off' %}
#            {{ states[domain] | count == states[domain] | selectattr('state','eq', state) | list | count }}
#    action:
#      - service: notify.mobile_app_fabian_phone
#        data_template:
#          title: "Flugmodus"
#          message: "Flugmodus wurde vergessen und wird nun automatisch aktiviert!"
#        data:
#          data:
#            tag: 'notification-about-sensor'

  - alias: 'Telegram urgent message'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/urgent'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: 'Alle Google Homes werden Fabi/Nessie über eine wichtige Nachricht bescheid geben.'
      - service: media_player.volume_set
        data:
          volume_level: 0.7
          entity_id: media_player.wohnzimmer_mini
      - service: tts.google_say
        entity_id: 
        - media_player.wohnzimmer_mini
        - media_player.kueche_mini
        - media_player.schlafzimmer
        #- media_player.gastezimmer_mini
        data_template:
          message: >
            Wichtige Nachricht von
            {% if (is_state("trigger.event.data.user_id", "649657901")) -%}
            Fabian 
            {% elif (is_state("trigger.event.data.user_id", "654536464")) -%}
            Nessie 
            {% elif (is_state("trigger.event.data.user_id", "665446537")) -%}
            Kai 
            {% elif (is_state("trigger.event.data.user_id", "159366362")) -%}
            Adri 
            {% elif (is_state("trigger.event.data.user_id", "668937527")) -%}
            Flo 
            {% elif (is_state("trigger.event.data.user_id", "610791756")) -%}
            Maxi 
            {% else %}
            jemandem 
            {% endif %}
            Schau auf dein Handy!
      - service: media_player.volume_set
        data:
          volume_level: 0.3
          entity_id: media_player.wohnzimmer_mini

  - alias: 'Telegram open door'
    initial_state: on
    trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/open'
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/alohomora'
    condition:
      - condition: not
        conditions:
        - condition: state
          entity_id: switch.schloss
          state: unavailable
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: 'Gartentor wurde geöffnet.'

  - alias: 'Telegram open door not working'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/open'
    condition:
      - condition: state
        entity_id: switch.schloss
        state: 'unavailable'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: 'Der Gartentoröffner ist aktuell offline. Das Gartentor wurde NICHT geöffnet. Fabian wurde informiert.'
      - service: notify.telegram_fabian
        data:
          message: "Gartentoröffner ist offline! Bitte neustarten."

  - alias: 'Telegram virtual bell'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/klingel'
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.schloss
      - service: media_player.volume_set
        data:
          volume_level: 0.7
          entity_id: media_player.wohnzimmer_mini
      - service: tts.google_say
        entity_id: 
          - media_player.wohnzimmer_mini
          - media_player.kueche_mini
        data_template:
          message: >
            Ding Dong, es klingelt.
            {% if ("trigger.event.data.user_id", "649657901")%} 
            Fabian 
            {% elif ("trigger.event.data.user_id", "654536464")%} 
            Nessie
            {% elif ("trigger.event.data.user_id", "665446537")%} 
            Kai
            {% elif ("trigger.event.data.user_id", "159366362")%} 
            Adri
            {% else %}
            Jemand
            {% endif %}
            ist da.
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: 'Klingel in Wohnung aktiviert. Gartentor wurde geöffnet.'
      - service: androidtv.adb_command
        data:
          entity_id: media_player.keller_tv
          command: "am start -a android.intent.action.VIEW -d /sdcard/doorbell.wav -t audio/wav"
      - service: media_player.volume_set
        data:
          volume_level: 0.3
          entity_id: media_player.wohnzimmer_mini

  - alias: 'Telegram pill marked done'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/pilldone'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []

  - alias: 'Telegram reset pill counter'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/pillreset'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay. Du nimmst die Pille durch.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: counter.configure
        data:
          entity_id: counter.pille
          value: 28

  - alias: 'Remind Nessie for pill and for turning on thermostats'
    initial_state: on
    trigger:
      platform: time
      at: '19:50:00'
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: counter.pille
                below: '29'
            sequence:
              - service: counter.increment
                target:
                  entity_id: counter.pille
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: counter.pille
                below: 30
                above: 28
            sequence:
              - service: counter.reset
                target:
                  entity_id: counter.pille
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: counter.pille
                below: '21'
            sequence:
              - service: notify.telegram_nessie
                data_template:
                  message: "Pille nehmen nicht vergessen! Heute ist Tag {{ states.counter.pille.state }} von {{ (states.counter.pille.attributes.maximum) - 1 }}."
                  data:
                    inline_keyboard:
                    - 'Erledigt:/pilldone, Erinnern in 1h:/pill1h'
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: counter.pille
                below: 22
                above: 20
            sequence:
              - service: notify.telegram_nessie
                data:
                  message: "Pille nehmen nicht vergessen! Heute ist der letze Tag, an dem du die Pille nehmen musst. Ab morgen kommen für 7 Tage keine Erinnerungen."
                  data:
                    inline_keyboard:
                    - 'Erledigt:/pilldone, Erinnern in 1h:/pill1h, Durchnehmen:/pillreset'
              - service: notify.telegram_fabian
                data:
                  message: "Heute ist der letze Tag, an dem Nessie die Pille nimmt für 7 Tage."
      - choose:
          - conditions:
              - condition: state
                entity_id: 'input_boolean.climate_off'
                state: 'off'
              - condition: not
                conditions:
                  - condition: state
                    entity_id: climate.schlafzimmer
                    state: 'auto'
            sequence:
              - service: notify.telegram_fabian
                data:
                  message: "Das Thermostat im Schlafzimmer war noch auf {{ states.climate.schlafzimmer.attributes.temperature }} °C eingestellt und wurde nun automatisch eingeschaltet."
              - service: notify.telegram_nessie
                data:
                  message: "Das Thermostat im Schlafzimmer war noch auf {{ states.climate.schlafzimmer.attributes.temperature }} °C eingestellt und wurde nun automatisch eingeschaltet."
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.schlafzimmer
                  hvac_mode: auto

  - alias: 'Nessie forgot pill'
    initial_state: on
    trigger:
      - platform: time
        at: '23:00:00'
    condition:
      condition: and
      conditions:
        - condition: not
          conditions:
            - condition: state
              entity_id: automation.telegram_pill_marked_done
              attribute: last_triggered
              state: none
        - condition: numeric_state
          entity_id: counter.pille
          below: '22'
        - condition: state
          entity_id: person.nessie
          state: home
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_pill_marked_done.attributes.last_triggered) | int > 10800 }}"
    action:
      - service: tts.google_say
        entity_id: media_player.schlafzimmer
        data:
          message: 'Nessie, du hast die Pille vergessen'
      - service: notify.telegram_nessie
        data:
          message: "Du hast die Pille vergessen!"
          data:
            inline_keyboard:
            - 'Erledigt:/pilldone, Erinnern1h:/pill1h'

  - alias: 'Telegram pill 1h'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/pill1h'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, eine Stunde'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - delay: '00:60:00'
      - service: notify.telegram_nessie
        data:
          message: "Pille nehmen nicht vergessen!"
          data:
            inline_keyboard:
            - 'Erledigt:/pilldone, Erinnern1h:/pill1h'

  - alias: 'Telegram Washing mashine set program 30 degrees pflegeleicht'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/washerstart30'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, Programm gesetzt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: notify.telegram_nessie
        data:
          message: '30 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'
      - service: notify.telegram_fabian
        data:
          message: '30 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'

  - alias: 'Telegram Washing mashine set program 20 degrees feinwasche'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/washerstart20fw'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, Programm gesetzt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: notify.telegram_nessie
        data:
          message: '20 Grad Feinwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'
      - service: notify.telegram_fabian
        data:
          message: '20 Grad Feinwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'

  - alias: 'Telegram Washing mashine set program 60 degrees koch bunt'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/washerstart60kb'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, Programm gesetzt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: notify.telegram_nessie
        data:
          message: '60 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'
      - service: notify.telegram_fabian
        data:
          message: '60 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'

  - alias: 'Telegram Washing mashine set program 40 degrees pflegeleicht'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/washerstart40'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, Programm gesetzt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: notify.telegram_nessie
        data:
          message: '40 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'
      - service: notify.telegram_fabian
        data:
          message: '40 Grad Pflegeleicht wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'

  - alias: 'Telegram Washing mashine set program 40 degrees Koch Bunt'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/washerstart40kb'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, Programm gesetzt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: notify.telegram_nessie
        data:
          message: '40 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'
      - service: notify.telegram_fabian
        data:
          message: '40 Grad Koch-/Buntwäsche wurde als Waschmaschinen Programm ausgewählt. Voraussichtlich fertig um {{ states.sensor.washing_machine_finish_time.state }} Uhr.'

  - alias: 'Telegram shutdown fpc'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/shutdownfpc'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'PC wird heruntergefahren, Strom wird ausgeschaltet.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.fs_strom

  - alias: 'Telegram hibernate fpc'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/hibernatefpc'
    action:
      - service: shell_command.hibernatefpc
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'OK, PC wird in Ruhezustand gestellt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []

  - alias: 'Telegram shutdown npc'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/shutdownnpc'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'PC wird heruntergefahren, Strom wird ausgeschaltet.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.vk_strom

  - alias: 'Telegram hibernate npc'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/hibernatenpc'
    action:
      - service: shell_command.hibernatenpc
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'OK, PC wird in Ruhezustand gestellt.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []

  - alias: Telegram Reboot HA
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/rebootha'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "Restarting Homeassistant Container..."
      - service: homeassistant.restart

  - alias: Telegram Reboot
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/reboot'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "Rebooting Server..."
      - delay: 00:00:05
      - service: shell_command.restartha

  - alias: Telegram Help
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/help'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "Hier sind ein paar Befehle:
          
          /admin - Übersicht der Admin Befehle
          /food - zufälliger Essensvorschlag"

  - alias: Telegram Admin
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/admin'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "Hier sind ein paar Befehle:
          
          /rebootha - Neustart Homeassistant Container
          /reboot - Neustart Homeassistant Core
          /status - Homeassistant Status
          /updateha - Homeassistant Update starten"

  - alias: Telegram Status
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/status'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "System is online!
          Last system reboot was on {{ states('sensor.last_boot') }}."

  - alias: 'Tägliche Essensvorschläge'
    initial_state: off
    trigger:
      platform: time
      at: '16:00:00'
    action:
      - service: shell_command.randomfood
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Gericht heute zubereiten?'
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/telegramno'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Gericht heute zubereiten?'
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/foodno'

  - alias: Telegram Essen
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/food'
    action:
      - service: shell_command.randomfood
        data_template:
          telegram_sender: '{{ trigger.event.data.user_id }}'
      - service: telegram_bot.send_message
        data_template:
          title: 'Gericht heute zubereiten?'
          target: "{{ trigger.event.data.user_id }}"
          message: ''
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/foodno'

  - alias: Telegram Essen Vegetarisch
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/foodv'
    action:
      - service: shell_command.randomfood
        data_template:
          telegram_sender: '{{ trigger.event.data.user_id }}'
          vegetarisch: 'j'
      - service: telegram_bot.send_message
        data_template:
          title: 'Gericht heute zubereiten?'
          target: "{{ trigger.event.data.user_id }}"
          message: ''
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/foodno'

  - alias: Telegram Essen Fleisch
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/foodn'
    action:
      - service: shell_command.randomfood
        data_template:
          telegram_sender: '{{ trigger.event.data.user_id }}'
          vegetarisch: 'n'
      - service: telegram_bot.send_message
        data_template:
          title: 'Gericht heute zubereiten?'
          target: "{{ trigger.event.data.user_id }}"
          message: ''
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/foodno'

  - alias: 'Telegram food yes'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/foodyes'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: !secret telegram_chat_nessie
          inline_keyboard: []
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: !secret telegram_chat_fabian 
          inline_keyboard: []
      - service: shell_command.foodyes
      
  - alias: 'Telegram food no'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/foodno'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay, neues Essen.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: shell_command.randomfood
        data_template:
          telegram_sender: '{{ trigger.event.data.user_id }}'
      - service: telegram_bot.send_message
        data_template:
          title: 'Gericht heute zubereiten?'
          target: "{{ trigger.event.data.user_id }}"
          message: ''
          disable_notification: true
          inline_keyboard:
            - 'Ja:/foodyes, Nein:/foodno'

  - alias: 'Telegram answer no'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/telegramno'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Okay.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
          
  - alias: 'Telegram answer cancel light turn off'
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/cancellight'
    action:
      - service: telegram_bot.answer_callback_query
        data_template:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: 'Licht wird in 20 Minuten NICHT ausgeschaltet.'
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []

  - alias: Turn off everything in keller if tv is unavailable
    initial_state: on
    trigger:
      platform: state
      entity_id: media_player.keller_tv
      to: 'unavailable'
      for:
        minutes: 10
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.fernseher_keller
          state: 'off'
        - condition: state
          entity_id: switch.strom_keller
          state: 'off'
    action:
    - service: switch.turn_off
      data:
        entity_id: switch.kuhlschrank
    - service: switch.turn_off
      data:
        entity_id: switch.keller_usb_ports

  - alias: Remind for light keller
    initial_state: on
    trigger:
      platform: state
      entity_id: media_player.keller_tv
      from: 'unavailable'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '17:00:00'
          before: '00:00:00'
        - condition: template
          value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.remind_for_light_keller.attributes.last_triggered) | int > 12000 }}"
        - condition: or
          conditions:
            - condition: state
              entity_id: group.schlafzimmer
              state: 'on'
            - condition: state
              entity_id: group.wohnzimmer
              state: 'on'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: >
            Es ist noch Licht oder Strom an im
            {% if (is_state("group.schlafzimmer", "on")) -%}
            Schlafzimmer
            {% endif %}
            {% if (is_state("group.wohnzimmer", "on")) -%}
            Wohnzimmer
            {% endif %}
            {% if (is_state("group.gastezimmer", "on")) -%}
            & Gästezimmer
            {% endif %}
            . Ausschalten?

  - alias: Set climate living room if in keller
    initial_state: on
    trigger:
      platform: state
      entity_id: media_player.keller_tv
      from: 'unavailable'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '17:00:00'
          before: '00:00:00'
    action:
      - service: climate.turn_off
        data:
          entity_id: climate.wohnzimmer

  - alias: Set climate living room if nessie and fabi at PC
    initial_state: on
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        to: 'home'
      - platform: state
        entity_id: device_tracker.schnuppes_pc
        to: 'home'
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        to: 'home'
      - platform: state
        entity_id: device_tracker.nessie_macbook_lan
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.climate_off'
          state: 'off'
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: device_tracker.fabian_pc
              state: 'home'
            - condition: state
              entity_id: device_tracker.nsta0516_lan
              state: 'home'
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.fabian
                  state: 'home'
        - condition: or
          conditions:
            - condition: state
              entity_id: 'switch.nessie_pc'
              state: 'on'
            - condition: not
              conditions:
                - condition: state
                  entity_id: person.nessie
                  state: 'home'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.wohnzimmer
          temperature: 16
          hvac_mode: heat
      - service: automation.turn_on
        data:
          entity_id: automation.set_climate_living_room_if_nessie_and_fabi_not_at_pc

  - alias: Set climate living room if nessie and fabi not at PC
    initial_state: off
    trigger:
      - platform: state
        entity_id: device_tracker.fabian_pc
        to: 'not_home'
      - platform: state
        entity_id: device_tracker.schnuppes_pc
        to: 'not_home'
      - platform: state
        entity_id: device_tracker.nsta0516_lan
        to: 'not_home'
      - platform: state
        entity_id: switch.nessie_pc
        to: 'off'
    condition:
      - condition: state
        entity_id: 'input_boolean.climate_off'
        state: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.wohnzimmer
          hvac_mode: auto
      - service: automation.turn_off
        data:
          entity_id: automation.set_climate_living_room_if_nessie_and_fabi_not_at_pc

  - alias: remind for guest mode
    initial_state: on
    trigger:
      platform: state
      entity_id: media_player.keller_tv
      to: 'unavailable'
      for:
        minutes: 5
    condition:
      condition: and
      conditions:
        - condition: time
          after: '23:00:00'
          before: '06:00:00'
        - condition: state
          entity_id: 'input_boolean.guest_mode'
          state: 'off'
        - condition: not
          conditions:
            - condition: state
              entity_id: calendar.fabianseitz98_gmail_com
              attribute: message
              state: "Gruppentreffen"
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.guest_mode
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          message: 'Übernachtet heute ein Gast? Gast Modus wurde automatisch eingeschaltet.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          message: 'Übernachtet heute ein Gast? Gast Modus wurde automatisch eingeschaltet.'

  - alias: Set climate living room if keller left
    initial_state: on
    trigger:
      platform: state
      entity_id: media_player.keller_tv
      to: 'unavailable'
      for:
        minutes: 10
    condition:
      condition: and
      conditions:
        - condition: time
          after: '17:00:00'
          before: '00:00:00'
        - condition: state
          entity_id: 'input_boolean.climate_off'
          state: 'off'
    action:
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.wohnzimmer
          hvac_mode: auto

  - alias: Telegram Remaining Time Coal Lighter
    initial_state: on
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: '/remaining_time'
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/remaining_time'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: '{{ states.sensor.coal_lighter_finish_duration.attributes.friendly_name }} ist in ungefähr {{ states.sensor.coal_lighter_finish_duration.state }} Minuten fertig.'
          disable_notification: true

  - alias: Turn off fridge
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/fridgeoff'
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.kuhlschrank
      # - service: telegram_bot.answer_callback_query
      #   data_template:
      #     callback_query_id: '{{ trigger.event.data.id }}'
      #     message: 'Okay, wird ausgeschaltet.'
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_5friends
          message: 'Kühlschrank wurde wieder ausgeschaltet.'
          disable_notification: true

  - alias: "Remind for checking google maps ha cookie"
    initial_state: on
    trigger:
      - platform: state
        entity_id: 'device_tracker.google_maps_112174659110860535869'
        attribute: source_type
        to: null
        for:
          minutes: 10
    action:
      - service: notify.telegram_fabian
        data:
          message: "Der Google Maps Homeassistant Coockie scheint abgelaufen zu sein. Bitte erneuern. In der Zwischenzeit funktionieren keine Google Maps Automationen."

  - alias: Telegram HA Update
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/updateha'
    action:
      - service: shell_command.updateha
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.user_id }}"
          message: "Update gestartet."
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []

  # - alias: "Notify Nessie on Train delay Home -> Work"
  # 
  #   initial_state: on
  #   trigger:
  #     - platform: template
  #       value_template: "{{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay | int > 3 }}"
  #   condition:
  #     condition: and
  #     conditions:
  #        - condition: not
  #          conditions:
  #            - condition: state
  #              entity_id: device_tracker.google_maps_112056758146194246561
  #              state: home
  #       - condition: time
  #         after: '06:30:00'
  #         before: '07:10:00'
  #         weekday:
  #           - mon
  #           - tue
  #           - fri
  #   action:
  #     - service: notify.telegram_nessie
  #       data:
  #         title: "Ubahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} hat +{{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} min Verspätung."
  #         message: "Nächste Fahrtmöglichkeit: {{ states.sensor.zorneding_to_leuchtenbergring.attributes.next }} Uhr"

  - alias: "Notify Fabi on sbahn delay Home -> Work"
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: 'sensor.zorneding_to_leuchtenbergring'
        attribute: delay
        above: 5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: device_tracker.fabian_iphone
          state: home
        - condition: template
          value_template: "{{ (as_timestamp(now())-as_timestamp(states.device_tracker.google_maps_112056758146194246561.attributes.last_seen)) < 3600 }}"
        - condition: time
          after: '06:30:00'
          before: '07:10:00'
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
    action:
      - service: notify.telegram_fabian
        data:
          title: "Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} hat +{{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} min Verspätung."
          message: "Nächste Sbahn: {{ states.sensor.zorneding_to_leuchtenbergring.attributes.next }} Uhr"
      - service: notify.telegram_nessie
        data:
          title: "Sbahn um {{ states.sensor.zorneding_to_leuchtenbergring.attributes.departure }} hat +{{ states.sensor.zorneding_to_leuchtenbergring.attributes.delay }} min Verspätung."
          message: "Nächste Sbahn: {{ states.sensor.zorneding_to_leuchtenbergring.attributes.next }} Uhr"

  - alias: "Notify on Sbahn delay Work -> Home"
    initial_state: on
    trigger:
      - platform: numeric_state
        entity_id: 'sensor.starnberg_nord_to_zorneding'
        attribute: delay
        above: 3
    condition:
      condition: and
      conditions:
        - condition: time
          after: '16:45:00'
          before: '17:30:00'
          weekday:
            - mon
            - tue
            - wed
            - thu
        - condition: not
          conditions:
            - condition: state
              entity_id: device_tracker.google_maps_112174659110860535869
              state: home
    action:
      - service: notify.telegram_fabian
        data:
          title: "Sbahn um {{ states.sensor.starnberg_nord_to_zorneding.attributes.departure }} Uhr nach Hause +{{ states.sensor.starnberg_nord_to_zorneding.attributes.delay }} min."
          message: "Nächste Sbahn: {{ states.sensor.starnberg_nord_to_zorneding.attributes.next }} Uhr"

  - alias: 'Notify on Sbahn delay Work Nessie -> Home'
    initial_state: on
    trigger:
      - platform: state
        entity_id:
          - device_tracker.google_maps_112056758146194246561
        from: 'Arbeit Nessie'
        to: 'not_home'
    condition:
      - condition: numeric_state
        entity_id: 'sensor.leuchtenbergring_to_zorneding'
        attribute: delay
        above: 3
    action:
      - service: notify.telegram_nessie
        data:
          message: "Sbahn in Leuchtenbergring um {{ states.sensor.leuchtenbergring_to_zorneding.attributes.departure }} Uhr hat voraussichtlich {{ states.sensor.leuchtenbergring_to_zorneding.attributes.delay }} min Verspätung."

  - alias: 'Notify Kai Adri come to visit'
    initial_state: on
    trigger:
      - platform: state
        entity_id: proximity.home_ka
        attribute: dir_of_travel
        to: 'towards'
    condition:
      - condition: numeric_state
        entity_id: proximity.home_ka
        below: 7
      - condition: state
        entity_id: person.fabian
        state: home
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_kai_adri_come_to_visit.attributes.last_triggered) | int > 1800 }}"
      - condition: or
        conditions:
          - condition: not
            conditions:
              - condition: state
                entity_id: device_tracker.google_maps_104418453164779945782
                state: 'Kai-Adri'
              - condition: state
                entity_id: device_tracker.google_maps_103127589611220223167
                state: 'Kai-Adri'
    action:
      - service: notify.telegram_fabian
        data_template:
          message: >
            {% if (not is_state("device_tracker.google_maps_104418453164779945782", "Kai-Adri")) -%}Kai{% endif %}{% if (not is_state("device_tracker.google_maps_103127589611220223167", "Kai-Adri")) -%} Adri{% endif %} sind auf dem Weg nach Zorneding und noch {{ states.proximity.home_ka.state }} km entfernt von zu Hause.

  - alias: 'Notify Nessie Fabian on way home'
    initial_state: on
    trigger:
      - platform: state
        entity_id: proximity.home_fabian
        attribute: dir_of_travel
        to: 'towards'
        for:
          minutes: 5
    condition:
      - condition: numeric_state
        entity_id: proximity.home_fabian
        above: 3
      - condition: state
        entity_id: person.nessie
        state: home
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_nessie_fabian_on_way_home.attributes.last_triggered) | int > 3600 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_nessie_fabian_on_way_home_from_sta.attributes.last_triggered) | int > 3700 }}"
      - condition: not
        conditions:
          - condition: state
            entity_id: person.fabian
            state: "Arbeit Fabi"
    action:
      - service: notify.telegram_nessie
        data:
          message: "Fabian ist auf dem Weg nach Hause und ist noch {{ states.proximity.home_fabian.state }} km entfernt von zu Hause."

  - alias: 'Notify Fabian Nessie on way home'
    initial_state: on
    trigger:
      - platform: state
        entity_id: proximity.home_nessie
        attribute: dir_of_travel
        to: 'towards'
        for:
          minutes: 4
    condition:
      - condition: numeric_state
        entity_id: proximity.home_nessie
        above: 3
      - condition: state
        entity_id: person.fabian
        state: home
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home.attributes.last_triggered) | int > 1800 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home_from_work.attributes.last_triggered) | int > 3600 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home_from_berufsschule.attributes.last_triggered) | int > 3600 }}"
      - condition: not
        conditions:
          - condition: state
            entity_id: person.nessie
            state: 'arbeit_nessie'
          - condition: state
            entity_id: person.nessie
            state: 'Berufsschule'
    action:
      - service: notify.telegram_fabian
        data:
          message: "Nessie ist auf dem Weg nach Hause und ist noch {{ states.proximity.home_nessie.state }} km entfernt von zu Hause."

  - alias: 'Notify Nessie Fabian on way home from STA'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'Arbeit Fabi'
        to: 'not_home'
    condition:
      - condition: time
        after: '14:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_nessie_fabian_on_way_home_from_sta.attributes.last_triggered) | int > 3600 }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.50_3d_c6_5b_4f_bd
                state: home
              - condition: state
                entity_id: 
                  - input_boolean.silent_mode
                  - input_boolean.guest_mode
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.kueche_mini
                  - media_player.gastezimmer_mini
                data_template:
                  message: 'Fabian ist auf dem Weg nach Hause und kommt voraussichtlich um {{ states.sensor.starnberg_nord_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.starnberg_nord_to_zorneding.attributes.delay }} min Verspätung in Zorneding an.'
      - service: notify.telegram_nessie
        data:
          message: "Fabian ist auf dem Weg nach Hause von Starnberg und kommt voraussichtlich um {{ states.sensor.starnberg_nord_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.starnberg_nord_to_zorneding.attributes.delay }} min Verspätung in Zorneding an."

  - alias: 'Notify Nessie Fabian on way home from GIL'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'Arbeit Fabi GIL'
        to: 'not_home'
    condition:
      - condition: time
        after: '14:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_nessie_fabian_on_way_home_from_gil.attributes.last_triggered) | int > 3600 }}"
    action:
      - service: notify.telegram_nessie
        data:
          message: "Fabian ist auf dem Weg nach Hause von Gilching und kommt voraussichtlich in 1,25 Stunden nach Hause."

  - alias: 'Notify Nessie Fabian on way home from MUC'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'Arbeit Fabi MUC'
        to: 'not_home'
    condition:
      - condition: time
        after: '14:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: notify.telegram_nessie
        data:
          message: "Fabian ist auf dem Weg nach Hause von Gräfelfing und kommt voraussichtlich in einer Stunde in Zorneding an."

  - alias: 'Notify Nessie Fabian on way home from WHM'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.fabian
        from: 'Arbeit Fabi WHM'
        to: 'not_home'
    condition:
      - condition: time
        after: '14:00:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: notify.telegram_nessie
        data:
          message: "Fabian ist auf dem Weg nach Hause von Weilheim. Da er mit dem Auto fährt ist keine Zeitangabe möglich. Voraussichtlich daheim in ca. 1,5 Stunden."

  - alias: 'Notify Fabian Nessie on way home from work'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.nessie
        from: 'Arbeit Nessie'
        to: 'not_home'
    condition:
      - condition: time
        after: '13:15:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home_from_work.attributes.last_triggered) | int > 3600 }}"
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home_from_berufsschule.attributes.last_triggered) | int > 3600 }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_iphone
                state: home
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.kueche_mini
                  - media_player.schlafzimmer
                data_template:
                  message: 'Nessie ist auf dem Weg nach Hause und kommt voraussichtlich um {{ states.sensor.leuchtenbergring_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.leuchtenbergring_to_zorneding.attributes.delay }} min Verspätung in Zorneding an.'
      - service: notify.telegram_fabian
        data:
          message: "Nessie ist auf dem Weg nach Hause und kommt voraussichtlich um {{ states.sensor.leuchtenbergring_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.leuchtenbergring_to_zorneding.attributes.delay }} min Verspätung in Zorneding an."

  - alias: 'Notify Fabian Nessie on way home from Berufsschule'
    initial_state: on
    trigger:
      - platform: state
        entity_id: person.nessie
        from: 'Berufsschule'
        to: 'not_home'
    condition:
      - condition: time
        after: '13:15:00'
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notify_fabian_nessie_on_way_home_from_berufsschule.attributes.last_triggered) | int > 3600 }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: device_tracker.fabian_iphone
                state: home
              - condition: state
                entity_id: input_boolean.silent_mode
                state: 'off'
            sequence:
              - service: tts.google_say
                entity_id: 
                  - media_player.wohnzimmer_mini
                  - media_player.kueche_mini
                  - media_player.schlafzimmer
                data_template:
                  message: 'Nessie ist auf dem Weg nach Hause und kommt voraussichtlich um {{ states.sensor.donnersbergerbruecke_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.donnersbergerbruecke_to_zorneding.attributes.delay }} min Verspätung in Zorneding an.'
      - service: notify.telegram_fabian
        data:
          message: "Nessie ist auf dem Weg nach Hause und kommt voraussichtlich um {{ states.sensor.donnersbergerbruecke_to_zorneding.attributes.arrival }} Uhr mit {{ states.sensor.donnersbergerbruecke_to_zorneding.attributes.delay }} min Verspätung in Zorneding an."

  - alias: 'Telegram send weather forecast'
    initial_state: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/weather'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          disable_notification: true
          message: >
            Wettervorhersage für heute
            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition']}}

            *Momentan {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} °C*

            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['templow']}} °C {{ '\u21F5' }} {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['temperature']}} °C
            
            Niederschlag: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation']}} mm/h, Wahrscheinlichkeit: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation_probability']}} %.

            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

  - alias: 'Telegram send daily weather forecast fabian'
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - device_tracker.fabian_iphone
        from: 'not_home'
        to: 'home'
    condition:
      - condition: time
        before: '10:00:00'
      - condition: time
        after: '05:00:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_send_daily_weather_forecast_fabian.attributes.last_triggered) | int > 36000 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_fabian
          disable_notification: true
          message: >
            Wettervorhersage für heute
            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition']}}

            *Momentan {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} °C*

            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['templow']}} °C {{ '\u21F5' }} {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['temperature']}} °C
            
            Niederschlag: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation']}} mm/h, Wahrscheinlichkeit: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation_probability']}} %.

            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

  - alias: 'Telegram send daily weather forecast nessie'
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - device_tracker.50_3d_c6_5b_4f_bd
        from: 'not_home'
        to: 'home'
    condition:
      - condition: time
        before: '10:00:00'
      - condition: time
        after: '05:00:00'
      - condition: template
        value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.telegram_send_daily_weather_forecast_nessie.attributes.last_triggered) | int > 10800 }}"
    action:
      - service: telegram_bot.send_message
        data_template:
          target: !secret telegram_chat_nessie
          disable_notification: true
          message: >
            Wettervorhersage für heute
            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['condition']}}

            *Momentan {{ states.weather.dwd_weather_ebersberg_1h.attributes.temperature }} °C*

            {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['templow']}} °C {{ '\u21F5' }} {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['temperature']}} °C
            
            Niederschlag: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation']}} mm/h, Wahrscheinlichkeit: {{state_attr('weather.dwd_weather_ebersberg', 'forecast')[0]['precipitation_probability']}} %.

            Corona 7 Tage Inzidenzwert: {{state_attr('sensor.coronavirus_lk_ebersberg', 'incidence')}}

  - alias: 'remind for jek'
    initial_state: True
    trigger:
      - platform: template
        value_template: "{{ as_timestamp(now()) == (as_timestamp(states.calendar.jugendtreffjek_gmail_com.attributes.start_time) - 86400) }}"
      - platform: template
        value_template: "{{ is_state_attr('calendar.jugendtreffjek_gmail_com', 'offset_reached', 'true') }}"
    action:
      - service: shell_command.jek_telegram
      #- service: telegram_bot.send_message
      #  data_template:
      #    target: !secret telegram_chat_jek_group
      #    message: 'Im JEK steht am {{ states.calendar.jugendtreffjek_gmail_com.attributes.start_time }} {{ states.calendar.jugendtreffjek_gmail_com.attributes.message }} an.'